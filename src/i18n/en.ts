/*
 * @Copyright 2021-2022. Institute for Future Intelligence, Inc.
 */

export const i18n_en = {
  translation: {
    name: {
      IFI: 'Institute for Future Intelligence',
      Aladdin: 'Aladdin',
      Tagline: 'Aladdin: Reimagining Design with Explainable AI — Institute for Future Intelligence',
    },

    cookie: {
      Statement: 'By clicking Accept, you agree to our use of cookies to improve your experience with Aladdin.',
      Accept: 'Accept',
    },

    aboutUs: {
      ProductBroughtToYouBy: 'This product is brought to you by',
      TermsOfService: 'Terms of Service',
      PrivacyPolicy: 'Privacy Policy',
      Software: 'Software',
      Content: 'Content',
      Research: 'Research',
      Support: 'Support',
      Acknowledgment: 'Acknowledgment',
      FundingInformation:
        'The National Science Foundation (NSF) generously provided funding for the research and development of this product through grants #2105695 and #2131097. Any opinions, findings, and conclusions or recommendations expressed in this product, however, are those of the authors and do not necessarily reflect the views of NSF.',
      Contact: 'For more information, please contact Charles Xie (charles@intofuture.org).',
      Translators: 'Translators',
    },

    word: {
      AllRightsReserved: 'All Rights Reserved',
      MeterAbbreviation: 'm',
      Version: 'Version',
      Options: 'Options',
      Maximum: 'Maximum',
      Minimum: 'Minimum',
      MaximumNumber: 'Maximum Number',
      MinimumNumber: 'Minimum Number',
      MaximumValue: 'Maximum Value',
      MinimumValue: 'Minimum Value',
      Or: 'Or',
      None: 'None',
      High: 'High',
      Partial: 'Partial',
      Teacher: 'Teacher',
      Class: 'Class',
      Total: 'Total',
      Range: 'Range',
      Press: 'Press',
      Open: 'Open',
      Save: 'Save',
      SaveAsImage: 'Save as Image',
      Update: 'Update',
      Paste: 'Paste',
      Copy: 'Copy',
      Cut: 'Cut',
      Delete: 'Delete',
      Lock: 'Lock',
      Color: 'Color',
      Texture: 'Texture',
      Size: 'Size',
      Thickness: 'Thickness',
      Yes: 'Yes',
      No: 'No',
      OK: 'OK',
      Cancel: 'Cancel',
      Apply: 'Apply',
      Close: 'Close',
      ApplyTo: 'Apply to',
      Clear: 'Clear',
      Warning: 'Warning',
      Reminder: 'Reminder',
      Length: 'Length',
      Width: 'Width',
      Height: 'Height',
      Radius: 'Radius',
      Angle: 'Angle',
      Azimuth: 'Azimuth',
      Coordinates: 'Coordinates',
      Weather: 'Weather',
      Show: 'Show',
      Animate: 'Animate',
      Date: 'Date',
      Time: 'Time',
      Title: 'Title',
      Owner: 'Owner',
      Action: 'Action',
      Rename: 'Rename',
      Location: 'Location',
      Latitude: 'Latitude',
      Month: 'Month',
      Day: 'Day',
      Hour: 'Hour',
      Daylight: 'Daylight',
      Radiation: 'Radiation',
      Temperature: 'Temperature',
      kWh: 'kWh',
      NorthInitial: 'N',
      SouthInitial: 'S',
      EastInitial: 'E',
      WestInitial: 'W',
    },

    shared: {
      NoTexture: 'No Texture',
      FoundationElement: 'Foundation',
      CuboidElement: 'Cuboid',
      PolygonElement: 'Polygon',
      SensorElement: 'Sensor',
      SolarPanelElement: 'Solar Panel',
      WaterHeaterElement: 'Water Heater',
      ParabolicDishElement: 'Parabolic Dish',
      ParabolicTroughElement: 'Parabolic Trough',
      FresnelReflectorElement: 'Fresnel Reflector',
      HeliostatElement: 'Heliostat',
      ElementLocked: 'Locked',
    },

    message: {
      CannotSignIn: 'Cannot sign in',
      CannotSignOut: 'Cannot sign out',
      YourAccountWasCreated: 'Your account was created.',
      CannotCreateAccount: 'Cannot create an account',
      YourAccountSettingsWereSaved: 'Your account settings were saved.',
      CannotSaveYourAccountSettings: 'Cannot save your account settings',
      CannotSaveYourFileToCloud: 'Cannot save your file to the cloud',
      CloudFileNotFound: 'The cloud file was not found',
      CannotOpenCloudFile: 'Cannot open the cloud file',
      CannotOpenCloudFolder: 'Cannot open your cloud folder',
      CannotDeleteCloudFile: 'Cannot delete the cloud file',
      CannotRenameCloudFile: 'Cannot rename the cloud file',
      DoYouWantToSaveChanges: 'Do you want to save changes?',
      NotApplicableToSelectedAction: 'Not Applicable to Selected Action',
      ThisElementIsLocked: 'This element is locked.',
      ThisCannotBeUndone: 'This cannot be undone.',
      AzimuthOfNorthIsZero: 'Azimuth of north is 0°',
      CounterclockwiseAzimuthIsPositive: 'Counter-clockwise is positive',
      MoveCancelledBecauseOfOverlap: 'Move cancelled because of overlap.',
      MoveOutsideBoundaryCancelled: 'Move outside the boundary cancelled.',
      RotationCancelledBecauseOfOverlap: 'Rotation cancelled because of overlap.',
      RotationOutsideBoundaryCancelled: 'Rotation outside the boundary cancelled.',
      ResizingCancelledBecauseOfOverlap: 'Resizing cancelled because of overlap.',
      ResizingOutsideBoundaryCancelled: 'Resizing outside the boundary cancelled.',
      CannotPasteOutsideBoundary: 'Cannot paste outside the boundary.',
      CannotPasteBecauseOfOverlap: 'Cannot paste because of overlap.',
      CannotMoveObjectTooFar: 'Cannot move object too far.',
      ExistingSolarPanelsWillBeRemovedBeforeApplyingNewLayout:
        'Existing solar panels will be removed before applying the new layout.',
      DoYouWantToContinue: 'Do you want to continue?',
      SolarPanelsCannotIntersectWithGround: 'Solar panels cannot intersect with the ground.',
      SolarPanelsCannotOverlapWithOneAnother: 'Solar panels cannot overlap with one another.',
      ScreenshotSaved: 'Screenshot was saved.',
      SimulationStarted: 'Simulation started.',
      SimulationCompleted: 'Simulation completed.',
    },

    menu: {
      mainMenu: 'Main Menu',
      cloudMenu: 'Cloud Menu',
      fileSubMenu: 'File',
      file: {
        CreateNewFile: 'Create New File',
        OpenLocalFile: 'Open Local File',
        SaveAsLocalFile: 'Save as Local File',
        SavingAbortedMustHaveValidFileName: 'Saving aborted! You must have a valid file name',
        OpenCloudFile: 'Open Cloud File',
        SaveCloudFile: 'Save Cloud File',
        SaveAsCloudFile: 'Save as Cloud File',
        SavingAbortedMustHaveValidTitle: 'Saving aborted! You must have a valid title for a cloud file',
        ToSaveYourWorkPleaseSignIn: 'To save your work, please sign in.',
        TakeScreenshot: 'Take Screenshot',
      },
      editSubMenu: 'Edit',
      edit: {
        Undo: 'Undo',
        Redo: 'Redo',
      },
      viewSubMenu: 'View',
      view: {
        TwoDimensionalView: '2D View',
        ResetView: 'Reset',
        ZoomIn: 'Zoom In',
        ZoomOut: 'Zoom Out',
        AutoRotate: 'Auto rotate',
        SiteInformation: 'Site Information',
        DesignInformation: 'Design Information',
        Instruction: 'Instruction',
        StickyNote: 'Sticky Note',
        ShowShadow: 'Show Shadow',
      },
      toolSubMenu: 'Tool',
      tool: {
        Map: 'Map',
        WeatherData: 'Weather Data',
        Heliodon: 'Heliodon',
        SunAndTime: 'Sun & Time',
      },
      analysisSubMenu: 'Analysis',
      physicsSubMenu: 'Physics',
      physics: {
        DailySolarRadiationHeatmap: 'Daily Solar Radiation Heatmap',
        SolarRadiationHeatmapOptions: 'Solar Radiation Heatmap Options',
        SolarRadiationHeatmapGridCellSize: 'Solar Radiation Heatmap Grid Cell Size',
        SolarRadiationHeatmapMaxValue: 'Solar Radiation Heatmap Maximum Value',
      },
      sensorSubMenu: 'Sensor',
      sensor: {
        CollectDailyData: 'Collect Daily Data',
        CollectYearlyData: 'Collect Yearly Data',
        SamplingFrequency: 'Sampling Frequency',
        TimesPerHour: 'Times per Hour',
      },
      solarPanelSubMenu: 'Solar Panel',
      solarPanel: {
        AnalyzeDailyYield: 'Analyze Daily Yield',
        AnalyzeYearlyYield: 'Analyze Yearly Yield',
        AnalyzeVisibility: 'Analyze Visibility',
        PanelDiscretization: 'Panel Discretization',
        Exact: 'Exact',
        Approximate: 'Approximate',
        EnergyGridCellSize: 'Energy Grid Cell Size',
        VisibilityGridCellSize: 'View Factor Grid Cell Size',
        EnergyAnalysisOptions: 'Energy Analysis Options',
        VisibilityAnalysisOptions: 'Visibility Analysis Options',
      },
      parabolicTroughSubMenu: 'Parabolic Trough',
      parabolicTrough: {
        AnalyzeDailyYield: 'Analyze Daily Yield',
        AnalyzeYearlyYield: 'Analyze Yearly Yield',
        GridCellSize: 'Grid Cell Size',
        AnalysisOptions: 'Analysis Options',
      },
      parabolicDishSubMenu: 'Parabolic Dish',
      parabolicDish: {
        AnalyzeDailyYield: 'Analyze Daily Yield',
        AnalyzeYearlyYield: 'Analyze Yearly Yield',
        GridCellSize: 'Grid Cell Size',
        AnalysisOptions: 'Analysis Options',
      },
      tutorialsSubMenu: 'Tutorials',
      solarEnergyScienceSubMenu: 'Solar Science',
      photovoltaicSolarPowerSubMenu: 'Photovoltaic Solar Power',
      concentratedSolarPowerSubMenu: 'Concentrated Solar Power',
      tutorials: {
        SunAngles: 'Sun Angles Relative to an Observer on the Ground',
        InsolationAndClimate: 'Insolation and Climate',
        SolarRadiationToBox: 'Solar Radiation to a Box',
        EffectOfTiltAngleOfSolarPanel: 'Effect of Tilt Angle of a Solar Panel',
        EffectOfAzimuthOfSolarPanel: 'Effect of Azimuth of a Solar Panel',
        SolarTrackers: 'Solar Trackers',
        CoveringGroundWithSolarPanels: 'Why Just Covering the Ground with Solar Panels is not a Good Idea',
        InterRowSpacingOfSolarPanelArray: 'Effect of Inter-Row Spacing in a Solar Panel Array',
        EffectOfOrientationOfSolarPanels: 'Effect of Orientation of Solar Panels',
        EffectOfAzimuthOfParabolicTrough: 'Effect of Azimuth of a Parabolic Trough',
        EffectOfLatusRectumOfParabolicTrough: 'Effect of Latus Rectum of a Parabolic Trough',
        FocusSunlightWithParabolicDish: 'Focus Sunlight with a Parabolic Dish',
      },
      examplesSubMenu: 'Examples',
      solarEnergySubMenu: 'Solar Energy',
      buildingsSubMenu: 'Buildings',
      examples: {
        SunBeamAndHeliodon: 'Sun Beam and Heliodon',
        SolarFarm: 'Solar Farm',
        ParabolicTroughArray: 'Parabolic Trough Array',
        ParabolicDishArray: 'Parabolic Dish Array',
        SolarCanopyFormFactors: 'Solar Canopy Form Factors',
        VegetativeBuffer: 'Vegetative Buffer',
        SolarFarmInRealWorld: 'Solar Farm in the Real World',
        SolarTrackersInRealWorld: 'Solar Trackers in the Real World',
        SimpleHouse: 'Simple House',
        OfficeBuilding: 'Office Building',
        Hotel: 'Hotel',
        Heatmap1: 'Heatmap',
      },
      languageSubMenu: 'Language',
      AboutUs: 'About Us',
    },

    avatarMenu: {
      AccountSettings: 'Account Settings',
      SignIn: 'Sign In',
      SignOut: 'Sign Out',
      IfYouAreAStudent: 'If you are a student',
    },

    skyMenu: {
      Axes: 'Axes',
      Theme: 'Theme',
      ThemeDefault: 'Default',
      ThemeDesert: 'Desert',
      ThemeForest: 'Forest',
      ThemeGrassland: 'Grassland',
      SunlightAttenuationCoefficientInAir: 'Sunlight Attenuation Coefficient in Air',
    },

    groundMenu: {
      Albedo: 'Albedo',
      ImageOnGround: 'Image on Ground',
      RemoveAllUnlockedTrees: 'Remove All Unlocked Trees',
      RemoveAllUnlockedPeople: 'Remove All Unlocked People',
      RemoveAllUnlockedFoundations: 'Remove All Unlocked Foundations',
      RemoveAllUnlockedCuboids: 'Remove All Unlocked Cuboids',
      DoYouReallyWantToRemoveAllPeople: 'Do you really want to remove all the people who are not locked',
      DoYouReallyWantToRemoveAllTrees: 'Do you really want to remove all the trees that are not locked',
      DoYouReallyWantToRemoveAllFoundations: 'Do you really want to remove all the foundations that are not locked',
      DoYouReallyWantToRemoveAllCuboids: 'Do you really want to remove all the cuboids that are not locked',
    },

    foundationMenu: {
      RemoveAllUnlockedSolarPanels: 'Remove All Unlocked Solar Panels',
      RemoveAllUnlockedParabolicTroughs: 'Remove All Unlocked Parabolic Troughs',
      RemoveAllUnlockedParabolicDishes: 'Remove All Unlocked Parabolic Dishes',
      RemoveAllUnlockedFresnelReflectors: 'Remove All Unlocked Fresnel Reflectors',
      RemoveAllUnlockedHeliostats: 'Remove All Unlocked Heliostats',
      RemoveAllUnlockedSensors: 'Remove All Unlocked Sensors',
      RemoveAllUnlockedWalls: 'Remove All Unlocked Walls',
      RemoveAllUnlockedPolygons: 'Remove All Unlocked Polygons',
      RemoveAllUnlockedHumans: 'Remove All Unlocked Humans',
      RemoveAllUnlockedTrees: 'Remove All Unlocked Trees',
      Racks: 'Racks',
      Texture01: 'Texture 1',
      Texture02: 'Texture 2',
      Texture03: 'Texture 3',
      Texture04: 'Texture 4',
      Texture05: 'Texture 5',
      Texture06: 'Texture 6',
      Texture07: 'Texture 7',
      Texture08: 'Texture 8',
      Texture09: 'Texture 9',
      Texture10: 'Texture 10',
      SolarPanels: 'Solar Panels',
      DoYouReallyWantToRemoveAllSolarPanelsOnFoundation:
        'Do you really want to remove all the solar panels on this foundation that are not locked',
      ParabolicTroughs: 'Parabolic Troughs',
      DoYouReallyWantToRemoveAllParabolicTroughsOnFoundation:
        'Do you really want to remove all the parabolic troughs on this foundation that are not locked',
      ParabolicDishes: 'Parabolic Dishes',
      DoYouReallyWantToRemoveAllParabolicDishesOnFoundation:
        'Do you really want to remove all the parabolic dishes on this foundation that are not locked',
      FresnelReflectors: 'Fresnel Reflectors',
      DoYouReallyWantToRemoveAllFresnelReflectorsOnFoundation:
        'Do you really want to remove all the Fresnel reflectors on this foundation that are not locked',
      Heliostats: 'Heliostats',
      DoYouReallyWantToRemoveAllHeliostatsOnFoundation:
        'Do you really want to remove all the heliostats on this foundation that are not locked',
      Sensors: 'Sensors',
      DoYouReallyWantToRemoveAllSensorsOnFoundation:
        'Do you really want to remove all the sensors on this foundation that are not locked',
      Walls: 'Walls',
      DoYouReallyWantToRemoveAllWallsOnFoundation:
        'Do you really want to remove all the walls on this foundation that are not locked',
      Polygons: 'Polygons',
      DoYouReallyWantToRemoveAllPolygonsOnFoundation:
        'Do you really want to remove all the polygons on this foundation that are not locked',
      Humans: 'Humans',
      DoYouReallyWantToRemoveAllHumansOnFoundation:
        'Do you really want to remove all the humans on this foundation who are not locked',
      Trees: 'Trees',
      DoYouReallyWantToRemoveAllTreesOnFoundation:
        'Do you really want to remove all the trees on this foundation that are not locked',
      OnlyThisFoundation: 'Only This Foundation',
      AllConnectedFoundations: 'All Connected Foundations',
      AllFoundations: 'All Foundations',
      AddPolygon: 'Add Polygon',
    },

    cuboidMenu: {
      Texture01: 'Texture 1',
      Texture02: 'Texture 2',
      Texture03: 'Texture 3',
      Texture04: 'Texture 4',
      Texture05: 'Texture 5',
      Texture06: 'Texture 6',
      Texture07: 'Texture 7',
      Texture08: 'Texture 8',
      Texture09: 'Texture 9',
      Texture10: 'Texture 10',
      RemoveAllUnlockedSolarPanels: 'Remove All Unlocked Solar Panels',
      RemoveAllUnlockedSensors: 'Remove All Unlocked Sensors',
      RemoveAllUnlockedPolygons: 'Remove All Unlocked Polygons',
      RemoveAllUnlockedHumans: 'Remove All Unlocked Humans',
      RemoveAllUnlockedTrees: 'Remove All Unlocked Trees',
      Racks: 'Racks',
      SolarPanels: 'Solar Panels',
      DoYouReallyWantToRemoveAllSolarPanelsOnCuboid:
        'Do you really want to remove all the solar panels on this cuboid that are not locked',
      Sensors: 'Sensors',
      DoYouReallyWantToRemoveAllSensorsOnCuboid:
        'Do you really want to remove all the sensors on this cuboid that are not locked',
      Polygons: 'Polygons',
      DoYouReallyWantToRemoveAllPolygonsOnCuboid:
        'Do you really want to remove all the polygons on this cuboid that are not locked',
      Humans: 'Humans',
      DoYouReallyWantToRemoveAllHumansOnCuboid:
        'Do you really want to remove all the humans on this cuboid who are not locked',
      Trees: 'Trees',
      DoYouReallyWantToRemoveAllTreesOnCuboid:
        'Do you really want to remove all the trees on this cuboid that are not locked',
      OnlyThisCuboid: 'Only This Cuboid',
      AllCuboids: 'All Cuboids',
      OnlyThisSide: 'Only This Side',
      AllSidesOfThisCuboid: 'All Sides of This Cuboid',
      AllSidesOfAllCuboids: 'All Sides of All Cuboids',
      AddPolygon: 'Add Polygon',
    },

    polygonMenu: {
      Texture01: 'Texture 1',
      Texture02: 'Texture 2',
      Texture03: 'Texture 3',
      Texture04: 'Texture 4',
      Texture05: 'Texture 5',
      Texture06: 'Texture 6',
      Texture07: 'Texture 7',
      Texture08: 'Texture 8',
      Texture09: 'Texture 9',
      Texture10: 'Texture 10',
      Filled: 'Filled',
      FillTexture: 'Fill Texture',
      FillColor: 'Fill Color',
      LineColor: 'Line Color',
      LineWidth: 'Line Width',
      LineStyle: 'Line Style',
      SolidLine: 'Solid Line',
      DashedLine: 'Dashed Line',
      DottedLine: 'Dotted Line',
      InsertVertexBeforeIndex: 'Insert Vertex Before Index',
      InsertVertexAfterIndex: 'Insert Vertex After Index',
      DeleteVertex: 'Delete Vertex',
      OnlyThisPolygon: 'Only This Polygon',
      AllPolygonsOnSurface: 'All Polygons on the Same Surface',
      AllPolygonsAboveFoundation: 'All Polygons Above Foundation',
      AllPolygons: 'All Polygons',
      Layout: 'Layout',
      SolarPanelArrayLayout: 'Solar Panel Array Layout',
      SolarPanelArrayLayoutParametricDesign: 'Solar Panel Array Layout: Parametric Design',
      SolarPanelArrayModel: 'Solar Panel Model',
      SolarPanelArrayOrientation: 'Orientation',
      SolarPanelArrayTiltAngle: 'Tilt Angle',
      SolarPanelArrayRowWidth: 'Row Width',
      SolarPanelArrayInterRowSpacing: 'Inter-Row Spacing',
      SolarPanelArrayRowAxis: 'Row Axis',
      SolarPanelArrayZonalRowAxis: 'Zonal (East-West)',
      SolarPanelArrayMeridionalRowAxis: 'Meridional (North-South)',
      SolarPanelArrayPoleHeight: 'Pole Height',
      SolarPanelArrayPoleSpacing: 'Pole Spacing',
      LayoutNotAcceptedCheckYourParameters: 'This layout is not accepted. Please check your parameters.',
    },

    treeMenu: {
      ShowModel: 'Show Model',
      Type: 'Type',
      Spread: 'Spread',
    },

    peopleMenu: {
      ChangePerson: 'Change Person',
      Observer: 'Observer',
      ViewFromThisPerson: 'View from This Person',
    },

    solarCollectorMenu: {
      RelativeAzimuth: 'Relative Azimuth',
      PoleHeight: 'Pole Height',
      ExtraPoleHeight: 'Extra Pole Height',
      ExtraPoleHeightInAdditionToHalfWidth: 'Extra Pole Height in Addition to Half Width',
      DrawSunBeam: 'Draw Sun Beam',
      Label: 'Label',
      KeepShowingLabel: 'Keep Showing Label',
    },

    concentratedSolarPowerCollectorMenu: {
      ReflectorReflectance: 'Reflector Reflectance',
      ReceiverAbsorptance: 'Receiver Absorptance',
      ReflectorOpticalEfficiency: 'Reflector Optical Efficiency',
      ReceiverThermalEfficiency: 'Receiver Thermal Efficiency',
    },

    solarPanelMenu: {
      ChangePvModel: 'Change PV Model',
      Orientation: 'Orientation',
      Portrait: 'Portrait',
      Landscape: 'Landscape',
      Panels: 'panels',
      PanelsWide: 'panels wide',
      PanelsLong: 'panels long',
      TiltAngle: 'Tilt Angle',
      SouthFacingIsPositive: 'South facing is positive',
      Tracker: 'Tracker',
      SolarTrackerFollowsSun: 'A tracker follows the sun to increase solar panel outputs.',
      PoleSpacing: 'Pole Spacing',
      NoTracker: 'No Tracker',
      HorizontalSingleAxisTracker: 'Horizontal Single Axis Tracker',
      VerticalSingleAxisTracker: 'Vertical Single Axis Tracker',
      AltazimuthDualAxisTracker: 'Altazimuth Dual Axis Tracker',
      OnlyThisSolarPanel: 'Only This Solar Panel',
      AllSolarPanelsOnSurface: 'All Solar Panels on the Same Surface',
      AllSolarPanelsAboveFoundation: 'All Solar Panels Above the Same Foundation',
      AllSolarPanels: 'All Solar Panels',
    },

    pvModelPanel: {
      SolarPanelSpecs: 'Solar Panel Specs',
      Model: 'Model',
      PanelSize: 'Panel Size',
      Cells: 'Cells',
      CellType: 'Cell Type',
      Monocrystalline: 'Monocrystalline',
      Polycrystalline: 'Polycrystalline',
      ThinFilm: 'Thin Film',
      Black: 'Black',
      Blue: 'Blue',
      ShadeTolerance: 'Shade Tolerance',
      SolarCellEfficiency: 'Solar Cell Efficiency',
      NominalOperatingCellTemperature: 'Nominal Operating Cell Temperature',
      TemperatureCoefficientOfPmax: 'Temperature Coefficient of Pmax',
    },

    parabolicTroughMenu: {
      ModuleLength: 'Module Length',
      Modules: 'modules',
      ModulesLong: 'modules long',
      LatusRectum: 'Latus Rectum',
      OnlyThisParabolicTrough: 'Only This Parabolic Trough',
      AllParabolicTroughsAboveFoundation: 'All Parabolic Troughs Above the Same Foundation',
      AllParabolicTroughs: 'All Parabolic Troughs',
    },

    fresnelReflectorMenu: {
      ModuleLength: 'Module Length',
      Modules: 'modules',
      ModulesLong: 'modules long',
      OnlyThisFresnelReflector: 'Only This Fresnel Reflector',
      AllFresnelReflectorsAboveFoundation: 'All Fresnel Reflectors Above the Same Foundation',
      AllFresnelReflectors: 'All Fresnel Reflectors',
    },

    parabolicDishMenu: {
      ReceiverStructure: 'Receiver Structure',
      CentralPole: 'Central Pole',
      Tripod: 'Tripod',
      RimDiameter: 'Rim Diameter',
      LatusRectum: 'Latus Rectum',
      ExtraPoleHeightInAdditionToRadius: 'Extra Pole Height in Addition to Radius',
      OnlyThisParabolicDish: 'Only This Parabolic Dish',
      AllParabolicDishesAboveFoundation: 'All Parabolic Dishes Above the Same Foundation',
      AllParabolicDishes: 'All Parabolic Dishes',
    },

    wallMenu: {
      TextureDefault: 'Default',
      Texture01: 'Texture 1',
      Texture02: 'Texture 2',
      Texture03: 'Texture 3',
      Texture04: 'Texture 4',
      Texture05: 'Texture 5',
      Texture06: 'Texture 6',
      Texture07: 'Texture 7',
      Texture08: 'Texture 8',
      Texture09: 'Texture 9',
      Texture10: 'Texture 10',
      SizeOfWall: 'Size of Wall',
      OnlyThisWall: 'Only This Wall',
      AllWallsAboveFoundation: 'All Walls Above the Same Foundation',
      AllWalls: 'All Walls',
    },

    windowMenu: {},

    siteInfoPanel: {
      High: 'High',
      Low: 'Low',
    },

    designInfoPanel: {
      NumberOfSelectedSolarPanels: 'Number of selected solar panels',
      ElectricityGeneratedDailyBySolarPanels: 'Electricity generated daily by these solar panels',
      SceneRadius: 'Scene radius',
    },

    instructionPanel: {
      Rotate: 'Rotate',
      DragMouse: 'Drag mouse',
      Zoom: 'Zoom',
      MouseWheelOrKeys: 'Rotate mouse wheel or press Ctrl+[ or Ctrl+]',
      Pan: 'Pan',
      HoldCtrlDragMouse: 'Hold Ctrl and drag mouse',
      Toggle2D3D: 'Toggle 2D/3D',
      ResetView: 'Reset',
      AutoRotate: 'Auto rotate',
      StartOrStop: 'Press F4 to start or stop',
    },

    mapPanel: {
      ImageOnGround: 'Image on Ground',
      StationsOnMap: 'Stations on Map',
      Coordinates: 'Coordinates',
      Zoom: 'Zoom',
    },

    visibilityPanel: {
      SolarPanelVisibility: 'Solar Panel Visibility',
      Observer: 'Observer',
      VantagePoint: 'Vantage Point',
      ItemizedVisibilityByFields: 'Itemized by Fields',
      TotalVisibility: 'Total',
    },

    sensorPanel: {
      LightSensor: 'Light Sensor',
      WeatherDataFrom: 'Weather Data from',
    },

    solarPanelYieldPanel: {
      SolarPanelDailyYield: 'Solar Panel Daily Yield',
      SolarPanelYearlyYield: 'Solar Panel Yearly Yield',
      Yield: 'Yield',
      YieldPerHour: 'Yield per Hour',
      DailyTotal: 'Daily Total',
      YearlyTotal: 'Yearly Total',
      HoverForBreakdown: 'Hover for breakdown',
      ShowOutputsOfIndividualSolarPanels: 'Show outputs of individual solar panels',
    },

    parabolicTroughYieldPanel: {
      ParabolicTroughDailyYield: 'Parabolic Trough Daily Yield',
      ParabolicTroughYearlyYield: 'Parabolic Trough Yearly Yield',
      Yield: 'Yield',
      YieldPerHour: 'Yield per Hour',
      DailyTotal: 'Daily Total',
      YearlyTotal: 'Yearly Total',
      HoverForBreakdown: 'Hover for breakdown',
      ShowOutputsOfIndividualParabolicTroughs: 'Show outputs of individual parabolic troughs',
    },

    parabolicDishYieldPanel: {
      ParabolicDishDailyYield: 'Parabolic Dish Daily Yield',
      ParabolicDishYearlyYield: 'Parabolic Dish Yearly Yield',
      Yield: 'Yield',
      YieldPerHour: 'Yield per Hour',
      DailyTotal: 'Daily Total',
      YearlyTotal: 'Yearly Total',
      HoverForBreakdown: 'Hover for breakdown',
      ShowOutputsOfIndividualParabolicDishes: 'Show outputs of individual parabolic dishes',
    },

    heliodonPanel: {
      SunAndTimeSettings: 'Sun & Time Settings',
      SunAngles: 'Angles',
    },

    cloudFilePanel: {
      MyCloudFiles: 'My Cloud Files',
      GenerateLink: 'Generate Link',
      LinkGeneratedInClipBoard: 'A link has been generated in the clip board',
      DoYouReallyWantToDelete: 'Do you really want to delete',
    },

    accountSettingsPanel: {
      MyAccountSettings: 'My Account Settings',
      MyID: 'My ID',
      IDInClipBoard: 'Your ID was copied and is ready to paste.',
      StoreMyNameInMyFilesWhenSaving: 'Store my name in my files when saving',
    },

    weatherPanel: {
      SunshineHours: 'Sunshine',
    },

    yearlyLightSensorPanel: {
      SkyClearness: 'Clearness',
      ShowDaylightResults: 'Show daylight results',
      ShowSkyClearnessResults: 'Show sky clearness results',
      ShowAverageDailySolarRadiation: 'Show average daily solar radiation',
    },

    analysisManager: {
      NoSensorForCollectingData: 'There is no sensor for collecting data.',
      NoSolarPanelForAnalysis: 'There is no solar panel for analysis.',
      NoObserverForVisibilityAnalysis: 'There is no observer for visibility analysis.',
      NoWaterHeaterForAnalysis: 'There is no water heater for analysis.',
      NoParabolicDishForAnalysis: 'There is no parabolic dish for analysis.',
      NoParabolicTroughForAnalysis: 'There is no parabolic trough for analysis.',
      NoFresnelReflectorForAnalysis: 'There is no Fresnel reflector for analysis.',
      NoHeliostatForAnalysis: 'There is no heliostat for analysis.',
    },

    toolbar: {
      CloudFile: 'Cloud file',
      Select: 'Select',
      AddFoundation: 'Add foundation',
      AddWall: 'Add wall',
      AddWindow: 'Add window',
      AddRoof: 'Add roof',
      AddCuboid: 'Add cuboid',
      AddSensor: 'Add sensor',
      AddSolarPanel: 'Add solar panel',
      AddWaterHeater: 'Add water heater',
      AddParabolicDish: 'Add parabolic dish',
      AddParabolicTrough: 'Add parabolic trough',
      AddFresnelReflector: 'Add Fresnel reflector',
      AddHeliostat: 'Add heliostat',
      AddTree: 'Add tree',
      AddPeople: 'Add people',
      ClearScene: 'Clear scene',
      ShowSunAndTimeSettings: 'Show sun and time settings',
      ShowHeatmap: 'Show heatmap',
      DoYouReallyWantToClearContent: 'Do you really want to clear the content',
      ClickForMoreButtons: 'Click for more buttons',
      SwitchToAddingFoundation: 'Switch to Adding Foundation',
      SwitchToAddingCuboid: 'Switch to Adding Cuboid',
      SwitchToAddingWall: 'Switch to Adding Wall',
      SwitchToAddingWindow: 'Switch to Adding Window',
      SwitchToAddingRoof: 'Switch to Adding Roof',
      SwitchToAddingSolarPanel: 'Switch to Adding Solar Panel',
      SwitchToAddingSensor: 'Switch to Adding Sensor',
      SwitchToAddingWaterHeater: 'Switch to Adding Water Heater',
      SwitchToAddingParabolicDish: 'Switch to Adding Parabolic Dish',
      SwitchToAddingParabolicTrough: 'Switch to Adding Parabolic Trough',
      SwitchToAddingFresnelReflector: 'Switch to Adding Fresnel Reflector',
      SwitchToAddingHeliostat: 'Switch to Adding Heliostat',
      SwitchToAddingTree: 'Switch to Adding Tree',
      SwitchToAddingPeople: 'Switch to Adding People',
    },

    tooltip: {
      gotoIFI: 'Go to Institute for Future Intelligence',
      visitAladdinHomePage: 'Visit Aladdin Homepage',
      clickToOpenMenu: 'Click to open main menu',
      clickToAccessCloudTools: 'Click to access cloud tools',
    },

    tree: {
      Cottonwood: 'Cottonwood',
      Dogwood: 'Dogwood',
      Elm: 'Elm',
      Linden: 'Linden',
      Maple: 'Maple',
      Oak: 'Oak',
      Pine: 'Pine',
      Spruce: 'Spruce',
    },

    people: {
      Jack: 'Jack',
      Jade: 'Jade',
      Jane: 'Jane',
      Jaye: 'Jaye',
      Jean: 'Jean',
      Jedi: 'Jedi',
      Jeff: 'Jeff',
      Jena: 'Jena',
      Jeni: 'Jeni',
      Jess: 'Jess',
      Jett: 'Jett',
      Jill: 'Jill',
      Joan: 'Joan',
      Joel: 'Joel',
      John: 'John',
      Jose: 'Jose',
      Judd: 'Judd',
      Judy: 'Judy',
      June: 'June',
      Juro: 'Juro',
      Xiaoli: 'Xiaoli',
      Xiaoming: 'Xiaoming',
    },
  },
};
