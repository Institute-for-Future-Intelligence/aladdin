/*
 * @Copyright 2021-2025. Institute for Future Intelligence, Inc.
 */

export const i18n_en = {
  translation: {
    name: {
      IFI: 'Institute for Future Intelligence',
      Aladdin: 'Aladdin',
      Tagline: 'Aladdin: Reimagining Design with Explainable AI — Institute for Future Intelligence',
    },

    cookie: {
      Statement: 'By clicking Accept, you agree to our use of cookies to improve your experience with Aladdin.',
      Accept: 'Accept',
    },

    aboutUs: {
      ProductBroughtToYouBy: 'This product is brought to you by',
      TermsOfService: 'Terms of Service',
      PrivacyPolicy: 'Privacy Policy',
      Software: 'Software',
      Content: 'Content',
      Research: 'Research',
      Support: 'Support',
      Acknowledgment: 'Acknowledgment',
      FundingInformation:
        'The National Science Foundation (NSF) generously provided funding for the research and development of this product through grants #2105695, #2131097, and #2301164. Any opinions, findings, and conclusions or recommendations expressed in this product, however, are those of the authors and do not necessarily reflect the views of NSF.',
      Contact: 'For more information, please contact Charles Xie (charles@intofuture.org).',
      Translators: 'Translators',
    },

    word: {
      AirPermeability: 'Air Permeability',
      Visible: 'Visible',
      Settings: 'Settings',
      Source: 'Source',
      BasicTopics: 'Basic Topics',
      AdvancedTopics: 'Advanced Topics',
      Unit: 'Unit',
      Sky: 'Sky',
      Ground: 'Ground',
      Relative: 'Relative',
      Mute: 'Mute',
      BrandName: 'Brand Name',
      Name: 'Name',
      Refresh: 'Refresh',
      LastUpdate: 'Last Update',
      Small: 'Small',
      Medium: 'Medium',
      Large: 'Large',
      Design: 'Design',
      Information: 'Information',
      Type: 'Type',
      Text: 'Text',
      FontSize: 'Font Size',
      FontColor: 'Font Color',
      Model: 'Model',
      Models: 'Models',
      Upload: 'Upload',
      ClickCount: 'Click Count',
      Share: 'Share',
      AlreadyLike: 'Already like',
      Like: 'Like',
      MustLogInToLike: 'Must log in to like',
      AllRightsReserved: 'All Rights Reserved',
      MeterAbbreviation: 'm',
      VoltAbbreviation: 'V',
      AmpereAbbreviation: 'A',
      WattAbbreviation: 'W',
      Version: 'Version',
      VersionInitial: 'V',
      Options: 'Options',
      Maximum: 'Maximum',
      Minimum: 'Minimum',
      MaximumNumber: 'Maximum Number',
      MinimumNumber: 'Minimum Number',
      MaximumValue: 'Maximum Value',
      MinimumValue: 'Minimum Value',
      Or: 'Or',
      None: 'None',
      High: 'High',
      Partial: 'Partial',
      Teacher: 'Teacher',
      Class: 'Class',
      Total: 'Total',
      Leaderboard: 'Leaderboard',
      Latest: 'Latest',
      Range: 'Range',
      SIUnit: 'SI Unit',
      USUnit: 'US Unit',
      ThermalTransmittance: 'Thermal Transmittance',
      ThermalResistance: 'Thermal Resistance',
      UValue: 'U-Value',
      RValue: 'R-Value',
      VolumetricHeatCapacity: 'Volumetric Heat Capacity',
      Press: 'Press',
      Open: 'Open',
      Save: 'Save',
      SaveAsImage: 'Save as Image',
      SaveAsCsv: 'Save as CSV',
      Update: 'Update',
      Paste: 'Paste',
      Copy: 'Copy',
      Cut: 'Cut',
      Delete: 'Delete',
      Add: 'Add',
      Lock: 'Lock',
      Translucent: 'Translucent',
      Transparency: 'Transparency',
      Color: 'Color',
      Pattern: 'Pattern',
      Texture: 'Texture',
      Size: 'Size',
      Thickness: 'Thickness',
      Yes: 'Yes',
      No: 'No',
      NoAndDoNotAskAgain: "No and don't ask again",
      OK: 'OK',
      Cancel: 'Cancel',
      Apply: 'Apply',
      Close: 'Close',
      ApplyTo: 'Apply to',
      Run: 'Run',
      Pause: 'Pause',
      Resume: 'Resume',
      Clear: 'Clear',
      Warning: 'Warning',
      Caution: 'Caution',
      Reminder: 'Reminder',
      Length: 'Length',
      Width: 'Width',
      Height: 'Height',
      Radius: 'Radius',
      Angle: 'Angle',
      Azimuth: 'Azimuth',
      Coordinates: 'Coordinates',
      Weather: 'Weather',
      Show: 'Show',
      Animate: 'Animate',
      Date: 'Date',
      Time: 'Time',
      Title: 'Title',
      Owner: 'Owner',
      Action: 'Action',
      Rename: 'Rename',
      Location: 'Location',
      Latitude: 'Latitude',
      Month: 'Month',
      Day: 'Day',
      Hour: 'Hour',
      Daylight: 'Daylight',
      Radiation: 'Radiation',
      Temperature: 'Temperature',
      kW: 'kW',
      kWh: 'kWh',
      dollar: 'dollar',
      MeterPerSecond: 'm/s',
      NorthInitial: 'N',
      SouthInitial: 'S',
      EastInitial: 'E',
      WestInitial: 'W',
      Fixed: 'Fixed',
      Elements: 'Elements',
      Energy: 'Energy',
      Unknown: 'Unknown',
      Label: 'Label',
      Description: 'Description',
      NoDescription: 'No description',
      MaximumCharacters: 'Maximum characters',
      Author: 'Author',
      Publisher: 'Publisher',
      Building: 'Building',
      ResidentialBuilding: 'Residential Building',
      CommercialBuilding: 'Commercial Building',
      SchoolBuilding: 'School Building',
      TouristAttraction: 'Tourist Attraction',
      UnderConstruction: 'Under Construction',
      Photovoltaic: 'Photovoltaic',
      WindPower: 'Wind Power',
      ColocationProjects: 'Colocation Projects',
      Anonymous: 'Anonymous',
      Nickname: 'Nickname',
      Pin: 'Pin',
      Unpin: 'Unpin',
    },

    shared: {
      Class: 'Class',
      NoTexture: 'No Texture',
      FoundationElement: 'Foundation',
      DoorElement: 'Door',
      WindowElement: 'Window',
      WallElement: 'Wall',
      RoofElement: 'Roof',
      CuboidElement: 'Cuboid',
      PolygonElement: 'Polygon',
      SensorElement: 'Sensor',
      SolarPanelElement: 'Solar Panel',
      SolarWaterHeaterElement: 'Solar Water Heater',
      ParabolicDishElement: 'Parabolic Dish',
      ParabolicTroughElement: 'Parabolic Trough',
      FresnelReflectorElement: 'Fresnel Reflector',
      HeliostatElement: 'Heliostat',
      WindTurbineElement: 'Wind Turbine',
      BatteryStorageElement: 'Battery Storage',
      LightElement: 'Light',
      HumanElement: 'Human',
      FlowerElement: 'Flower',
      TreeElement: 'Tree',
      ElementLocked: 'Locked',
      ModelType: 'Model Type',
      OutputBreakdown: 'Breakdown',
      MoreResults: 'More Results',
      RulerElement: 'Ruler',
    },

    message: {
      ListenToPodcastAboutThis: 'Listen to a podcast about this',
      LabelIsAlreadyTaken: 'This label is already taken, please use another one.',
      IdIsAlreadyTaken: 'This ID is already taken, please use another one.',
      DoNotShowAgain: "Don't show again",
      NewVersionAvailable: 'A new version is available',
      CalculationMayBeSlowDoYouWantToContinue: 'Calculation may be slow. Do you want to continue?',
      IncreaseSolarRadiationHeatmapGridCellSizeToSpeedUp: 'Increase solar radiation heatmap grid cell size to speed up',
      ModelNotFound: 'Model not found',
      CannotSignIn: 'Cannot sign in',
      CannotSignOut: 'Cannot sign out',
      YourAccountWasCreated: 'Your account was created.',
      CannotCreateAccount: 'Cannot create an account',
      YourAccountSettingsWereSaved: 'Your account settings were saved.',
      CannotSaveYourAccountSettings: 'Cannot save your account settings',
      CannotSaveYourFileToCloud: 'Cannot save your file to the cloud',
      CannotCreateNewProject: 'Cannot create a new project',
      CannotCreateNewProjectWithoutTitle: 'Cannot create a new project without a title',
      CannotOpenYourProjects: 'Cannot open your projects',
      CannotOpenProject: 'Cannot open the project',
      CannotDeleteProject: 'Cannot delete the project',
      CannotRenameProject: 'Cannot rename the project',
      CannotAddDesignToProject: 'Cannot add this design to the project',
      CannotAddDesignToProjectOwnedByOthers: 'Cannot add this design to a project owned by others',
      DesignRemovedFromProject: 'The design was successfully removed from the project',
      CannotRemoveDesignFromProject: 'Cannot remove this design from the project',
      CannotUpdateProject: 'Cannot update the project',
      CannotFetchProjectData: 'Cannot fetch project data',
      TitleUsedChooseDifferentOne: 'This title has been used. Choose a different one',
      CloudFileWithTitleExistsDoYouWantToOverwrite: 'A cloud file with the title exists. Do you want to overwrite it?',
      CloudFileNotFound: 'The cloud file was not found',
      CannotLoadModelsOnMap: 'Cannot load models on map',
      CannotLoadLeaderboard: 'Cannot load leaderboard',
      CannotPublishModelOnMap: 'Cannot publish model on map',
      CannotLikeModelFromMap: 'Cannot like model from map',
      CannotDeleteModelFromMap: 'Cannot delete model from map',
      ModelDeletedFromMap: 'Model is deleted from map',
      DoYouWantToDeleteModelFromMap: 'Do you want to delete the model from map?',
      CannotOpenCloudFile: 'Cannot open the cloud file',
      CannotReadCloudFile: 'Cannot read the cloud file',
      CannotWriteCloudFile: 'Cannot write the cloud file',
      CloudFileCopied: 'Cloud file copied',
      CannotOpenCloudFolder: 'Cannot open your cloud folder',
      CannotDeleteCloudFile: 'Cannot delete the cloud file',
      CannotRenameCloudFile: 'Cannot rename the cloud file',
      DoYouWantToSaveChanges: 'Do you want to save changes?',
      DoYouWantToUpdateDesign: 'Do you want to update this design?',
      NotApplicableToSelectedAction: 'Not Applicable to Selected Action',
      ThisElementIsLocked: 'This element is locked.',
      ThisCannotBeUndone: 'This cannot be undone.',
      AzimuthOfNorthIsZero: 'Azimuth of north is 0°',
      CounterclockwiseAzimuthIsPositive: 'Counter-clockwise is positive',
      SouthFacingIsZero: 'South-facing is 0°',
      ClockwiseRotationIsPositive: 'Clockwise is positive',
      MoveCancelledBecauseOfOverlap: 'Move cancelled because of overlap.',
      MoveOutsideBoundaryCancelled: 'Move outside the boundary cancelled.',
      RotationCancelledBecauseOfOverlap: 'Rotation cancelled because of overlap.',
      RotationOutsideBoundaryCancelled: 'Rotation outside the boundary cancelled.',
      ResizingCancelledBecauseOfOverlap: 'Resizing cancelled because of overlap.',
      ResizingOutsideBoundaryCancelled: 'Resizing outside the boundary cancelled.',
      CannotPasteOutsideBoundary: 'Cannot paste outside the boundary.',
      CannotPasteBecauseOfOverlap: 'Cannot paste because of overlap.',
      CannotMoveObjectTooFar: 'Cannot move object too far.',
      ExistingSolarPanelsWillBeRemovedBeforeApplyingNewLayout:
        'Existing solar panels will be removed before applying the new layout.',
      DoYouWantToContinue: 'Do you want to continue?',
      SolarPanelsCannotIntersectWithGround: 'Solar panels cannot intersect with the ground.',
      SolarPanelsCannotOverlapWithOneAnother: 'Solar panels cannot overlap with one another.',
      ScreenshotSaved: 'A screenshot was saved.',
      CsvFileSaved: 'A CSV file was saved.',
      SimulationStarted: 'Simulation started.',
      SimulationCompleted: 'Simulation completed.',
      SimulationAborted: 'Simulation aborted.',
      SimulationPaused: 'Simulation paused.',
      CancelSimulation: 'Cancel simulation',
      PauseSimulation: 'Pause simulation',
      ResumeSimulation: 'Resume simulation',
      SimulationWillNotStartDueToErrors: 'Simulation will not start due to errors',
      SimulationWillStartDespiteWarnings: 'Simulation will start despite warnings.',
      EvolutionStarted: 'Evolution started.',
      EvolutionCompleted: 'Evolution completed.',
      EvolutionAborted: 'Evolution aborted.',
      EvolutionPaused: 'Evolution paused.',
      EncounterEvolutionError: 'Encountered an evolution error.',
      CancelEvolution: 'Cancel evolution',
      PauseEvolution: 'Pause evolution',
      ResumeEvolution: 'Resume evolution',
      ConvergenceThresholdHasBeenReached: 'The convergence threshold has been reached.',
      MaximumNumberOfGenerationsHasBeenReached: 'The maximum number of generations has been reached.',
      MaximumNumberOfStepsHasBeenReached: 'The maximum number of steps has been reached.',
      ObjectiveFunctionTypeError:
        'The current objective function is not supported by this operation. Please start from the menu.',
      WallsAreNotAtSameHeight: 'Walls are not at the same height.',
      WallsAreNotPerpendicular: 'Walls are not perpendicular.',
      WallsAreNotConnected: 'Walls are not connected.',
      WallsNumberNeedToBeFour: 'The number of walls needs to be four.',
      BuildingContainsEmptyWall: 'Building contains one or more empty wall.',
      BuildingRoofMissing: 'Building has a missing roof.',
      UnknownErrors: 'Unknown errors.',
      SigningOutAnonymousAccount: 'Are you sure you want to sign out? This anonymous account will be lost.',
      SigningInAnonymousAccount:
        'Are you sure you want to sign in anonymously? An anonymous account will be lost if you sign out. It should be used only for temporary purposes and on the same computer.',
    },

    menu: {
      AnalysisOptions: 'Analysis Options',
      option: {
        GridCellSize: 'Grid Cell Size',
        SamplingFrequency: 'Sampling Frequency',
        TimesPerHour: 'Times per Hour',
        DaysPerYear: 'Days per Year',
      },
      mainMenu: 'Main Menu',
      cloudMenu: 'Cloud Menu',
      projectSubMenu: 'Project',
      project: {
        CreateNewProject: 'Create New Project',
        OpenProject: 'Open Project',
        SaveProject: 'Save Project',
        SaveProjectAs: 'Save Project As',
        YouMustLogInToCreateProject: 'You must log in to create a new project',
        YouMustLogInToOpenProject: 'You must log in to open a project',
      },
      fileSubMenu: 'File',
      file: {
        CreateNewFile: 'Create New File',
        OpenLocalFile: 'Open Local File',
        SaveAsLocalFile: 'Save as Local File',
        SavingAbortedMustHaveValidFileName: 'Saving aborted! You must have a valid file name',
        OpenCloudFile: 'Open Cloud File',
        SaveCloudFile: 'Save Cloud File',
        SaveAsCloudFile: 'Save as Cloud File',
        SavingAbortedMustHaveValidTitle: 'Saving aborted! You must have a valid title for a cloud file',
        ToSaveYourWorkPleaseSignIn: 'To save your work, please sign in.',
        TakeScreenshot: 'Take Screenshot',
        UseCloudFileName: 'Use Cloud File Name',
        PublishOnModelsMap: 'Publish on Models Map',
        PublishedOnModelsMap: 'Your model has been published on the Models Map',
        UpdatedOnModelsMap: 'Your model has been updated on the Models Map',
        YouMustLogInToPublishYourModel: 'You must log in to publish your model',
        YouCannotPublishAModelThatYouDoNotOwn: 'You cannot publish a model that you do not own',
        YouMustSaveModelOnCloudBeforePublishingIt: 'You must save the model on the cloud before publishing it',
      },
      editSubMenu: 'Edit',
      edit: {
        Undo: 'Undo',
        Redo: 'Redo',
        Undone: 'Undone',
      },
      viewSubMenu: 'View',
      view: {
        ModelTree: 'Model Tree',
        OpenModelTree: 'Open Model Tree',
        NavigationView: 'Navigation View',
        TwoDimensionalView: '2D View',
        ResetView: 'Reset',
        ZoomIn: 'Zoom In',
        ZoomOut: 'Zoom Out',
        AutoRotate: 'Auto Rotate',
        ShowShadow: 'Show Shadow',
        ShowSurfaceShininess: 'Show Surface Shininess',
        TranslucentFloatingWindows: 'Translucent Floating Windows',
        accessoriesSubMenu: 'Accessories',
        accessories: {
          SiteInformation: 'Site Information',
          DesignInformation: 'Design Information',
          Instruction: 'Instruction',
          StickyNote: 'Sticky Note',
          Note: 'Note',
          AudioPlayer: 'Audio Player',
          ShareLinks: 'Share Links',
        },
      },
      settingsSubMenu: 'Settings',
      settings: {
        WeatherData: 'Weather Data',
        DiurnalTemperature: 'Diurnal Temperature',
        Heliodon: 'Heliodon',
        SunAndTime: 'Sun & Time',
        CustomSolarPanels: 'Custom Solar Panels',
        CustomizeSolarPanel: 'Customize Solar Panel',
      },
      benchmarksSubMenu: 'Benchmarks',
      benchmarks: {
        SolarRadiationPredictionVsMeasurement: 'Solar Radiation Prediction vs. Measurement',
        BESTESTCase600: 'Building Energy Simulation Test: BESTEST Case 600',
        BESTESTCase610: 'Building Energy Simulation Test: BESTEST Case 610',
        BESTESTCase620: 'Building Energy Simulation Test: BESTEST Case 620',
        BESTESTCase630: 'Building Energy Simulation Test: BESTEST Case 630',
      },
      graph: {
        LineWidth: 'Line Width',
        SymbolSize: 'Symbol Size',
        BarCategoryGap: 'Bar Category Gap',
        ShowHorizontalGridLines: 'Show Horizontal Grid Lines',
        ShowVerticalGridLines: 'Show Vertical Grid Lines',
      },
      analysisSubMenu: 'Analysis',
      physicsSubMenu: 'Physics',
      physics: {
        DailySolarRadiationHeatmap: 'Daily Solar Radiation Heatmap',
        SolarRadiationHeatmapOptions: 'Solar Radiation Heatmap Options',
        SolarRadiationHeatmapGridCellSize: 'Solar Radiation Heatmap Grid Cell Size',
        SolarRadiationHeatmapMaxValue: 'Solar Radiation Heatmap Maximum Value',
        SolarRadiationHeatmapNoAnimation: 'No Animation for Static Model',
        ReflectionHeatmap: 'Reflection Heatmap',
      },
      sensorSubMenu: 'Sensor',
      sensor: {
        CollectDailyData: 'Collect Daily Data',
        CollectYearlyData: 'Collect Yearly Data',
        SensorSimulationNoAnimation: 'No Animation for Collecting Sensor Data',
      },
      buildingSubMenu: 'Building',
      building: {
        AnalyzeDailyBuildingEnergy: 'Analyze Daily Building Energy',
        AnalyzeYearlyBuildingEnergy: 'Analyze Yearly Building Energy',
        EnergyAnalysisOptions: 'Energy Analysis Options',
        EnergyGridCellSize: 'Energy Grid Cell Size',
        BuildingEnergySimulationNoAnimation: 'No Animation for Building Energy Simulation',
      },
      solarPanelSubMenu: 'Solar Panel',
      solarPanel: {
        AnalyzeDailyYield: 'Analyze Daily Yield',
        AnalyzeYearlyYield: 'Analyze Yearly Yield',
        AnalyzeVisibility: 'Analyze Visibility',
        PanelDiscretization: 'Panel Discretization',
        Exact: 'Exact',
        Approximate: 'Approximate',
        EnergyGridCellSize: 'Energy Grid Cell Size',
        VisibilityGridCellSize: 'View Factor Grid Cell Size',
        EnergyAnalysisOptions: 'Energy Analysis Options',
        VisibilityAnalysisOptions: 'Visibility Analysis Options',
        SolarPanelSimulationNoAnimation: 'No Animation for Solar Panel Simulation',
      },
      parabolicTroughSubMenu: 'Parabolic Trough',
      parabolicTrough: {
        AnalyzeDailyYield: 'Analyze Daily Yield',
        AnalyzeYearlyYield: 'Analyze Yearly Yield',
      },
      parabolicDishSubMenu: 'Parabolic Dish',
      parabolicDish: {
        AnalyzeDailyYield: 'Analyze Daily Yield',
        AnalyzeYearlyYield: 'Analyze Yearly Yield',
      },
      fresnelReflectorSubMenu: 'Fresnel Reflector',
      fresnelReflector: {
        AnalyzeDailyYield: 'Analyze Daily Yield',
        AnalyzeYearlyYield: 'Analyze Yearly Yield',
      },
      heliostatSubMenu: 'Heliostat',
      heliostat: {
        AnalyzeDailyYield: 'Analyze Daily Yield',
        AnalyzeYearlyYield: 'Analyze Yearly Yield',
      },
      solarUpdraftTowerSubMenu: 'Solar Updraft Tower',
      solarUpdraftTower: {
        AnalyzeDailyYield: 'Analyze Daily Yield',
        AnalyzeYearlyYield: 'Analyze Yearly Yield',
        SolarUpdraftTowerSimulationNoAnimation: 'No Animation for Solar Updraft Tower Simulation',
      },
      storage: {
        AnalyzeDailyChargeDischarge: 'Analyze Daily Charge-Discharge Cycle',
        AnalyzeYearlyStorage: 'Analyze Yearly Storage',
      },

      tutorialsSubMenu: 'Tutorials',

      solarEnergyScienceSubMenu: 'Solar Science',
      solarEnergyScienceTutorials: {
        SunAngles: 'Sun Angles Relative to an Observer on the Ground',
        InsolationAndClimate: 'Insolation and Climate',
        SolarRadiationToBox: 'Solar Radiation to a Box',
      },

      buildingScienceSubMenu: 'Building Science',
      buildingScienceTutorials: {
        ThermalEnvelopeVsBuildingEnvelope: 'Thermal Envelope vs. Building Envelope',
        EffectOfSizeOnBuildingEnergy: 'Effect of Size on Building Energy',
        EffectOfOrientationOnBuildingEnergy: 'Effect of Orientation on Building Energy',
        EffectOfInsulationOnBuildingEnergy: 'Effect of Insulation on Building Energy',
        EffectOfAirtightnessOnBuildingEnergy: 'Effect of Airtightness on Building Energy',
        EffectOfRoofColorOnBuildingEnergy: 'Effect of Roof Color on Building Energy',
        EffectOfEavesOverhangLengthOnBuildingEnergy: 'Effect of Eaves Overhang Length on Building Energy',
        EffectOfWindowSHGCOnBuildingEnergy: 'Effect of Window Solar Heat Gain on Building Energy',
        EffectOfThermostatSetpointOnBuildingEnergy: 'Effect of Thermostat Setpoint on Building Energy',
        EffectOfProgrammableThermostatOnBuildingEnergy: 'Effect of Programmable Thermostat on Building Energy',
        EffectOfSolarPanelsOnBuildingEnergy: 'Effect of Solar Panels on Building Energy',
        EffectOfGroundTemperatureOnBuildingEnergy: 'Effect of Ground Temperature on Building Energy',
        EffectOfTreesOnBuildingEnergy: 'Effect of Trees on Building Energy',
      },

      buildingDesignSubMenu: 'Building Design',
      buildingDesignTutorials: {
        CapeCodStyleHouseWithShedDormer: 'Cape Cod Style House with Shed Dormer',
        MansardRoofWithDormers: 'Mansard Roof with Dormers',
        GableRoofVsHipRoof: 'Gable Roof vs. Hip Roof',
        ColonialVsSaltbox: 'Colonial vs. Saltbox',
        GambrelRoofVsMansardRoof: 'Gambrel Roof vs. Mansard Roof',
        CombinationRoofVsBonnetRoof: 'Combination Roof vs. Bonnet Roof',
        DutchGableRoof: 'Dutch Gable Roof',
        RaisedRanch: 'Raised Ranch',
        OverhangFloor: 'Overhang Floor',
        GableAndValleyRoof: 'Gable and Valley Roof',
        ClerestoryRoof: 'Clerestory Roof',
        MonitorRoof: 'Monitor Roof',
        AFrameHouse: 'A-Frame House',
        HalfTimberedHouse: 'Half-Timbered House',
        AllBasicRoofTypes: 'All Basic Roof Types',
      },

      photovoltaicSolarPowerSubMenu: 'Photovoltaic Solar Power',
      photovoltaicSolarPowerTutorials: {
        EffectOfTiltAngleOfSolarPanel: 'Effect of Tilt Angle of a Solar Panel',
        EffectOfAzimuthOfSolarPanel: 'Effect of Azimuth of a Solar Panel',
        SolarPanelTypes: 'Solar Panel Types',
        DefineYourOwnSolarPanels: 'Define Your Own Solar Panels',
        VerticalBifacialSolarPanels: 'Vertical Bifacial Solar Panels',
        CompareMonofacialAndBifacialSolarPanels: 'Monofacial vs. Bifacial Solar Panels',
        SolarTrackers: 'Solar Trackers',
        CoveringGroundWithSolarPanels: 'Why Just Covering the Ground with Solar Panels is not a Good Idea',
        InterRowSpacingOfSolarPanelArray: 'Effect of Inter-Row Spacing in a Solar Panel Array',
        EffectOfOrientationOfSolarPanels: 'Effect of Orientation of Solar Panels',
        SolarPanelArrayAutomaticLayout: 'Solar Panel Array Automatic Layout',
        SolarPanelArrayOnSlope: 'Solar Panel Array on a Slope',
      },

      concentratedSolarPowerSubMenu: 'Concentrated Solar Power',
      concentratedSolarPowerTutorials: {
        EffectOfAzimuthOfParabolicTrough: 'Effect of Azimuth of a Parabolic Trough',
        EffectOfLatusRectumOfParabolicTrough: 'Effect of Latus Rectum of a Parabolic Trough',
        FocusSunlightWithParabolicDish: 'Focus Sunlight with a Parabolic Dish',
        LinearFresnelReflectors: 'Linear Fresnel Reflectors',
        EffectOfAbsorberPipeHeightForLinearFresnelReflectors:
          'Effect of Absorber Pipe Height for Linear Fresnel Reflectors',
        EffectOfAzimuthOfLinearFresnelReflectors: 'Effect of Azimuth of Linear Fresnel Reflectors',
        LinearFresnelReflectorsWithTwoAbsorbers: 'Linear Fresnel Reflectors with Two Absorbers',
        BuildingIntegratedFresnelReflectors: 'Building-Integrated Fresnel Reflectors',
        CosineEfficiencyOfHeliostats: 'Cosine Efficiency of Heliostats',
        ShadowingAndBlockingOfHeliostats: 'Shadowing and Blocking of Heliostats',
        EffectSolarPowerTowerHeight: 'Effect of Solar Power Tower Height',
        SolarPowerTower: 'Solar Power Tower',
      },

      otherTypesOfSolarPowerSubMenu: 'Other Types of Solar Power',
      otherTypesOfSolarPowerTutorials: {
        SolarWaterHeaters: 'Solar Water Heaters',
        SolarUpdraftTower: 'Solar Updraft Tower',
      },

      windPowerSubMenu: 'Wind Power',
      windPowerTutorials: {
        EffectOfBladeNumberOfWindTurbine: 'Effect of Blade Number of Wind Turbine',
        EffectOfPitchAngleOfWindTurbineBlades: 'Effect of Pitch Angle of Wind Turbine Blades',
        BirdSafeBladeDesign: 'Bird-Safe Blade Design',
        OffshoreWindFarm: 'Offshore Wind Farm',
      },

      storageSubMenu: 'Energy Storage',
      storageTutorials: {
        HomeSolarEnergyStorage: 'Home Solar Energy Storage',
      },

      colocationSubMenu: 'Colocation',
      colocationTutorials: {
        AgricultureSolarWindColocation: 'Agriculture-Solar-Wind Colocation',
      },

      generativeDesignSubMenu: 'Generative Design',
      generativeDesignTutorials: {
        MonofacialSolarPanelArrayTiltAngle: 'The Tilt Angle of a Monofacial Solar Panel Array',
        BifacialSolarPanelArrayTiltAngle: 'The Tilt Angle of a Bifacial Solar Panel Array',
        SolarPanelArrayInterRowSpacing: 'The Inter-Row Spacing of a Solar Panel Array',
        OutputOfSolarPanelArrayInDifferentPlaces: 'The Output of a Solar Panel Array in Different Places',
        SimpleSolarFarmParetoFront: 'The Pareto Front for Designing a Simple Solar Farm',
      },

      examplesSubMenu: 'Examples',

      solarEnergySubMenu: 'Solar Energy',
      solarEnergyExamples: {
        SunBeamAndHeliodon: 'Sun Beam and Heliodon',
        RooftopSolarPanels: 'Rooftop Solar Panels',
        CompareGenerationConsumption: 'Compare Generation and Consumption',
        NevadaSolarOneParabolicTroughArray: 'Nevada Solar One Parabolic Trough Array',
        TooeleParabolicDishArray: 'Tooele Parabolic Dish Array',
        PS10SolarPowerTower: 'PS10 Solar Power Tower',
        TucsonLinearFresnelReflectors: 'Tucson Linear Fresnel Reflectors',
        SolarCanopyFormFactors: 'Solar Canopy Form Factors',
        SolarCanopyOverBleachers: 'Solar Canopy Over Bleachers',
        SolarCanopyOverGarage: 'Solar Canopy Over Garage',
        SolarBusStop: 'Solar Bus Stop',
        SolarFacadeTesla: 'Tesla Solar Façade',
        BuildingIntegratedPhotovoltaics: 'Building-Integrated Photovoltaics',
        Floatovoltaics: 'Floatovoltaics',
        Agrivoltaics: 'Agrivoltaics',
        VegetativeBuffer: 'Vegetative Buffer',
        RainbowSwashSolarFarmBostonMA: 'Rainbow Swash Solar Farm in Boston, MA',
        MickeyMouseSolarFarmOrlandoFL: 'Mickey Mouse Solar Farm in Orlando, FL',
        SolarPanelsOverCanalBakersfieldCA: 'Hypothetical Solar Panels Over Canal in Bakersfield, CA',
        SolarNoiseBarrierLexingtonMA: 'Hypothetical Solar Noise Barrier in Lexington, MA',
        HSATSolarTrackersRaleighNC: 'Horizontal Single Axis Trackers (HSAT) in Raleigh, NC',
        AADATSolarTrackersLancasterCA: 'Azimuth–Altitude Dual Axis Trackers (AADAT) in Lancaster, CA',
        SolarUpdraftTowerInCity: 'Solar Updraft Tower in City',
      },

      builtEnvironmentSubMenu: 'Built Environment',
      residentialBuildingsSubMenu: 'Residential Buildings',
      residentialBuildingExamples: {
        ColonialHouse: 'Colonial House',
        DutchColonialHouse: 'Dutch Colonial House',
        TShapedHouse: 'T-Shaped House',
        CapeCodHouseWithGarage: 'Cape Cod House with Garage',
        Solarium: 'Solarium',
        Church1: 'Church 1',
        Cathedral1: 'Cathedral 1',
        Cathedral2: 'Cathedral 2',
        Mosque1: 'Mosque 1',
        AdobeTaosHouse: 'Adobe Taos House',
        RanchHouse: 'Ranch House',
        BonnetHouse: 'Bonnet House',
        BarnStyleHouse: 'Barn Style House',
        ModernHouse: 'Modern House',
        ButterflyRoofHouse: 'Butterfly Roof House',
      },
      commercialBuildingsSubMenu: 'Commercial Buildings',
      commercialBuildingExamples: {
        WhiteHouse: 'White House',
        HaroldWashingtonCollege: 'Harold Washington College',
        BilimMersinTurkiye: 'BILIM, Mersin, Turkiye',
        SpanishStyleHotel: 'Spanish Style Hotel',
        ApartmentBuilding: 'Apartment Building',
        OfficeBuilding: 'Office Building',
        Hotel: 'Hotel',
      },
      buildingComplexesSubMenu: 'Building Complexes',
      buildingComplexExamples: {
        SouthBurlingtonHighSchoolVermont: 'South Burlington High School, VT',
        MescaleroApacheSchoolNewMexico: 'Mescalero Apache School, NM',
      },
      urbanPlanningSubMenu: 'Urban Planning',
      urbanPlanningExamples: {
        CityBlockHeatmap: 'City Block Heatmap',
        ChicagoSkyline: 'Chicago Skyline',
      },
      otherBuildingsSubMenu: 'Other Buildings',
      otherBuildingExamples: {
        Greenhouse: 'Greenhouse',
        Pavilion: 'Pavilion in a Park',
        OctagonalPagoda: 'Octagonal Pagoda',
        OceanFront: 'Ocean Front',
        EgyptianPyramids: 'Egyptian Pyramids',
        MayanPyramid: 'Mayan Pyramid',
        SiOSePol: 'Si-o-se-pol',
        StackedCuboids: 'Stacked Cuboids',
      },

      artificialIntelligenceSubMenu: 'Artificial Intelligence',
      artificialIntelligenceExamples: {
        OptimizingTiltAngleOfOneSolarPanelRow: 'Optimizing the Tilt Angle of a Solar Panel Row',
        OptimizingTiltAnglesOfMultipleSolarPanelRows: 'Optimizing the Tilt Angles of Multiple Solar Panel Rows',
        SolarFarmGenerativeDesign: 'Solar Farm Generative Design',
        SolarFarmGenerativeDesignWithBlock: 'Solar Farm Generative Design in the Presence of a Block',
        FitchburgSolarFarmGenerativeDesign: 'Fitchburg Solar Farm Generative Design',
      },

      languageSubMenu: 'Language',
      publicSubMenu: 'Public',
      ModelsGallery: 'Models Gallery',
      ModelsMap: 'Models Map',
      AboutUs: 'About Us',
    },

    HVACMenu: {
      BuildingHVACSystem: 'Building HVAC System',
      ID: 'ID',
      Tolerance: 'Tolerance',
      ToleranceExplanation:
        'Heater will not run if the lowest outside temperature of the day is higher than the setpoint minus this threshold.\nAC will not run if the highest outside temperature of the day is lower than the setpoint plus this threshold.',
      ACCoefficientOfPerformance: 'Coefficient of Performance of AC',
      ThermostatType: 'Thermostat Type',
      Simple: 'Simple',
      Programmable: 'Programmable',
      ThermostatSetpoint: 'Thermostat Setpoint',
      HeatingSetpoint: 'Heating Setpoint',
      CoolingSetpoint: 'Cooling Setpoint',
      Period: 'Period',
      StartTime: 'Start Time',
      Setpoint: 'Setpoint',
      Wake: 'Wake',
      Day: 'Day',
      Evening: 'Evening',
      Sleep: 'Sleep',
      TimeErrorMessage: 'Start time should be later than previous period.',
    },

    avatarMenu: {
      AccountSettings: 'Account Settings',
      SignIn: 'Sign In',
      SignInAsMe: 'Sign in as me',
      SignInAnonymously: 'Sign in anonymously',
      SignOut: 'Sign Out',
      IfYouAreAStudent: 'If you are a student',
    },

    skyMenu: {
      Axes: 'Axes',
      Theme: 'Theme',
      ThemeDefault: 'Default',
      ThemeDesert: 'Desert',
      ThemeDune: 'Dune',
      ThemeForest: 'Forest',
      ThemeGrassland: 'Grassland',
      ThemeHill: 'Hill',
      ThemeLake: 'Lake',
      ThemeMountain: 'Mountain',
      ThemeRural: 'Rural',
      SunlightAttenuationCoefficientInAir: 'Sunlight Attenuation Coefficient in Air',
      ConvectiveCoefficientOfAir: 'Convective Coefficient of Air',
      HighestTemperatureTimeInMinutes: 'Highest Temperature Time (Minutes)',
      SelectSunAnglesToShow: 'Select Sun Angles to Show',
      ShowAzimuthAngle: 'Show Azimuth Angle',
      ShowElevationAngle: 'Show Elevation Angle',
      ShowZenithAngle: 'Show Zenith Angle',
      DirectLightBrightnessAtNoon: 'Direct Light Brightness at Noon',
      AmbientLightBrightnessAtNoon: 'Ambient Light Brightness at Noon',
    },

    groundMenu: {
      MonthlyIrradianceLoss: 'Monthly Irradiance Loss',
      MonthlyIrradianceLossExplanation:
        'The reduction of solar radiation reaching a surface due to factors such as soiling and snow.',
      Vegetation: 'Vegetation',
      LeafOutDay: 'Leaf-Out Day',
      LeafOffDay: 'Leaf-Off Day',
      Albedo: 'Albedo',
      ImageOnGround: 'Image on Ground',
      SurfaceType: 'Surface Type',
      LandSurface: 'Land',
      WaterSurface: 'Water',
      RemoveAllUnlockedTrees: 'Remove All Unlocked Trees',
      RemoveAllUnlockedFlowers: 'Remove All Unlocked Flowers',
      RemoveAllUnlockedSolarPanels: 'Remove All Unlocked Solar Panels',
      RemoveAllUnlockedPeople: 'Remove All Unlocked People',
      RemoveAllUnlockedFoundations: 'Remove All Unlocked Foundations',
      RemoveAllUnlockedCuboids: 'Remove All Unlocked Cuboids',
      DoYouReallyWantToRemoveAllPeople: 'Do you really want to remove all the people who are not locked',
      DoYouReallyWantToRemoveAllTrees: 'Do you really want to remove all the trees that are not locked',
      DoYouReallyWantToRemoveAllFlowers: 'Do you really want to remove all the flowers that are not locked',
      DoYouReallyWantToRemoveAllSolarPanels: 'Do you really want to remove all the solar panels that are not locked',
      DoYouReallyWantToRemoveAllFoundations: 'Do you really want to remove all the foundations that are not locked',
      DoYouReallyWantToRemoveAllCuboids: 'Do you really want to remove all the cuboids that are not locked',
      LockAllUnlockedElements: 'Lock All Unlocked Elements',
      UnlockAllLockedElements: 'Unlock All Locked Elements',
    },

    labelSubMenu: {
      Label: 'Label',
      LabelText: 'Label Text',
      LabelHeight: 'Label Height',
      LabelSize: 'Label Size',
      LabelFontSize: 'Font Size',
      LabelColor: 'Label Color',
      KeepShowingLabel: 'Keep Showing Label',
    },

    foundationMenu: {
      SlopeAngle: 'Slope Angle',
      Slope: 'Slope',
      RemoveAllUnlockedSolarPanels: 'Remove All Unlocked Solar Panels',
      RemoveAllUnlockedParabolicTroughs: 'Remove All Unlocked Parabolic Troughs',
      RemoveAllUnlockedParabolicDishes: 'Remove All Unlocked Parabolic Dishes',
      RemoveAllUnlockedFresnelReflectors: 'Remove All Unlocked Fresnel Reflectors',
      RemoveAllUnlockedHeliostats: 'Remove All Unlocked Heliostats',
      RemoveAllUnlockedWindTurbines: 'Remove All Unlocked Wind Turbines',
      RemoveAllUnlockedSensors: 'Remove All Unlocked Sensors',
      RemoveAllUnlockedLights: 'Remove All Unlocked Lights',
      RemoveAllUnlockedWalls: 'Remove All Unlocked Walls',
      RemoveAllUnlockedWindows: 'Remove All Unlocked Windows',
      RemoveAllUnlockedDoors: 'Remove All Unlocked Doors',
      RemoveAllUnlockedPolygons: 'Remove All Unlocked Polygons',
      RemoveAllUnlockedHumans: 'Remove All Unlocked Humans',
      RemoveAllUnlockedTrees: 'Remove All Unlocked Trees',
      RemoveAllUnlockedFlowers: 'Remove All Unlocked Flowers',
      Racks: 'Racks',
      Texture01: 'Texture 1',
      Texture02: 'Texture 2',
      Texture03: 'Texture 3',
      Texture04: 'Texture 4',
      Texture05: 'Texture 5',
      Texture06: 'Texture 6',
      Texture07: 'Texture 7',
      Texture08: 'Texture 8',
      Texture09: 'Texture 9',
      Texture10: 'Texture 10',
      SolarPanels: 'Solar Panels',
      SolarPanelArray: 'Solar Panel Array',
      DoYouReallyWantToRemoveAllSolarPanelsOnFoundation:
        'Do you really want to remove all the solar panels on this foundation that are not locked',
      ParabolicTroughs: 'Parabolic Troughs',
      DoYouReallyWantToRemoveAllParabolicTroughsOnFoundation:
        'Do you really want to remove all the parabolic troughs on this foundation that are not locked',
      ParabolicDishes: 'Parabolic Dishes',
      DoYouReallyWantToRemoveAllParabolicDishesOnFoundation:
        'Do you really want to remove all the parabolic dishes on this foundation that are not locked',
      FresnelReflectors: 'Fresnel Reflectors',
      DoYouReallyWantToRemoveAllFresnelReflectorsOnFoundation:
        'Do you really want to remove all the Fresnel reflectors on this foundation that are not locked',
      Heliostats: 'Heliostats',
      DoYouReallyWantToRemoveAllHeliostatsOnFoundation:
        'Do you really want to remove all the heliostats on this foundation that are not locked',
      WindTurbines: 'Wind Turbines',
      DoYouReallyWantToRemoveAllWindTurbinesOnFoundation:
        'Do you really want to remove all the wind turbines on this foundation that are not locked',
      Sensors: 'Sensors',
      DoYouReallyWantToRemoveAllSensorsOnFoundation:
        'Do you really want to remove all the sensors on this foundation that are not locked',
      Lights: 'Lights',
      DoYouReallyWantToRemoveAllLightsOnFoundation:
        'Do you really want to remove all the lights on this foundation that are not locked',
      Walls: 'Walls',
      DoYouReallyWantToRemoveAllWallsOnFoundation:
        'Do you really want to remove all the walls on this foundation that are not locked',
      Windows: 'Windows',
      DoYouReallyWantToRemoveAllWindowsOnFoundation:
        'Do you really want to remove all the windows on this foundation that are not locked',
      Doors: 'Doors',
      DoYouReallyWantToRemoveAllDoorsOnFoundation:
        'Do you really want to remove all the doors on this foundation that are not locked',
      Polygons: 'Polygons',
      DoYouReallyWantToRemoveAllPolygonsOnFoundation:
        'Do you really want to remove all the polygons on this foundation that are not locked',
      Humans: 'Humans',
      DoYouReallyWantToRemoveAllHumansOnFoundation:
        'Do you really want to remove all the humans on this foundation who are not locked',
      Trees: 'Trees',
      DoYouReallyWantToRemoveAllTreesOnFoundation:
        'Do you really want to remove all the trees on this foundation that are not locked',
      Flowers: 'Flowers',
      DoYouReallyWantToRemoveAllFlowersOnFoundation:
        'Do you really want to remove all the flowers on this foundation that are not locked',
      OnlyThisFoundation: 'Only This Foundation',
      AllConnectedFoundations: 'All Connected Foundations',
      AllSelectedFoundations: 'All Selected Foundations',
      AllFoundations: 'All Foundations',
      AddPolygon: 'Add Polygon',
      SolarStructure: 'Solar Structure',
      GroupMaster: 'Group Master',
      LockAllUnlockedElementsOnThisFoundation: 'Lock All Unlocked Elements on This Foundation',
      UnlockAllLockedElementsOnThisFoundation: 'Unlock All Locked Elements on This Foundation',
      GroundFloorRValue: 'Ground Floor R-Value',
      OnlyThisGroundFloor: 'Only This Ground Floor',
      AllGroundFloors: 'All Ground Floors',
    },

    solarPowerTowerMenu: {
      ReceiverTowerForHeliostats: 'Receiver Tower for Heliostats',
      ReceiverTowerPhysicalProperties: 'Physical Properties of Receiver Tower',
      ReceiverTowerHeight: 'Height of Receiver Tower',
      ReceiverTowerRadius: 'Radius of Receiver Tower',
      ReceiverAbsorptance: 'Absorptance of Receiver',
      ReceiverOpticalEfficiency: 'Optical Efficiency of Receiver',
      ReceiverThermalEfficiency: 'Thermal Efficiency of Receiver',
    },

    solarAbsorberPipeMenu: {
      AbsorberPipeForFresnelReflectors: 'Absorber Pipe for Fresnel Reflectors',
      AbsorberPipePhysicalProperties: 'Physical Properties of Absorber Pipe',
      AbsorberHeight: 'Height of Absorber Pipe',
      AbsorberApertureWidth: 'Aperture Width of Absorber Pipe',
      AbsorberPipePoleNumber: 'Pole Number for Absorber Pipe',
      AbsorberAbsorptance: 'Absorptance of Absorber',
      AbsorberOpticalEfficiency: 'Optical Efficiency of Absorber',
      AbsorberThermalEfficiency: 'Thermal Efficiency of Absorber',
    },

    solarUpdraftTowerMenu: {
      SolarUpdraftTower: 'Solar Updraft Tower',
      SolarUpdraftTowerPhysicalProperties: 'Physical Properties of Solar Updraft Tower',
      SolarUpdraftTowerChimneyHeight: 'Solar Updraft Tower Chimney Height',
      SolarUpdraftTowerChimneyRadius: 'Solar Updraft Tower Chimney Radius',
      SolarUpdraftTowerCollectorHeight: 'Solar Updraft Tower Collector Height',
      SolarUpdraftTowerCollectorRadius: 'Solar Updraft Tower Collector Radius',
      SolarUpdraftTowerCollectorTransmissivity: 'Solar Updraft Tower Collector Transmissivity',
      SolarUpdraftTowerCollectorEmissivity: 'Solar Updraft Tower Collector Emissivity',
      SolarUpdraftTowerDischargeCoefficient: 'Solar Updraft Tower Discharge Coefficient',
      SolarUpdraftTowerTurbineEfficiency: 'Solar Updraft Tower Turbine Efficiency',
    },

    rulerMenu: {
      RulerDirection: 'Ruler Direction',
      Horizontal: 'Horizontal',
      Vertical: 'Vertical',
      Arbitrary: 'Arbitrary',
      TickMarkColor: 'Tick Mark Color',
      OnlyThisRuler: 'Only This Ruler',
      AllSelectedRulers: 'All Selected Rulers',
      AllRulers: 'All Rulers',
    },

    batteryStorageMenu: {
      BatteryStorage: 'Battery Storage',
      ChargingEfficiency: 'Charging Efficiency',
      DischargingEfficiency: 'Discharging Efficiency',
      HvacIdSelection: 'HVAC System',
      OnlyThisBatteryStorage: 'Only This Battery Storage',
      AllBatteryStoragesAboveSameFoundation: 'All Battery Storages Above the Same Foundation',
      AllSelectedBatteryStorages: 'All Selected Battery Storages',
      AllBatteryStorages: 'All Battery Storages',
    },

    batteryStoragePanel: {
      DailyChargeDischargeCurve: 'Battery Storage Daily Charge-Discharge Curve',
      YearlyStorage: 'Battery Storage over a Year',
      ShowResultsOfIndividualBatteryStorages: 'Show Results of Individual Battery Storages',
      DailySurplus: 'Daily Surplus',
      YearlySurplus: 'Yearly Surplus',
    },

    cuboidMenu: {
      Texture01: 'Texture 1',
      Texture02: 'Texture 2',
      Texture03: 'Texture 3',
      Texture04: 'Texture 4',
      Texture05: 'Texture 5',
      Texture06: 'Texture 6',
      Texture07: 'Texture 7',
      Texture08: 'Texture 8',
      Texture09: 'Texture 9',
      Texture10: 'Texture 10',
      RemoveAllUnlockedSolarPanels: 'Remove All Unlocked Solar Panels',
      RemoveAllUnlockedSensors: 'Remove All Unlocked Sensors',
      RemoveAllUnlockedPolygons: 'Remove All Unlocked Polygons',
      RemoveAllUnlockedHumans: 'Remove All Unlocked Humans',
      RemoveAllUnlockedTrees: 'Remove All Unlocked Trees',
      RemoveAllUnlockedFlowers: 'Remove All Unlocked Flowers',
      RemoveAllUnlockedLights: 'Remove All Unlocked Lights',
      Racks: 'Racks',
      SolarPanels: 'Solar Panels',
      DoYouReallyWantToRemoveAllSolarPanelsOnCuboid:
        'Do you really want to remove all the solar panels on this cuboid that are not locked',
      Lights: 'Lights',
      DoYouReallyWantToRemoveAllLightsOnCuboid:
        'Do you really want to remove all the lights on this cuboid that are not locked',
      Sensors: 'Sensors',
      DoYouReallyWantToRemoveAllSensorsOnCuboid:
        'Do you really want to remove all the sensors on this cuboid that are not locked',
      Polygons: 'Polygons',
      DoYouReallyWantToRemoveAllPolygonsOnCuboid:
        'Do you really want to remove all the polygons on this cuboid that are not locked',
      Humans: 'Humans',
      DoYouReallyWantToRemoveAllHumansOnCuboid:
        'Do you really want to remove all the humans on this cuboid who are not locked',
      Trees: 'Trees',
      DoYouReallyWantToRemoveAllTreesOnCuboid:
        'Do you really want to remove all the trees on this cuboid that are not locked',
      Flowers: 'Flowers',
      DoYouReallyWantToRemoveAllFlowersOnCuboid:
        'Do you really want to remove all the flowers on this cuboid that are not locked',
      OnlyThisCuboid: 'Only This Cuboid',
      AllCuboidsOnSameSurface: 'All Cuboids on Same Surface',
      AllCuboidsAboveSameBase: 'All Cuboids Above Same Base',
      AllSelectedCuboids: 'All Selected Cuboids',
      AllCuboids: 'All Cuboids',
      OnlyThisSide: 'Only This Side',
      AllSidesOfThisCuboid: 'All Sides of This Cuboid',
      AllSidesOfSelectedCuboids: 'All Sides of Selected Cuboids',
      AllSidesOfAllCuboids: 'All Sides of All Cuboids',
      AddPolygon: 'Add Polygon',
      Stackable: 'Stackable',
      GroupMaster: 'Group Master',
    },

    polygonMenu: {
      Texture01: 'Texture 1',
      Texture02: 'Texture 2',
      Texture03: 'Texture 3',
      Texture04: 'Texture 4',
      Texture05: 'Texture 5',
      Texture06: 'Texture 6',
      Texture07: 'Texture 7',
      Texture08: 'Texture 8',
      Texture09: 'Texture 9',
      Texture10: 'Texture 10',
      TextBox: 'Text Box',
      FontOutlineColor: 'Font Outline Color',
      FontOutlineWidth: 'Font Outline Width',
      FontStrokeColor: 'Font Stroke Color',
      FontStrokeWidth: 'Font Stroke Width',
      Outline: 'Outline',
      Shiny: 'Shiny',
      Filled: 'Filled',
      FillTexture: 'Fill Texture',
      FillColor: 'Fill Color',
      Opacity: 'Opacity',
      LineColor: 'Line Color',
      LineWidth: 'Line Width',
      LineStyle: 'Line Style',
      SolidLine: 'Solid Line',
      DashedLine: 'Dashed Line',
      DottedLine: 'Dotted Line',
      InsertVertexBeforeIndex: 'Insert Vertex Before Index',
      InsertVertexAfterIndex: 'Insert Vertex After Index',
      DeleteVertex: 'Delete Vertex',
      OnlyThisPolygon: 'Only This Polygon',
      AllPolygonsOnSurface: 'All Polygons on the Same Surface',
      AllPolygonsAboveFoundation: 'All Polygons Above Foundation',
      AllSelectedPolygons: 'All Selected Polygons',
      AllPolygons: 'All Polygons',
      Layout: 'Layout',
      SolarPanelArrayLayout: 'Solar Panel Array Layout',
      SolarPanelArrayLayoutParametricDesign: 'Solar Panel Array Layout: Parametric Design',
      SolarPanelArrayLayoutGenerativeDesign: 'Solar Panel Array Layout: Generative Design',
      SolarPanelArrayModel: 'Solar Panel Model',
      SolarPanelArrayOrientation: 'Orientation',
      SolarPanelArrayTiltAngle: 'Tilt Angle',
      SolarPanelArrayRowWidth: 'Row Width',
      SolarPanelArrayInterRowSpacing: 'Inter-Row Spacing',
      SolarPanelArrayRowSpacing: 'Row Spacing',
      SolarPanelArrayRowAxis: 'Row Axis',
      SolarPanelArrayLeftRightRowAxis: 'Left-Right (Relative)',
      SolarPanelArrayUpDownRowAxis: 'Up-Down (Relative)',
      SolarPanelArrayEastWestRowAxis: 'East-West (Absolute)',
      SolarPanelArrayNorthSouthRowAxis: 'North-South (Absolute)',
      SolarPanelArrayMargin: 'Margin',
      SolarPanelArrayPoleHeight: 'Pole Height',
      SolarPanelArrayPoleSpacing: 'Pole Spacing',
      SolarPanelArrayTotalYearlyCost: 'Total Cost',
      SolarPanelArrayTotalYearlyRevenue: 'Total Revenue',
      SolarPanelArrayTotalYearlyYield: 'Total Yield',
      SolarPanelArrayMeanYearlyYield: 'Mean Yield',
      SolarPanelArrayYearlyProfit: 'Profit',
      LayoutNotAcceptedCheckYourParameters: 'This layout is not accepted. Please check your parameters.',
    },

    optimizationMenu: {
      Optimization: 'Optimization',
      Parameters: 'Parameters',
      Variables: 'Variables',
      Constants: 'Constants',
      GeneticAlgorithm: 'Genetic Algorithm',
      GeneticAlgorithmSettings: 'Genetic Algorithm Settings',
      ParticleSwarmOptimization: 'Particle Swarm Optimization',
      ParticleSwarmOptimizationSettings: 'Particle Swarm Optimization Settings',
      SolarPanelTiltAngleOptimization: 'Solar Panel Tilt Angle Optimization',
      SolarPanelArrayLayout: 'Solar Panel Array Layout',
      Generation: 'Generation',
      Gene: 'Gene',
      NormalizedVariables: 'Normalized Variables',
      Objective: 'Objective',
      ObjectiveFunctionDailyTotalYield: 'Daily Total Yield',
      ObjectiveFunctionYearlyTotalYield: 'Yearly Total Yield',
      ObjectiveFunctionDailyMeanYield: 'Daily Mean Yield',
      ObjectiveFunctionYearlyMeanYield: 'Yearly Mean Yield',
      ObjectiveFunctionDailyProfit: 'Daily Profit',
      ObjectiveFunctionYearlyProfit: 'Yearly Profit',
      GeneticAlgorithmSelectionMethod: 'Genetic Algorithm Selection Method',
      RouletteWheel: 'Roulette Wheel',
      Tournament: 'Tournament',
      SearchMethod: 'Search Method',
      GlobalSearchUniformSelection: 'Global Search Uniform Selection',
      LocalSearchRandomOptimization: 'Local Search Random Optimization',
      PopulationSize: 'Population Size',
      MaximumGenerations: 'Maximum Generations',
      SelectionRate: 'Selection Rate',
      CrossoverRate: 'Crossover Rate',
      MutationRate: 'Mutation Rate',
      Step: 'Step',
      SwarmSize: 'Swarm Size',
      MaximumSteps: 'Maximum Steps',
      MaximumVelocity: 'Maximum Velocity',
      InertiaWeight: 'Inertia Weight',
      CognitiveCoefficient: 'Cognitive Coefficient',
      SocialCoefficient: 'Social Coefficient',
      ConvergenceThreshold: 'Convergence Threshold for Termination',
      LocalSearchRadius: 'Local Search Radius',
      RowsPerRackRange: 'Range for Rows per Rack',
      TiltAngleRange: 'Range for Tilt Angle',
      InterRowSpacingRange: 'Range for Inter-Row Spacing',
      ClickTargetPolygonToActivate: 'Click Target Polygon to Activate',
      ClickTargetFoundationToActivate: 'Click Target Foundation to Activate',
    },

    treeMenu: {
      ShowModel: 'Show Model',
      Flip: 'Flip',
      Type: 'Type',
      Spread: 'Spread',
    },

    flowerMenu: {
      Flip: 'Flip',
      Type: 'Type',
      Spread: 'Spread',
    },

    peopleMenu: {
      ChangePerson: 'Change Person',
      Flip: 'Flip',
      Observer: 'Observer',
      ViewFromThisPerson: 'View from This Person',
    },

    lightMenu: {
      Color: 'Color',
      Intensity: 'Intensity',
      Decay: 'Decay',
      MaximumDistance: 'Distance',
      Inside: 'Inside',
    },

    solarCollectorMenu: {
      Coordinates: 'Coordinates',
      RelativeXCoordinateOfCenter: 'Relative X Coordinate of Center',
      RelativeYCoordinateOfCenter: 'Relative Y Coordinate of Center',
      RelativeAzimuth: 'Relative Azimuth',
      Pole: 'Pole',
      PoleHeight: 'Pole Height',
      PoleRadius: 'Pole Radius',
      ExtraPoleHeight: 'Extra Pole Height',
      ExtraPoleHeightInAdditionToHalfWidth: 'Extra Pole Height in Addition to Half Width',
      SunBeam: 'Sun Beam',
      DrawSunBeam: 'Draw Sun Beam',
    },

    concentratedSolarPowerCollectorMenu: {
      ReflectorReflectance: 'Reflector Reflectance',
      ReceiverAbsorptance: 'Receiver Absorptance',
      ReflectorOpticalEfficiency: 'Reflector Optical Efficiency',
      ReceiverThermalEfficiency: 'Receiver Thermal Efficiency',
    },

    solarPanelMenu: {
      ElectricalProperties: 'Electrical Properties',
      InverterEfficiency: 'Inverter Efficiency',
      InverterEfficiencyExplained: 'The efficiency for converting direct current (DC) to alternating current (AC).',
      DcToAcSizeRatio: 'DC-to-AC Size Ratio',
      DcToAcSizeRatioExplained: "The ratio of the solar panels' DC-rated size to the inverter's AC-rated size.",
      BatteryStorageSelection: 'Battery Storage',
      ChangePvModel: 'Change PV Model',
      Orientation: 'Orientation',
      Portrait: 'Portrait',
      Landscape: 'Landscape',
      FrameColor: 'Frame Color',
      Panels: 'panels',
      PanelsWide: 'panels wide',
      PanelsLong: 'panels long',
      TiltAngle: 'Tilt Angle',
      SouthFacingIsPositive: 'South facing is positive',
      Tracker: 'Tracker',
      SolarTrackerFollowsSun: 'A tracker follows the sun to increase solar panel outputs.',
      PoleSpacing: 'Pole Spacing',
      NoTracker: 'No Tracker',
      HorizontalSingleAxisTracker: 'Horizontal Single Axis Tracker',
      VerticalSingleAxisTracker: 'Vertical Single Axis Tracker',
      AltazimuthDualAxisTracker: 'Altazimuth Dual Axis Tracker',
      OnlyThisSolarPanel: 'Only This Solar Panel',
      AllSolarPanelsOnSurface: 'All Solar Panels on the Same Surface',
      AllSolarPanelsAboveFoundation: 'All Solar Panels Above the Same Foundation',
      AllSelectedSolarPanels: 'All Selected Solar Panels',
      AllSolarPanels: 'All Solar Panels',
    },

    solarWaterHeaterMenu: {
      OnlyThisSolarWaterHeater: 'Only This Solar Water Heater',
      AllSolarWaterHeatersOnSurface: 'All Solar Water Heaters on the Same Surface',
      AllSolarWaterHeatersAboveFoundation: 'All Solar Water Heaters Above the Same Foundation',
      AllSelectedSolarWaterHeaters: 'All Selected Solar Water Heaters',
      AllSolarWaterHeaters: 'All Solar Water Heaters',
    },

    pvModelPanel: {
      SolarPanelSpecs: 'Solar Panel Specs',
      General: 'General',
      Electrical: 'Electrical',
      CellCountInXDirection: 'Cell Count in X Direction',
      CellCountInYDirection: 'Cell Count in Y Direction',
      Weight: 'Weight',
      Kilogram: 'kg',
      RatedVoltage: 'Rated Voltage',
      RatedCurrent: 'Rated Current',
      OpenCircuitVoltage: 'Open-Circuit Voltage',
      ShortCircuitCurrent: 'Short-Circuit Current',
      MaximumRatedPower: 'Maximum Rated Power',
      Model: 'Model',
      PanelSize: 'Panel Size',
      Cells: 'Cells',
      CellType: 'Cell Type',
      Monocrystalline: 'Monocrystalline',
      Polycrystalline: 'Polycrystalline',
      ThinFilm: 'Thin Film',
      Bifacial: 'Bifacial',
      PowerBifaciality: 'Power Bifaciality (Rear/Front)',
      Black: 'Black',
      Blue: 'Blue',
      ShadeTolerance: 'Shade Tolerance',
      SolarCellEfficiency: 'Solar Cell Efficiency',
      NominalOperatingCellTemperature: 'Nominal Operating Cell Temperature',
      TemperatureCoefficientOfPmax: 'Temperature Coefficient of Pmax',
      AddedCustomSolarPanels: 'Added',
      DisplayThisCustomSolarPanel: 'Display this custom solar panel',
      ExportThisCustomSolarPanel: 'Export this custom solar panel',
      ImportCustomSolarPanelFromClipboard: 'Import custom solar panel from clipboard',
      CustomSolarPanelExportedToClipboard: 'Custom solar panel exported to Clipboard',
      DoYouReallyWantToRemoveThisCustomSolarPanel: 'Do you really want to remove this custom solar panel',
      MakeSureThisCustomSolarPanelIsNotUsed: 'Make sure this custom solar panel is not used in the current file',
      ThisCustomSolarPanelIsUsed: 'This custom solar panel is used in the current file',
      DoYouReallyWantToImportCustomSolarPanel: 'Do you really want to import a custom solar panel',
      ExistingSettingsWillBeOverwritten: 'The existing settings will be overwritten',
      CannotAddCustomSolarPanel: 'Cannot add custom solar panel',
      CustomSolarPanelMustHaveModelName: 'A custom solar panel must have a model name',
      CustomSolarPanelExists: 'A custom solar panel with this name already exists',
      FailInImportingDataFromClipboard: 'Failed in importing data from the clipboard',
      NoNeedToAddThisCustomSolarPanel: 'No Need to Add This',
      SolarPanelModelAlreadyProvidedBySystem: 'This solar panel model is already provided by the system',
    },

    parabolicTroughMenu: {
      ModuleLength: 'Module Length',
      Modules: 'modules',
      ModulesLong: 'modules long',
      LatusRectum: 'Latus Rectum',
      OnlyThisParabolicTrough: 'Only This Parabolic Trough',
      AllParabolicTroughsAboveFoundation: 'All Parabolic Troughs Above the Same Foundation',
      AllSelectedParabolicTroughs: 'All Selected Parabolic Troughs',
      AllParabolicTroughs: 'All Parabolic Troughs',
    },

    fresnelReflectorMenu: {
      AbsorberPipe: 'Absorber Pipe',
      SelectAbsorberToReflectSunlightTo: 'Select Absorber to Reflect Sunlight to',
      ModuleLength: 'Module Length',
      Modules: 'modules',
      ModulesLong: 'modules long',
      OnlyThisFresnelReflector: 'Only This Fresnel Reflector',
      AllFresnelReflectorsAboveFoundation: 'All Fresnel Reflectors Above the Same Foundation',
      AllSelectedFresnelReflectors: 'All Selected Fresnel Reflectors',
      AllFresnelReflectors: 'All Fresnel Reflectors',
    },

    heliostatMenu: {
      Tower: 'Tower',
      SelectTowerToReflectSunlightTo: 'Select Tower to Reflect Sunlight to',
      OnlyThisHeliostat: 'Only This Heliostat',
      AllHeliostatsAboveFoundation: 'All Heliostats Above the Same Foundation',
      AllSelectedHeliostats: 'All Selected Heliostats',
      AllHeliostats: 'All Heliostats',
    },

    parabolicDishMenu: {
      ReceiverStructure: 'Receiver Structure',
      CentralPole: 'Central Pole',
      CentralPoleWithTripod: 'Central Pole with Tripod',
      Quadrupod: 'Quadrupod',
      RimDiameter: 'Rim Diameter',
      LatusRectum: 'Latus Rectum',
      ExtraPoleHeightInAdditionToRadius: 'Extra Pole Height in Addition to Radius',
      OnlyThisParabolicDish: 'Only This Parabolic Dish',
      AllParabolicDishesAboveFoundation: 'All Parabolic Dishes Above the Same Foundation',
      AllSelectedParabolicDishes: 'All Selected Parabolic Dishes',
      AllParabolicDishes: 'All Parabolic Dishes',
    },

    windTurbineMenu: {
      BirdSafeDesign: 'Bird-Safe Design',
      BirdSafeNone: 'None',
      BirdSafeBicolor: 'Bicolor',
      BirdSafeStriped: 'Striped',
      Rotor: 'Rotor',
      BladeNumber: 'Blade Number',
      RotorInitialAngle: 'Rotor Initial Angle',
      RotorBladeDesign: 'Rotor Blade Design',
      RotorBladeRadius: 'Rotor Blade Radius',
      RotorBladePitchAngle: 'Rotor Blade Pitch Angle',
      RelativeYawAngle: 'Relative Yaw Angle',
      MaximumChordLength: 'Maximum Chord Length',
      Tower: 'Tower',
      TowerHeight: 'Tower Height',
      TowerRadius: 'Tower Radius',
      HubDesign: 'Hub Design',
      HubRadius: 'Hub Radius',
      HubLength: 'Hub Length',
      OnlyThisWindTurbine: 'Only This Wind Turbine',
      AllWindTurbinesAboveFoundation: 'All Wind Turbines Above the Same Foundation',
      AllSelectedWindTurbines: 'All Selected Wind Turbines',
      AllWindTurbines: 'All Wind Turbines',
    },

    wallMenu: {
      TextureDefault: 'Default',
      Texture01: 'Texture 1',
      Texture02: 'Texture 2',
      Texture03: 'Texture 3',
      Texture04: 'Texture 4',
      Texture05: 'Texture 5',
      Texture06: 'Texture 6',
      Texture07: 'Texture 7',
      Texture08: 'Texture 8',
      Texture09: 'Texture 9',
      Texture10: 'Texture 10',
      SizeOfWall: 'Size of Wall',
      OnlyThisWall: 'Only This Wall',
      AllConnectedWalls: 'All Connected Walls',
      AllWallsAboveFoundation: 'All Walls Above the Same Foundation',
      AllSelectedWalls: 'All Selected Walls',
      AllWalls: 'All Walls',
      Windows: 'Windows',
      LockAllUnlockedWindows: 'Lock All Unlocked Windows',
      UnlockAllLockedWindows: 'Unlock All Locked Windows',
      RemoveAllUnlockedWindows: 'Remove All Unlocked Windows',
      DoYouReallyWantToRemoveAllWindowsOnThisWall: 'Do you really want to remove all the windows on this wall',
      Doors: 'Doors',
      LockAllUnlockedDoors: 'Lock All Unlocked Doors',
      UnlockAllLockedDoors: 'Unlock All Locked Doors',
      RemoveAllUnlockedDoors: 'Remove All Unlocked Doors',
      DoYouReallyWantToRemoveAllDoorsOnThisWall: 'Do you really want to remove all the doors on this wall',
      SolarPanels: 'Solar Panels',
      LockAllUnlockedSolarPanels: 'Lock All Unlocked Solar Panels',
      UnlockAllLockedSolarPanels: 'Unlock All Locked Solar Panels',
      RemoveAllUnlockedSolarPanels: 'Remove All Unlocked Solar Panels',
      DoYouReallyWantToRemoveAllSolarPanelsOnThisWall: 'Do you really want to remove all the solar panels on this wall',
      Sensors: 'Sensors',
      LockAllUnlockedSensors: 'Lock All Unlocked Sensors',
      UnlockAllLockedSensors: 'Unlock All Locked Sensors',
      RemoveAllUnlockedSensors: 'Remove All Unlocked Sensors',
      DoYouReallyWantToRemoveAllSensorsOnThisWall: 'Do you really want to remove all the sensors on this wall',
      Lights: 'Lights',
      LockAllUnlockedLights: 'Lock All Unlocked Lights',
      UnlockAllLockedLights: 'Unlock All Locked Lights',
      RemoveAllUnlockedLights: 'Remove All Unlocked Lights',
      DoYouReallyWantToRemoveAllLightsOnThisWall: 'Do you really want to remove all the lights on this wall',
      Polygons: 'Polygons',
      LockAllUnlockedPolygons: 'Lock All Unlocked Polygons',
      UnlockAllLockedPolygons: 'Unlock All Locked Polygons',
      RemoveAllUnlockedPolygons: 'Remove All Unlocked Polygons',
      DoYouReallyWantToRemoveAllPolygonsOnThisWall: 'Do you really want to remove all the polygons on this wall',
      WallStructure: 'Wall Structure',
      DefaultStructure: 'Default',
      StudStructure: 'Stud',
      PillarStructure: 'Pillar',
      Opacity: 'Opacity',
      StructureSpacing: 'Structure Spacing',
      StructureWidth: 'Structure Width',
      StructureThickness: 'Structure Thickness',
      StructureColor: 'Structure Color',
      Color: 'Wall Color',
      Height: 'Height',
      Thickness: 'Thickness',
      Texture: 'Texture',
      AllLightsOnWallInside: 'All Lights on Wall Inside',
      AllLightsOnWallOutside: 'All Lights on Wall Outside',
      Fill: 'Fill',
      Full: 'Full',
      Partial: 'Partial',
      Empty: 'Empty',
      OpenToOutside: 'Open to Outside',
      EavesLength: 'Eaves Overhang Length',
      Parapet: 'Parapet',
      ParapetColor: 'Parapet Color',
      ParapetTexture: 'Parapet Texture',
      ParapetHeight: 'Parapet Height',
      CopingsHeight: 'Copings Height',
      CopingsWidth: 'Copings Width',
    },

    windowMenu: {
      OnlyThisWindow: 'Only This Window',
      AllWindowsOnSurface: 'All Windows on the Same Surface',
      AllWindowsAboveFoundation: 'All Windows Above the Same Foundation',
      AllSelectedWindows: 'All Selected Windows',
      AllWindows: 'All Windows',
      Width: 'Width',
      Height: 'Height',
      Setback: 'Setback from Exterior Surface',
      RelativeToWallThickness: 'Relative to wall thickness',
      Mullion: 'Mullion',
      HorizontalMullion: 'Horizontal Mullion',
      VerticalMullion: 'Vertical Mullion',
      MullionWidth: 'Mullion Width',
      HorizontalMullionSpacing: 'Horizontal Mullion Spacing',
      VerticalMullionSpacing: 'Vertical Mullion Spacing',
      MullionColor: 'Mullion Color',
      Tint: 'Tint',
      Opacity: 'Opacity',
      SolarHeatGainCoefficient: 'Solar heat gain coefficient (SHGC) = 1 - opacity',
      Shutter: 'Shutter',
      LeftShutter: 'Left Shutter',
      RightShutter: 'Right Shutter',
      BothShutters: 'Both Shutters',
      ShutterWidth: 'Relative Width',
      ShutterColor: 'Shutter Color',
      Frame: 'Frame',
      FrameWidth: 'Frame Width',
      SillWidth: 'Sill Width',
      Color: 'Frame Color',
      WindowType: 'Window Type',
      Default: 'Default',
      Arched: 'Arched',
      Polygonal: 'Polygonal',
      Interior: 'Interior',
      Empty: 'Empty',
    },

    roofMenu: {
      TextureDefault: 'Default',
      Texture01: 'Texture 1',
      Texture02: 'Texture 2',
      Texture03: 'Texture 3',
      Texture04: 'Texture 4',
      Texture05: 'Texture 5',
      Texture06: 'Texture 6',
      Texture07: 'Texture 7',
      OnlyThisRoof: 'Only This Roof',
      AllRoofsAboveFoundation: 'All Roofs Above the Same Foundation',
      AllSelectedRoofs: 'All Selected Roofs',
      AllRoofs: 'All Roofs',
      OnlyThisCeiling: 'Only This Ceiling',
      AllCeilingsAboveFoundation: 'All Ceilings Above the Same Foundation',
      AllCeilings: 'All Ceilings',
      EavesOverhangLength: 'Eaves Overhang Length',
      RafterSpacing: 'Rafter Spacing',
      RafterWidth: 'Rafter Width',
      RafterThickness: 'Rafter Thickness',
      RafterColor: 'Rafter Color',
      RoofColor: 'Roof Color',
      RoofSideColor: 'Roof Side Color',
      GlassTint: 'Glass Tint',
      Opacity: 'Opacity',
      RoofStructure: 'Roof Structure',
      DefaultStructure: 'Default',
      RafterStructure: 'Rafter',
      GlassStructure: 'Glass',
      SolarPanels: 'Solar Panels',
      LockAllUnlockedSolarPanels: 'Lock All Unlocked Solar Panels',
      UnlockAllLockedSolarPanels: 'Unlock All Locked Solar Panels',
      RemoveAllUnlockedSolarPanels: 'Remove All Unlocked Solar Panels',
      DoYouReallyWantToRemoveAllSolarPanelsOnThisRoof: 'Do you really want to remove all the solar panels on this roof',
      Windows: 'Windows',
      LockAllUnlockedWindows: 'Lock All Unlocked Windows',
      UnlockAllLockedWindows: 'Unlock All Locked Windows',
      RemoveAllUnlockedWindows: 'Remove All Unlocked Windows',
      DoYouReallyWantToRemoveAllWindowsOnThisRoof: 'Do you really want to remove all the windows on this roof',
      Sensors: 'Sensors',
      LockAllUnlockedSensors: 'Lock All Unlocked Sensors',
      UnlockAllLockedSensors: 'Unlock All Locked Sensors',
      RemoveAllUnlockedSensors: 'Remove All Unlocked Sensors',
      DoYouReallyWantToRemoveAllSensorsOnThisRoof: 'Do you really want to remove all the sensors on this roof',
      Lights: 'Lights',
      RemoveAllUnlockedLights: 'Remove All Unlocked Lights',
      DoYouReallyWantToRemoveAllLightsOnThisRoof: 'Do you really want to remove all the lights on this roof',
      AllLightsOnRoofInside: 'All Lights on Roof Inside',
      AllLightsOnRoofOutside: 'All Lights on Roof Outside',
      Rise: 'Rise',
      Ceiling: 'Ceiling',
      RoofRValue: 'Roof R-Value',
      CeilingRValue: 'Ceiling R-Value',
    },

    doorMenu: {
      TextureDefault: 'Default',
      Texture01: 'Texture 1',
      Texture02: 'Texture 2',
      Texture03: 'Texture 3',
      Texture04: 'Texture 4',
      Texture05: 'Texture 5',
      Texture06: 'Texture 6',
      Texture07: 'Texture 7',
      Texture08: 'Texture 8',
      Texture09: 'Texture 9',
      Texture10: 'Texture 10',
      Texture11: 'Texture 11',
      Texture12: 'Texture 12',
      Texture13: 'Texture 13',
      Texture14: 'Texture 14',
      Texture15: 'Texture 15',
      Texture16: 'Texture 16',
      Texture17: 'Texture 17',
      OnlyThisDoor: 'Only This Door',
      AllDoorsOnWall: 'All Doors on the Same Wall',
      AllDoorsAboveFoundation: 'All Doors Above the Same Foundation',
      AllSelectedDoors: 'All Selected Doors',
      AllDoors: 'All Doors',
      DoorType: 'Door Type',
      Default: 'Default',
      Arched: 'Arched',
      Filled: 'Filled',
      Framed: 'Framed',
      FrameColor: 'Frame Color',
      Interior: 'Interior',
    },

    siteInfoPanel: {
      High: 'High',
      Low: 'Low',
    },

    designInfoPanel: {
      NumberOfSelectedHeliostats: 'Number of selected heliostats',
      NumberOfSelectedSolarPanels: 'Number of selected solar panels',
      ElectricityGeneratedDailyBySolarPanels: 'Electricity generated daily by these solar panels',
      RefreshSceneDiameter: 'Refresh scene diameter',
      BuildingArea: 'Building area',
    },

    visualizationControlPanel: {
      ColorContrast: 'Color Contrast',
      FluxScale: 'Flux Scale',
      ClickUpOrDownArrowButtonsToChange: 'Click up or down arrow buttons to change',
    },

    instructionPanel: {
      Rotate: 'Rotate',
      DragMouse: 'Drag mouse',
      Zoom: 'Zoom',
      MouseWheelOrKeys: 'Rotate mouse wheel or press Ctrl+[ or Ctrl+]',
      MouseWheelOrKeysMac: 'Rotate mouse wheel or press ⌘+[ or ⌘+]',
      Pan: 'Pan',
      HoldCtrlDragMouse: 'Hold Ctrl and drag mouse',
      HoldMetaDragMouse: 'Hold ⌘ and drag mouse',
      Enter2DMode: 'Enter 2D mode',
      Exit2DMode: 'Exit 2D mode',
      NavigationMode: 'Navigation mode',
      EnableNavigation: 'Enable navigation',
      DisableNavigation: 'Disable navigation',
      MoveForwardBack: 'Move forward/back',
      MoveForwardBackInstruction: 'Press W/S',
      MoveLeftRight: 'Move left/right',
      MoveLeftRightInstruction: 'Press A/D',
      MoveUpDown: 'Move up/down',
      MoveUpDownInstruction: 'Press Z/X',
      Turn: 'Turn',
      TurnInstruction: 'Press arrow keys',
      ResetView: 'Reset',
      AutoRotate: 'Auto rotate',
      StartOrStop: 'Press F4 to start or stop',
    },

    mapPanel: {
      ImageOnGround: 'Image on Ground',
      HideAddress: 'Hide Address',
      WeatherStations: 'Weather Stations',
      WeatherStationsNote: 'Turn this off to speed up',
      Coordinates: 'Coordinates',
      Zoom: 'Zoom',
    },

    visibilityPanel: {
      SolarPanelVisibility: 'Solar Panel Visibility',
      Observer: 'Observer',
      VantagePoint: 'Vantage Point',
      ItemizedVisibilityByFields: 'Itemized by Fields',
      TotalVisibility: 'Total',
    },

    sensorPanel: {
      LightSensor: 'Light Sensor',
      WeatherDataFrom: 'Weather Data from',
    },

    buildingEnergyPanel: {
      DailyBuildingEnergy: 'Daily Building Energy',
      YearlyBuildingEnergy: 'Yearly Building Energy',
      Heater: 'Heater',
      AC: 'AC',
      SolarPanel: 'Solar Panel',
      Net: 'Net',
      Grid: 'Grid',
      Summary: 'Summary',
    },

    solarPanelYieldPanel: {
      CompareWithElectricityConsumption: 'Compare with Electricity Consumption',
      SolarPanelDailyYield: 'Solar Panel Daily Yield',
      SolarPanelYearlyYield: 'Solar Panel Yearly Yield',
      Yield: 'Yield',
      YieldPerHour: 'Yield per Hour',
      DailyTotal: 'Daily Total',
      YearlyTotal: 'Yearly Total',
      ShowOutputsOfIndividualSolarPanels: 'Show outputs of individual solar panels',
      Profit: 'Profit',
      TotalCost: 'Total Cost',
      TotalRevenue: 'Total Revenue',
      TotalYield: 'Total Yield',
      MeanYield: 'Mean Yield',
      ModuleCount: 'Module Count',
    },

    parabolicTroughYieldPanel: {
      ParabolicTroughDailyYield: 'Parabolic Trough Daily Yield',
      ParabolicTroughYearlyYield: 'Parabolic Trough Yearly Yield',
      Yield: 'Yield',
      YieldPerHour: 'Yield per Hour',
      DailyTotal: 'Daily Total',
      YearlyTotal: 'Yearly Total',
      ShowOutputsOfIndividualParabolicTroughs: 'Show outputs of individual parabolic troughs',
    },

    parabolicDishYieldPanel: {
      ParabolicDishDailyYield: 'Parabolic Dish Daily Yield',
      ParabolicDishYearlyYield: 'Parabolic Dish Yearly Yield',
      Yield: 'Yield',
      YieldPerHour: 'Yield per Hour',
      DailyTotal: 'Daily Total',
      YearlyTotal: 'Yearly Total',
      ShowOutputsOfIndividualParabolicDishes: 'Show outputs of individual parabolic dishes',
    },

    fresnelReflectorYieldPanel: {
      FresnelReflectorDailyYield: 'Fresnel Reflector Daily Yield',
      FresnelReflectorYearlyYield: 'Fresnel Reflector Yearly Yield',
      Yield: 'Yield',
      YieldPerHour: 'Yield per Hour',
      DailyTotal: 'Daily Total',
      YearlyTotal: 'Yearly Total',
      ShowOutputsOfIndividualFresnelReflectors: 'Show outputs of individual Fresnel feflectors',
    },

    heliostatYieldPanel: {
      HeliostatDailyYield: 'Heliostat Daily Yield',
      HeliostatYearlyYield: 'Heliostat Yearly Yield',
      Yield: 'Yield',
      YieldPerHour: 'Yield per Hour',
      DailyTotal: 'Daily Total',
      YearlyTotal: 'Yearly Total',
      ShowOutputsOfIndividualHeliostats: 'Show outputs of individual heliostats',
    },

    updraftTowerYieldPanel: {
      UpdraftTowerDailyYield: 'Solar Updraft Tower Daily Yield',
      UpdraftTowerYearlyYield: 'Solar Updraft Tower Yearly Yield',
      ChimneyAirTemperature: 'Chimney Air Temperature',
      ChimneyWindSpeed: 'Chimney Wind Speed',
      Yield: 'Yield',
      YieldPerHour: 'Yield per Hour',
      DailyTotal: 'Daily Total',
      YearlyTotal: 'Yearly Total',
      ShowOutputsOfIndividualUpdraftTowers: 'Show outputs of individual updraft towers',
    },

    heliodonPanel: {
      SunAndTimeSettings: 'Sun & Time Settings',
      SunAngles: 'Angles',
      TwentyFourHours: '24 Hours',
    },

    cloudFilePanel: {
      CopyTitle: 'Copy Title',
      TitleCopiedToClipBoard: 'The title was copied to the clip board',
      SearchByTitle: 'Search by title',
      MyLikes: 'My Likes',
      MyCloudFiles: 'My Cloud Files',
      GenerateLink: 'Generate Link',
      LinkGeneratedInClipBoard: 'A link was generated in the clip board',
      DoYouReallyWantToDelete: 'Do you really want to delete',
      IfSharedOrPublishedRenamingFileBreaksExistingLinks:
        'If this file has been shared or published, renaming it breaks existing links',
    },

    projectListPanel: {
      CopyTitle: 'Copy Title',
      TitleCopiedToClipBoard: 'The title was copied to the clip board',
      SearchByTitle: 'Search by title',
      MyProjects: 'My Projects',
      GenerateProjectLink: 'Generate Project Link',
      ProjectLinkGeneratedInClipBoard: 'A link to the project was generated in the clip board',
      DoYouReallyWantToDeleteProject: 'Do you really want to delete Project',
      IfSharedOrPublishedRenamingProjectBreaksExistingLinks:
        'If this project has been shared or published, renaming it breaks existing links',
    },

    projectPanel: {
      ProjectSettings: 'Project Settings',
      ThumbnailImageSize: 'Thumbnail Image Size',
      ProjectByOtherPeople: 'Project by Other People',
      Project: 'Project',
      ProjectType: 'Type',
      ProjectDescription: 'Description',
      MakeDescriptionEditable: 'Make this description editable',
      MakeDescriptionNonEditable: 'Make this description non-editable',
      DoubleClickToMakeDescriptionEditable: 'Double-click to make this description editable',
      SolarPanelArray: 'Solar Panel Array',
      CurateCurrentDesign: 'Curate current design',
      UpdateSelectedDesign: 'Update selected design',
      RemoveSelectedDesign: 'Remove selected design',
      ClickToFlipSortingOrder: 'Click to flip the sorting order',
      DesignNotShownInSolutionSpaceClickToShow: 'This design is not shown in solution space; click to show',
      DesignShownInSolutionSpaceClickToHide: 'This design is shown in solution space; click to hide',
      SolutionSpace: 'Solution Space',
      ChooseSolutionSpace: 'Choose solution space',
      ChooseDataColoring: 'Choose data coloring',
      SameColorForAllDesigns: 'Same color for all designs',
      OneColorForEachDesign: 'One color for each design',
      SolutionSpaceScreenshot: 'Take a screenshot of the solution space',
      ScatterPlotScreenshot: 'Take a screenshot of the scatter plot',
      SingleClickToSelectDoubleClickToOpen: 'Single-click to select, double-click to open.',
      SingleClickToDeselectDoubleClickToOpen: 'Single-click to deselect, double-click to open.',
      GenerateScatterPlot: 'Generate Scatter Plot',
      SelectXAxis: 'Select X Axis',
      SelectYAxis: 'Select Y Axis',
    },

    accountSettingsPanel: {
      MyAccountSettings: 'My Account Settings',
      MyID: 'My 🆔',
      ClickToCopyMyID: 'Click to copy my ID',
      IDInClipBoard: 'Your ID was copied and is ready to paste.',
      StoreMyNameInMyFilesWhenSaving: 'Store my name in my files when saving',
      DoYouReallyWantToShowYourNameInYourFiles: 'Do you really want to show your display name in your files?',
      SignFileDisclaimer: 'If yes, your display name may be seen by anyone who can access your files.',
      Likes: 'Likes',
      AllPublished: 'All Published',
      PublishedUnderAliases: 'Aliases',
      UserCount: 'User Count',
      SchoolID: 'School ID',
      ClassID: 'Class ID',
    },

    weatherPanel: {
      SunshineHours: 'Sunshine',
    },

    diurnalTemperaturePanel: {
      SelectAirTemperatureModel: 'Select Air Temperature Model',
      Sinusoidal: 'Sinusoidal',
    },

    economicsPanel: {
      EconomicsParameters: 'Economics Parameters',
      ElectricitySellingPrice: 'Electricity Selling Price',
      OperationalCostPerUnit: 'Operational Cost per Unit',
      SellingPrice: 'Selling Price',
      UnitCost: 'Unit Cost',
    },

    editorPanel: {
      EditorParameters: 'Editor Parameters',
      ArrowKeyMoveStep: 'Arrow Key Move Step',
    },

    navigationPanel: {
      NavigationParameters: 'Navigation Parameters',
      MinimumMoveSpeed: 'Minimum Move Speed',
      MinimumTurnSpeed: 'Minimum Turn Speed',
    },

    shadowSettingsPanel: {
      ShadowSettings: 'Shadow Settings',
      ShadowCameraFarDistance: 'Shadow Camera Far Distance',
      ShadowMapSize: 'Shadow Map Size',
      Notes: 'Notes',
      RefreshPageNote: 'Refresh the page for the new settings to take effect.',
      MapSizeWarning: 'A large shadow map size may cause Aladdin to crash on some computers.',
    },

    yearlyLightSensorPanel: {
      SkyClearness: 'Clearness',
      ShowDaylightResults: 'Show daylight results',
      ShowSkyClearnessResults: 'Show sky clearness results',
      ShowAverageDailySolarRadiation: 'Show average daily solar radiation',
    },

    analysisManager: {
      NoSensorForCollectingData: 'There is no sensor for collecting data.',
      NoSolarPanelForAnalysis: 'There is no solar panel for analysis.',
      NoObserverForVisibilityAnalysis: 'There is no observer for visibility analysis.',
      NoSolarWaterHeaterForAnalysis: 'There is no solar water heater for analysis.',
      NoParabolicDishForAnalysis: 'There is no parabolic dish for analysis.',
      NoParabolicTroughForAnalysis: 'There is no parabolic trough for analysis.',
      NoFresnelReflectorForAnalysis: 'There is no Fresnel reflector for analysis.',
      NoHeliostatForAnalysis: 'There is no heliostat for analysis.',
      NoSolarUpdraftTowerForAnalysis: 'There is no solar updraft tower for analysis.',
      NoBuildingForAnalysis: 'There is no building for analysis.',
      NoBatteryStorageForAnalysis: 'There is no connected battery storage for analysis',
    },

    toolbar: {
      CloudFile: 'Cloud file',
      Select: 'Select',
      AddRuler: 'Add Ruler',
      AddFoundation: 'Add Foundation',
      AddWall: 'Add Wall',
      AddWindow: 'Add Window',
      AddDoor: 'Add Door',
      AddPyramidRoof: 'Add Pyramid Roof',
      AddGableRoof: 'Add Gable Roof',
      AddHipRoof: 'Add Hip Roof',
      AddGambrelRoof: 'Add Gambrel Roof',
      AddMansardRoof: 'Add Mansard Roof',
      AddCuboid: 'Add Cuboid',
      AddSensor: 'Add Sensor',
      AddSolarPanel: 'Add Solar Panel',
      AddSolarWaterHeater: 'Add Solar Water Heater',
      AddBatteryStorage: 'Add Battery Storage',
      AddParabolicDish: 'Add Parabolic Dish',
      AddParabolicTrough: 'Add Parabolic Trough',
      AddFresnelReflector: 'Add Fresnel Reflector',
      AddHeliostat: 'Add Heliostat',
      AddWindTurbine: 'Add Horizontal Axis Wind Turbine',
      AddVerticalAxisWindTurbine: 'Add Vertical Axis Wind Turbine',
      AddLight: 'Add Light',
      AddTree: 'Add Tree',
      AddFlower: 'Add Flower',
      AddPeople: 'Add People',
      DoubleClickToLockThisModeForNextAction: 'Double-click to lock this mode for next action',
      ClickToUnlockThisModeForNextAction: 'Click to unlock this mode for next action',
      ManipulateGroup: 'Manipulate a group',
      ClearScene: 'Clear scene',
      ShowSunAndTimeSettings: 'Show sun and time settings',
      SpatialAnalysisOfEnergy: 'Spatial analysis of energy',
      DoYouReallyWantToClearContent: 'Do you really want to clear the content',
      ClickForMoreButtons: 'Click for more buttons',
    },

    tooltip: {
      gotoIFI: 'Go to Institute for Future Intelligence',
      visitAladdinHomePage: 'Visit Aladdin Homepage',
      clickToOpenMenu: 'Click to open main menu',
      clickToAccessAccountSettings: 'Click to access account settings',
    },

    tree: {
      Apple: 'Apple',
      Birch: 'Birch',
      Coconut: 'Coconut',
      Dogwood: 'Dogwood',
      Elm: 'Elm',
      FanPalm: 'Fan Palm',
      Linden: 'Linden',
      Magnolia: 'Magnolia',
      Maple: 'Maple',
      Oak: 'Oak',
      Pine: 'Pine',
      Spruce: 'Spruce',
    },

    flower: {
      Bellflower: 'Bellflower',
      Boxwood: 'Boxwood',
      CactusCombo1: 'Cactus Combo 1',
      CactusCombo2: 'Cactus Combo 2',
      CactusCombo3: 'Cactus Combo 3',
      CactusCombo4: 'Cactus Combo 4',
      Hibiscus: 'Hibiscus',
      Hosta: 'Hosta',
      Hydrangea: 'Hydrangea',
      Peony: 'Peony',
      RedRose: 'Red Rose',
      Spirea: 'Spirea',
      Sunflower: 'Sunflower',
      TallBush: 'Tall Bush',
      Tulip: 'Tulip',
      WhiteFlower: 'White Flower',
      YellowFlower: 'Yellow Flower',
    },

    people: {
      Jaah: 'Jaah',
      Jack: 'Jack',
      Jacob: 'Jacob',
      Jacqueline: 'Jacqueline',
      Jade: 'Jade',
      Jamelia: 'Jamelia',
      James: 'James',
      Jane: 'Jane',
      Jaya: 'Jaya',
      Jaye: 'Jaye',
      Jeanette: 'Jeanette',
      Jedi: 'Jedi',
      Jeff: 'Jeff',
      Jena: 'Jena',
      Jennifer: 'Jennifer',
      Jess: 'Jess',
      Jett: 'Jett',
      Jill: 'Jill',
      Jiya: 'Jiya',
      Joan: 'Joan',
      Jocelyn: 'Jocelyn',
      Joel: 'Joel',
      Joey: 'Joey',
      John: 'John',
      Jonathon: 'Jonathon',
      Jose: 'Jose',
      Joseph: 'Joseph',
      Joshua: 'Joshua',
      Judd: 'Judd',
      Judy: 'Judy',
      Julia: 'Julia',
      Julio: 'Julio',
      Jumapili: 'Jumapili',
      June: 'June',
      Juro: 'Juro',
      Justin: 'Justin',
    },

    compass: {
      N: 'N',
      S: 'S',
      W: 'W',
      E: 'E',
    },

    month: {
      January: 'Jan',
      February: 'Feb',
      March: 'Mar',
      April: 'Apr',
      May: 'May',
      June: 'Jun',
      July: 'Jul',
      August: 'Aug',
      September: 'Sep',
      October: 'Oct',
      November: 'Nov',
      December: 'Dec',
    },

    modelsMap: {
      AllTime: 'All Time',
      SearchByPublisher: 'Search by publisher',
      SearchByLabel: 'Search by label',
      MyPublishedModels: 'My Published Models',
      TotalNumberOfUserPublishedModelsInSelectedPeriod: 'Total number of user-published models in the selected period',
      AllTimeTotal: 'All-time total',
      SortFromOldestToNewest: 'Sort from oldest to newest',
      SortFromNewestToOldest: 'Sort from newest to oldest',
      SitesFound: 'sites found',
      ModelsFoundOnThisSite: 'models found on this site',
      ShowModelsPublishedByThisAuthor: 'Show the models published by this author',
    },
    modelTree: {
      SkylightWindow: 'Skylight Window',
      RooftopSolarPanels: 'Rooftop Solar Panels',
      WallMountedSolarPanels: 'Wall-Mounted Solar Panels',
      GroundMountedSolarPanels: 'Ground-Mounted Solar Panels',
      VertexCount: 'Vertex Count',
    },
  },
};
