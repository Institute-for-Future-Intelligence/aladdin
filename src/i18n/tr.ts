/*
 * @Copyright 2021-2022. Institute for Future Intelligence, Inc.
 */

export const i18n_tr = {
  translation: {
    name: {
      IFI: 'Geleceğin Zekası Enstitüsü',
      Aladdin: 'Aladdin',
      Tagline: 'Aladdin: Reimagining Design with Explainable AI — Institute for Future Intelligence',
    },

    cookie: {
      Statement:
        'Kabul Eti týklatarak, Aladdin ile olan deneyiminizi geliþtimek için çerez kullanýmýmýzý kabul etmiþ olursunuz.',
      Accept: 'Kabul Et',
    },

    aboutUs: {
      ProductBroughtToYouBy: 'Bu Ürünü Size Saðlayan',
      TermsOfService: 'Hizmet Þartlarý',
      PrivacyPolicy: 'Gizlilik Politikasý',
      Software: 'Yazýlým',
      Content: 'Ýçerik',
      Research: 'Araþtýrma',
      Support: 'Destek',
      Acknowledgment: 'Onay',
      FundingInformation:
        'Ulusal Bilim Vakfý (NSF) bu ürünün araþtýrma ve geliþtirme çalýþmalarýna #2105695 ve #2131097 numaralý fonlarla cömert bir kaynak saðladý. Ancak bu üründe ifade edilen herhangi bir görüþ, bulgu ve sonuç veya öneri yazarlarýn görüþüdür ve NSF nin görüþlerini yansýtmayabilir.',
      Contact: 'Daha fazla bilgi için lütfen Charles Xie (charles@intofuture.org) ile iletiþime geçin.',
      Translators: 'Translators',
    },

    word: {
      AllRightsReserved: 'Tüm Haklarý Saklýdýr',
      MeterAbbreviation: 'm',
      Version: 'Sürüm',
      VersionInitial: 'S',
      Options: 'Seçenekler',
      Maximum: 'Maximum',
      Minimum: 'Minimum',
      MaximumNumber: 'Maksimum Sayý',
      MinimumNumber: 'Minimum Number',
      MaximumValue: 'Maximum Value',
      MinimumValue: 'Minimum Value',
      Or: 'Veya',
      None: 'Hiçbiri',
      High: 'High',
      Partial: 'Partial',
      Teacher: 'Öðretmen',
      Class: 'Sýnýf',
      Total: 'Toplam',
      Range: 'Aralýk',
      Press: 'Týkla',
      Open: 'Aç',
      Save: 'Kaydet',
      SaveAsImage: 'Resim olarak Kaydet',
      Update: 'Güncelle',
      Paste: 'Yapýþtýr',
      Copy: 'Kopyala',
      Cut: 'Kes',
      Delete: 'Sil',
      Lock: 'Kilitle',
      Color: 'Renk',
      Texture: 'Tekstür',
      Size: 'Boyut',
      Thickness: 'Kalýnlýk',
      Yes: 'Evet',
      Tamam: 'Hayýr',
      OK: 'Tamam',
      Cancel: 'Ýptal',
      Apply: 'Uygula',
      Close: 'Kapat',
      ApplyTo: 'Uygulanacak',
      Run: 'Run',
      Pause: 'Pause',
      Resume: 'Resume',
      Clear: 'Temizle',
      Warning: 'Uyarý',
      Reminder: 'Reminder',
      Length: 'Uzunluk',
      Width: 'Geniþlik',
      Height: 'Yükseklik',
      Radius: 'Radius',
      Angle: 'Açý',
      Azimuth: 'Azimut',
      Coordinates: 'Coordinates',
      Weather: 'Hava Durumu',
      Show: 'Göster',
      Animate: 'Oynat',
      Date: 'Tarih',
      Time: 'Saat',
      Title: 'Baþlýk',
      Owner: 'Sahibi',
      Action: 'Ýþlem',
      Rename: 'Ad Deðiþtir',
      Location: 'Konum',
      Latitude: 'Enlem',
      Month: 'Ay',
      Day: 'Gün',
      Hour: 'Saat',
      Daylight: 'Gün ýþýðý',
      Radiation: 'Radyasyon',
      Temperature: 'Sýcaklýk',
      kWh: 'kWh',
      dollar: 'dollar',
      MeterPerSecond: 'm/s',
      NorthInitial: 'N',
      SouthInitial: 'S',
      EastInitial: 'E',
      WestInitial: 'W',
      Fixed: 'Fixed',
      Elements: 'Elements',
    },

    shared: {
      NoTexture: 'Tekstür Yok',
      FoundationElement: 'Temel',
      CuboidElement: 'Küboid',
      PolygonElement: 'Poligon',
      SensorElement: 'Sensör',
      SolarPanelElement: 'Güneþ Paneli',
      WaterHeaterElement: 'Water Heater',
      ParabolicDishElement: 'Parabolic Dish',
      ParabolicTroughElement: 'Parabolic Trough',
      FresnelReflectorElement: 'Fresnel Reflector',
      HeliostatElement: 'Heliostat',
      ElementLocked: 'Kilitli',
    },

    message: {
      CannotSignIn: 'Cannot sign in',
      CannotSignOut: 'Cannot sign out',
      YourAccountWasCreated: 'Your account was created.',
      CannotCreateAccount: 'Cannot create an account',
      YourAccountSettingsWereSaved: 'Your account settings were saved.',
      CannotSaveYourAccountSettings: 'Cannot save your account settings',
      CannotSaveYourFileToCloud: 'Cannot save your file to the cloud',
      CloudFileNotFound: 'The cloud file was not found',
      CannotOpenCloudFile: 'Cannot open the cloud file',
      CannotOpenCloudFolder: 'Cannot open your cloud folder',
      CannotDeleteCloudFile: 'Cannot delete the cloud file',
      CannotRenameCloudFile: 'Cannot rename the cloud file',
      DoYouWantToSaveChanges: 'Deðiþiklikleri kaydetmek istiyor musunuz?',
      NotApplicableToSelectedAction: 'Seçili Ýþleme Uygulanamaz',
      ThisElementIsLocked: 'Bu öðe kilitli.',
      ThisCannotBeUndone: 'Bu geri alýnamaz.',
      AzimuthOfNorthIsZero: 'Kuzey Azimutu 0Â° dir',
      CounterclockwiseAzimuthIsPositive: 'Saat yönünün tersi pozitiftir.',
      MoveCancelledBecauseOfOverlap: 'Move cancelled because of overlap.',
      MoveOutsideBoundaryCancelled: 'Move outside the boundary cancelled.',
      RotationCancelledBecauseOfOverlap: 'Rotation cancelled because of overlap.',
      RotationOutsideBoundaryCancelled: 'Rotation outside the boundary cancelled.',
      ResizingCancelledBecauseOfOverlap: 'Resizing cancelled because of overlap.',
      ResizingOutsideBoundaryCancelled: 'Resizing outside the boundary cancelled.',
      CannotPasteOutsideBoundary: 'Cannot paste outside this surface.',
      CannotPasteBecauseOfOverlap: 'Cannot paste because of overlap.',
      CannotMoveObjectTooFar: 'Cannot move object too far.',
      ExistingSolarPanelsWillBeRemovedBeforeApplyingNewLayout:
        'Existing solar panels will be removed before applying the new layout.',
      DoYouWantToContinue: 'Do you want to continue?',
      SolarPanelsCannotIntersectWithGround: 'Solar panels cannot intersect with the ground.',
      SolarPanelsCannotOverlapWithOneAnother: 'Solar panels cannot overlap with one another.',
      ScreenshotSaved: 'Screenshot was saved.',
      SimulationStarted: 'Simulation started.',
      SimulationCompleted: 'Simulation completed.',
      SimulationAborted: 'Simulation aborted.',
      SimulationPaused: 'Simulation paused.',
      CancelSimulation: 'Cancel simulation',
      PauseSimulation: 'Pause simulation',
      ResumeSimulation: 'Resume simulation',
      EvolutionStarted: 'Evolution started.',
      EvolutionCompleted: 'Evolution completed.',
      EvolutionAborted: 'Evolution aborted.',
      EvolutionPaused: 'Evolution paused.',
      EncounterEvolutionError: 'Encountered an evolution error.',
      CancelEvolution: 'Cancel evolution',
      PauseEvolution: 'Pause evolution',
      ResumeEvolution: 'Resume evolution',
      ConvergenceThresholdHasBeenReached: 'The convergence threshold has been reached.',
      MaximumNumberOfGenerationsHasBeenReached: 'The maximum number of generations has been reached.',
      MaximumNumberOfStepsHasBeenReached: 'The maximum number of steps has been reached.',
      ObjectiveFunctionTypeError:
        'The current objective function is not supported by this operation. Please start from the menu.',
    },

    menu: {
      AnalysisOptions: 'Analysis Options',
      option: {
        GridCellSize: 'Grid Cell Size',
        SamplingFrequency: 'Örnekleme Sýklýðý',
        TimesPerHour: 'Saatlik',
        DaysPerYear: 'Days per Year',
      },
      mainMenu: 'Ana Menü',
      cloudMenu: 'Bulut Menüsü',
      fileSubMenu: 'Dosya',
      file: {
        CreateNewFile: 'Yeni Dosya Oluþtur',
        OpenLocalFile: 'Yerel Dosyayý Aç',
        SaveAsLocalFile: 'Yerel Dosya Olarak Kaydet',
        SavingAbortedMustHaveValidFileName: 'Kaydetme iptal edildi! Geçerli bir dosya adýnýz olmalýdýr',
        OpenCloudFile: 'Bulut Dosyasýný Aç',
        SaveCloudFile: 'Bulut Dosyasýný Kaydet',
        SaveAsCloudFile: 'Bulut Dosyasý Olarak Kaydet',
        SavingAbortedMustHaveValidTitle: 'Kaydet iptal edildi! Bulut dosyasý için geçerli bir baþlýðýnýz olmalýdýr',
        ToSaveYourWorkPleaseSignIn: 'Çalýþmanýzý kaydetmek için lütfen oturum açýn.',
        TakeScreenshot: 'Ekran görüntüsü al',
        UseCloudFileName: 'Use Cloud File Name',
      },
      editSubMenu: 'Düzen',
      edit: {
        Undo: 'Geri Al',
        Redo: 'Yinele',
      },
      viewSubMenu: 'Göster',
      view: {
        TwoDimensionalView: '2D Göster',
        ResetView: 'Reset At',
        ZoomIn: 'Yaklaþ',
        ZoomOut: 'Uzaklaþ',
        AutoRotate: 'Otomatik döndürme',
        SiteInformation: 'Site Bilgileri',
        DesignInformation: 'Tasarým Bilgileri',
        Instruction: 'Yönerge',
        StickyNote: 'Yapýþkan Not',
        ShowShadow: 'Gölge Göster',
        TranslucentFloatingWindows: 'Translucent Floating Windows',
      },
      toolSubMenu: 'Araç',
      tool: {
        Map: 'Harita',
        WeatherData: 'Hava Durumu Verisi',
        DiurnalTemperature: 'Diurnal Temperature',
        Heliodon: 'Heliodon',
        SunAndTime: 'Sun & Time',
      },
      benchmarksSubMenu: 'Benchmarks',
      benchmarks: {
        SolarRadiationPredictionVsMeasurement: 'Solar Radiation Prediction vs. Measurement',
      },
      graph: {
        LineWidth: 'Line Width',
        SymbolSize: 'Symbol Size',
        ShowHorizontalGridLines: 'Show Horizontal Grid Lines',
        ShowVerticalGridLines: 'Show Vertical Grid Lines',
      },
      analysisSubMenu: 'Analiz',
      physicsSubMenu: 'Physics',
      physics: {
        DailySolarRadiationHeatmap: 'Daily Solar Radiation Heatmap',
        SolarRadiationHeatmapOptions: 'Solar Radiation Heatmap Options',
        SolarRadiationHeatmapGridCellSize: 'Solar Radiation Heatmap Grid Cell Size',
        SolarRadiationHeatmapMaxValue: 'Solar Radiation Heatmap Maximum Value',
        SolarRadiationHeatmapNoAnimation: 'No Animation for Static Model',
        ReflectionHeatmap: 'Reflection Heatmap',
      },
      sensorSubMenu: 'Sensörler',
      sensor: {
        CollectDailyData: 'Günlük Veri Topla',
        CollectYearlyData: 'Yýllýk Veri Topla',
        SensorSimulationNoAnimation: 'No Animation for Collecting Sensor Data',
      },
      solarPanelSubMenu: 'Güneþ Panelleri',
      solarPanel: {
        AnalyzeDailyYield: 'Günlük Verim Analizi',
        AnalyzeYearlyYield: 'Yýllýk Verim Analizi',
        AnalyzeVisibility: 'Analyze Visibility',
        PanelDiscretization: 'Panel Ayrýklaþtýrma',
        Exact: 'Kesin',
        Approximate: '	Yaklaþýk',
        EnergyGridCellSize: 'Energy Grid Cell Size',
        VisibilityGridCellSize: 'View Factor Grid Cell Size',
        EnergyAnalysisOptions: 'Energy Analysis Options',
        VisibilityAnalysisOptions: 'Visibility Analysis Options',
        SolarPanelSimulationNoAnimation: 'No Animation for Solar Panel Simulation',
      },
      parabolicTroughSubMenu: 'Parabolic Trough',
      parabolicTrough: {
        AnalyzeDailyYield: 'Analyze Daily Yield',
        AnalyzeYearlyYield: 'Analyze Yearly Yield',
      },
      parabolicDishSubMenu: 'Parabolic Dish',
      parabolicDish: {
        AnalyzeDailyYield: 'Analyze Daily Yield',
        AnalyzeYearlyYield: 'Analyze Yearly Yield',
      },
      fresnelReflectorSubMenu: 'Fresnel Reflector',
      fresnelReflector: {
        AnalyzeDailyYield: 'Analyze Daily Yield',
        AnalyzeYearlyYield: 'Analyze Yearly Yield',
      },
      heliostatSubMenu: 'Heliostat',
      heliostat: {
        AnalyzeDailyYield: 'Analyze Daily Yield',
        AnalyzeYearlyYield: 'Analyze Yearly Yield',
      },
      solarUpdraftTowerSubMenu: 'Solar Updraft Tower',
      solarUpdraftTower: {
        AnalyzeDailyYield: 'Analyze Daily Yield',
        AnalyzeYearlyYield: 'Analyze Yearly Yield',
        SolarUpdraftTowerSimulationNoAnimation: 'No Animation for Solar Updraft Tower Simulation',
      },

      tutorialsSubMenu: 'Tutorials',

      solarEnergyScienceSubMenu: 'Solar Science',
      solarEnergyScienceTutorials: {
        SunAngles: 'Yerdeki Bir Gözlemciye Göre Güneþ Açýlarý',
        InsolationAndClimate: 'Insolation and Climate',
        SolarRadiationToBox: 'Bir Kutuya Güneþ Radyasyonu',
      },

      buildingDesignSubMenu: 'Building Design',
      buildingDesignTutorials: {
        CapeCodStyleHouseWithShedDormer: 'Cape Cod Style House with Shed Dormer',
        GableRoofVsHipRoof: 'Gable Roof vs. Hip Roof',
        ColonialVsSaltbox: 'Colonial vs. Saltbox',
        GambrelRoofVsMansardRoof: 'Gambrel Roof vs. Mansard Roof',
        AllRoofTypes: 'All Roof Types',
      },

      photovoltaicSolarPowerSubMenu: 'Photovoltaic Solar Power',
      photovoltaicSolarPowerTutorials: {
        EffectOfTiltAngleOfSolarPanel: 'Effect of Tilt Angle of a Solar Panel',
        EffectOfAzimuthOfSolarPanel: 'Effect of Azimuth of a Solar Panel',
        SolarTrackers: 'Güneþ Takipçileri',
        CoveringGroundWithSolarPanels: 'Why Just Covering the Ground with Solar Panels is not a Good Idea',
        InterRowSpacingOfSolarPanelArray: 'Effect of Inter-Row Spacing in a Solar Panel Array',
        EffectOfOrientationOfSolarPanels: 'Effect of Orientation of Solar Panels',
      },

      concentratedSolarPowerSubMenu: 'Concentrated Solar Power',
      concentratedSolarPowerTutorials: {
        EffectOfAzimuthOfParabolicTrough: 'Effect of Azimuth of a Parabolic Trough',
        EffectOfLatusRectumOfParabolicTrough: 'Effect of Latus Rectum of a Parabolic Trough',
        FocusSunlightWithParabolicDish: 'Focus Sunlight with a Parabolic Dish',
        LinearFresnelReflectors: 'Linear Fresnel Reflectors',
        EffectOfAbsorberPipeHeightForLinearFresnelReflectors:
          'Effect of Absorber Pipe Height for Linear Fresnel Reflectors',
        EffectOfAzimuthOfLinearFresnelReflectors: 'Effect of Azimuth of Linear Fresnel Reflectors',
        LinearFresnelReflectorsWithTwoAbsorbers: 'Linear Fresnel Reflectors with Two Absorbers',
        CosineEfficiencyOfHeliostats: 'Cosine Efficiency of Heliostats',
        ShadowingAndBlockingOfHeliostats: 'Shadowing and Blocking of Heliostats',
        EffectSolarPowerTowerHeight: 'Effect of Solar Power Tower Height',
        SolarPowerTower: 'Solar Power Tower',
      },

      otherTypesOfSolarPowerSubMenu: 'Other Types of Solar Power',
      otherTypesOfSolarPowerTutorials: {
        SolarUpdraftTower: 'Solar Updraft Tower',
      },

      examplesSubMenu: 'Örnekler',

      solarEnergySubMenu: 'Güneþ Enerjisi',
      solarEnergyxamples: {
        SunBeamAndHeliodon: 'Güneþ Iþýný ve Heliodon',
        RooftopSolarPanels: 'Rooftop Solar Panels',
        SolarFarm: 'Güneþ Tarlasý',
        NevadaSolarOneParabolicTroughArray: 'Nevada Solar One Parabolic Trough Array',
        TooeleParabolicDishArray: 'Tooele Parabolic Dish Array',
        PS10SolarPowerTower: 'PS10 Solar Power Tower',
        TucsonLinearFresnelReflectors: 'Tucson Linear Fresnel Reflectors',
        SolarCanopyFormFactors: 'Solar Canopy Form Factors',
        VegetativeBuffer: 'Vegetative Buffer',
        FixedSolarPanelArraysFraminghamMA: 'Fixed Solar Panel Arrays in Framingham, MA',
        HSATSolarTrackersRaleighNC: 'Horizontal Single Axis Trackers (HSAT) in Raleigh, NC',
        AADATSolarTrackersLancasterCA: 'Azimuth–Altitude Dual Axis Trackers (AADAT) in Lancaster, CA',
        SolarUpdraftTowerInCity: 'Solar Updraft Tower in City',
      },

      builtEnvironmentSubMenu: 'Built Environment',
      residentialBuildingsSubMenu: 'Residential Buildings',
      residentialBuildingExamples: {
        DutchColonialHouse: 'Dutch Colonial House',
        BarnStyleHouse: 'Barn Style House',
      },
      commercialBuildingsSubMenu: 'Commercial Buildings',
      commercialBuildingExamples: {
        OfficeBuilding: 'Ofis Binasý',
        Hotel: 'Hotel',
      },
      urbanPlanningSubMenu: 'Urban Planning',
      urbanPlanningExamples: {
        Heatmap1: 'Heatmap',
      },

      artificialIntelligenceSubMenu: 'Artificial Intelligence',
      artificialIntelligenceExamples: {
        OptimizingTiltAngleOfOneSolarPanelRow: 'Optimizing the Tilt Angle of a Solar Panel Row',
        OptimizingTiltAnglesOfMultipleSolarPanelRows: 'Optimizing the Tilt Angles of Multiple Solar Panel Rows',
        SolarFarmGenerativeDesign: 'Solar Farm Generative Design',
        SolarFarmGenerativeDesignWithBlock: 'Solar Farm Generative Design in the Presence of a Block',
        FitchburgSolarFarmGenerativeDesign: 'Fitchburg Solar Farm Generative Design',
      },

      languageSubMenu: 'Dil',
      AboutUs: 'Hakkýmýzda',
    },

    avatarMenu: {
      AccountSettings: 'Hesap Ayarlarý',
      PrivacyInfo:
        'When you sign in, your Google ID is used to create and access your Aladdin account.\nOnly a random alphanumeric string is stored in our database as a reference.\nNo personally identifiable data such as your name or email is ever gathered.\nFor more information, see our Privacy Policy:\nhttps://intofuture.org/aladdin-privacy.html',
      SignIn: 'Giriþ',
      SignOut: 'Çýkýþ',
      IfYouAreAStudent: 'Eðer Öðrenciyseniz',
    },

    skyMenu: {
      Axes: 'Eksenler',
      Theme: 'Tema',
      ThemeDefault: 'Varsayýlan',
      ThemeDesert: 'Çöl',
      ThemeForest: 'Orman',
      ThemeGrassland: 'Savana',
      SunlightAttenuationCoefficientInAir: 'Sunlight Attenuation Coefficient in Air',
      ConvectiveCoefficientOfAir: 'Convective Coefficient of Air',
      HighestTemperatureTimeInMinutes: 'Highest Temperature Time (Minutes)',
      SelectSunAnglesToShow: 'Select Sun Angles to Show',
      ShowAzimuthAngle: 'Show Azimuth Angle',
      ShowElevationAngle: 'Show Elevation Angle',
      ShowZenithAngle: 'Show Zenith Angle',
    },

    groundMenu: {
      Albedo: 'Albedo',
      ImageOnGround: 'Yerdeki Görüntü',
      RemoveAllUnlockedTrees: 'Tüm Aðaçlarý Kaldýr',
      RemoveAllUnlockedPeople: 'Tüm Ýnsanlarý Kaldýr',
      RemoveAllUnlockedFoundations: 'Tüm Temelleri Kaldýr',
      RemoveAllUnlockedCuboids: 'Tüm Küboidleri Kaldýr',
      DoYouReallyWantToRemoveAllPeople: 'Gerçekten tüm insanlarý kaldýrmak istiyor musunuz who are not locked',
      DoYouReallyWantToRemoveAllTrees: 'Gerçekten tüm aðaçlarý kaldýrmak istiyor musunuz that are not locked',
      DoYouReallyWantToRemoveAllFoundations: 'Gerçekten tüm temelleri kaldýrmak istiyor musunuz that are not locked',
      DoYouReallyWantToRemoveAllCuboids: 'Gerçekten tüm küboidleri kaldýrmak istiyor musunuz that are not locked',
      LockAllElements: 'Lock All Elements',
      UnlockAllElements: 'Unlock All Elements',
    },

    foundationMenu: {
      RemoveAllUnlockedSolarPanels: 'Tüm Güneþ Panellerini Kaldýr',
      RemoveAllUnlockedParabolicTroughs: 'Remove All Unlocked Parabolic Troughs',
      RemoveAllUnlockedParabolicDishes: 'Remove All Unlocked Parabolic Dishes',
      RemoveAllUnlockedFresnelReflectors: 'Remove All Unlocked Fresnel Reflectors',
      RemoveAllUnlockedHeliostats: 'Remove All Unlocked Heliostats',
      RemoveAllUnlockedSensors: 'Tüm Sensörleri Kaldýr',
      RemoveAllUnlockedWalls: 'Tüm Duvarlarý Kaldýr',
      RemoveAllUnlockedPolygons: 'Tüm Poligonlarý Kaldýr',
      RemoveAllUnlockedHumans: 'Remove All Humans',
      RemoveAllUnlockedTrees: 'Remove All Trees',
      Racks: 'Çatýlar',
      Texture01: 'Tekstür 1',
      Texture02: 'Tekstür 2',
      Texture03: 'Tekstür 3',
      Texture04: 'Tekstür 4',
      Texture05: 'Tekstür 5',
      Texture06: 'Tekstür 6',
      Texture07: 'Tekstür 7',
      Texture08: 'Tekstür 8',
      Texture09: 'Tekstür 9',
      Texture10: 'Tekstür 10',
      SolarPanels: 'Güneþ Panelleri',
      DoYouReallyWantToRemoveAllSolarPanelsOnFoundation:
        'Bu temel üzerindeki tüm güneþ panellerini gerçekten kaldýrmak istiyor musunuz that are not locked',
      ParabolicTroughs: 'Parabolic Troughs',
      DoYouReallyWantToRemoveAllParabolicTroughsOnFoundation:
        'Do you really want to remove all the parabolic troughs on this foundation that are not locked',
      ParabolicDishes: 'Parabolic Dishes',
      DoYouReallyWantToRemoveAllParabolicDishesOnFoundation:
        'Do you really want to remove all the parabolic dishes on this foundation that are not locked',
      FresnelReflectors: 'Fresnel Reflectors',
      DoYouReallyWantToRemoveAllFresnelReflectorsOnFoundation:
        'Do you really want to remove all the Fresnel reflectors on this foundation that are not locked',
      Heliostats: 'Heliostats',
      DoYouReallyWantToRemoveAllHeliostatsOnFoundation:
        'Do you really want to remove all the heliostats on this foundation that are not locked',
      Sensors: 'Sensörler',
      DoYouReallyWantToRemoveAllSensorsOnFoundation:
        'Bu temel üzerindeki tüm sensörleri gerçekten kaldýrmak istiyor musunuz that are not locked',
      Walls: 'Duvarlar',
      DoYouReallyWantToRemoveAllWallsOnFoundation:
        'Bu temel üzerindeki tüm duvarlarý gerçekten kaldýrmak istiyor musunuz that are not locked',
      Polygons: 'Poligonlar',
      DoYouReallyWantToRemoveAllPolygonsOnFoundation:
        'Bu temel üzerindeki tüm poligonlarý gerçekten kaldýrmak istiyor musunuz that are not locked',
      Humans: 'Humans',
      DoYouReallyWantToRemoveAllHumansOnFoundation:
        'Do you really want to remove all the humans on this foundation who are not locked',
      Trees: 'Trees',
      DoYouReallyWantToRemoveAllTreesOnFoundation:
        'Do you really want to remove all the trees on this foundation that are not locked',
      OnlyThisFoundation: 'Sadece Bu Temel',
      AllConnectedFoundations: 'Tüm Baðlantýlý Temeller',
      AllFoundations: 'Tüm Temeller',
      AddPolygon: 'Poligon Ekle',
      SelectSolarStructure: 'Select Solar Structure',
      GroupMaster: 'Group Master',
      LockAllElementsOnThisFoundation: 'Lock All Elements on This Foundation',
      UnlockAllElementsOnThisFoundation: 'Unlock All Elements on This Foundation',
    },

    solarPowerTowerMenu: {
      ReceiverTowerForHeliostats: 'Receiver Tower for Heliostats',
      ReceiverTowerPhysicalProperties: 'Physical Properties of Receiver Tower',
      ReceiverTowerHeight: 'Height of Receiver Tower',
      ReceiverTowerRadius: 'Radius of Receiver Tower',
      ReceiverAbsorptance: 'Absorptance of Receiver',
      ReceiverOpticalEfficiency: 'Optical Efficiency of Receiver',
      ReceiverThermalEfficiency: 'Thermal Efficiency of Receiver',
    },

    solarAbsorberPipeMenu: {
      AbsorberPipeForFresnelReflectors: 'Absorber Pipe for Fresnel Reflectors',
      AbsorberPipePhysicalProperties: 'Physical Properties of Absorber Pipe',
      AbsorberHeight: 'Height of Absorber Pipe',
      AbsorberApertureWidth: 'Aperture Width of Absorber Pipe',
      AbsorberPipePoleNumber: 'Pole Number for Absorber Pipe',
      AbsorberAbsorptance: 'Absorptance of Absorber',
      AbsorberOpticalEfficiency: 'Optical Efficiency of Absorber',
      AbsorberThermalEfficiency: 'Thermal Efficiency of Absorber',
    },

    solarUpdraftTowerMenu: {
      SolarUpdraftTower: 'Solar Updraft Tower',
      SolarUpdraftTowerPhysicalProperties: 'Physical Properties of Solar Updraft Tower',
      SolarUpdraftTowerChimneyHeight: 'Solar Updraft Tower Chimney Height',
      SolarUpdraftTowerChimneyRadius: 'Solar Updraft Tower Chimney Radius',
      SolarUpdraftTowerCollectorHeight: 'Solar Updraft Tower Collector Height',
      SolarUpdraftTowerCollectorRadius: 'Solar Updraft Tower Collector Radius',
      SolarUpdraftTowerCollectorTransmissivity: 'Solar Updraft Tower Collector Transmissivity',
      SolarUpdraftTowerCollectorEmissivity: 'Solar Updraft Tower Collector Emissivity',
      SolarUpdraftTowerDischargeCoefficient: 'Solar Updraft Tower Discharge Coefficient',
      SolarUpdraftTowerTurbineEfficiency: 'Solar Updraft Tower Turbine Efficiency',
    },

    cuboidMenu: {
      Texture01: 'Tekstür 1',
      Texture02: 'Tekstür 2',
      Texture03: 'Tekstür 3',
      Texture04: 'Tekstür 4',
      Texture05: 'Tekstür 5',
      Texture06: 'Tekstür 6',
      Texture07: 'Tekstür 7',
      Texture08: 'Tekstür 8',
      Texture09: 'Tekstür 9',
      Texture10: 'Tekstür 10',
      RemoveAllUnlockedSolarPanels: 'Tüm Güneþ Panellerini Kaldýrýn',
      RemoveAllUnlockedSensors: 'Tüm Sensörleri Kaldýr',
      RemoveAllUnlockedPolygons: 'Tüm Poligonlarý Kaldýr',
      RemoveAllUnlockedHumans: 'Remove All Humans',
      RemoveAllUnlockedTrees: 'Remove All Trees',
      Racks: 'Çatýlar',
      SolarPanels: 'Güneþ Panelleri',
      DoYouReallyWantToRemoveAllSolarPanelsOnCuboid:
        'Bu küboid üzerindeki tüm güneþ panellerini gerçekten kaldýrmak istiyor musunuz that are not locked',
      Sensors: 'Sensörler',
      DoYouReallyWantToRemoveAllSensorsOnCuboid:
        'Bu küboid üzerindeki tüm sensörleri gerçekten kaldýrmak istiyor musunuz that are not locked',
      Polygons: 'Poligonlar',
      DoYouReallyWantToRemoveAllPolygonsOnCuboid:
        'Bu küboid üzerindeki tüm çokgenleri gerçekten kaldýrmak istiyor musunuz that are not locked',
      Humans: 'Humans',
      DoYouReallyWantToRemoveAllHumansOnCuboid:
        'Do you really want to remove all the humans on this cuboid who are not locked',
      Trees: 'Trees',
      DoYouReallyWantToRemoveAllTreesOnCuboid:
        'Do you really want to remove all the trees on this cuboid that are not locked',
      OnlyThisCuboid: 'Sadece Bu Küboid',
      AllCuboids: 'Tüm Küboidler',
      OnlyThisSide: 'Sadece Bu Taraf',
      AllSidesOfThisCuboid: 'Bu Küboidin Her Tarafý',
      AllSidesOfAllCuboids: 'Tüm Küboidlerin Her Tarafý',
      AddPolygon: 'Poligon Ekle',
    },

    polygonMenu: {
      Texture01: 'Tekstür 1',
      Texture02: 'Tekstür 2',
      Texture03: 'Tekstür 3',
      Texture04: 'Tekstür 4',
      Texture05: 'Tekstür 5',
      Texture06: 'Tekstür 6',
      Texture07: 'Tekstür 7',
      Texture08: 'Tekstür 8',
      Texture09: 'Tekstür 9',
      Texture10: 'Tekstür 10',
      Filled: 'Dolu',
      FillTexture: 'Dolu Tekstür',
      FillColor: 'Dolgu Rengi',
      LineColor: 'Çizgi Rengi',
      LineWidth: 'Line Width',
      LineStyle: 'Line Style',
      SolidLine: 'Solid Line',
      DashedLine: 'Dashed Line',
      DottedLine: 'Dotted Line',
      InsertVertexBeforeIndex: 'Ýndeksten Önce Tepe Noktasý Ekle',
      InsertVertexAfterIndex: 'Ýndeksten Sonra Tepe Noktasý Ekle',
      DeleteVertex: 'Tepe Noktasýný Sil',
      OnlyThisPolygon: 'Sadece Bu Poligon',
      AllPolygonsOnSurface: 'All Polygons on the Same Surface',
      AllPolygonsAboveFoundation: 'Temelin Üzerindeki Tüm Poligonlar',
      AllPolygons: 'Tüm Poligonlar',
      Layout: 'Layout',
      SolarPanelArrayLayout: 'Solar Panel Array Layout',
      SolarPanelArrayLayoutParametricDesign: 'Solar Panel Array Layout: Parametric Design',
      SolarPanelArrayLayoutGenerativeDesign: 'Solar Panel Array Layout: Generative Design',
      SolarPanelArrayModel: 'Solar Panel Model',
      SolarPanelArrayOrientation: 'Orientation',
      SolarPanelArrayTiltAngle: 'Tilt Angle',
      SolarPanelArrayRowWidth: 'Row Width',
      SolarPanelArrayInterRowSpacing: 'Inter-Row Spacing',
      SolarPanelArrayRowAxis: 'Row Axis',
      SolarPanelArrayZonalRowAxis: 'Zonal (East-West)',
      SolarPanelArrayMeridionalRowAxis: 'Meridional (North-South)',
      SolarPanelArrayPoleHeight: 'Pole Height',
      SolarPanelArrayPoleSpacing: 'Pole Spacing',
      LayoutNotAcceptedCheckYourParameters: 'This layout is not accepted. Please check your parameters.',
    },

    optimizationMenu: {
      Optimization: 'Optimization',
      Parameters: 'Parameters',
      Variables: 'Variables',
      Constants: 'Constants',
      GeneticAlgorithm: 'Genetic Algorithm',
      GeneticAlgorithmSettings: 'Genetic Algorithm Settings',
      ParticleSwarmOptimization: 'Particle Swarm Optimization',
      ParticleSwarmOptimizationSettings: 'Particle Swarm Optimization Settings',
      SolarPanelTiltAngleOptimization: 'Solar Panel Tilt Angle Optimization',
      SolarPanelArrayLayout: 'Solar Panel Array Layout',
      Generation: 'Generation',
      Gene: 'Gene',
      NormalizedVariables: 'Normalized Variables',
      Objective: 'Objective',
      ObjectiveFunctionDailyTotalOutput: 'Daily Total Output',
      ObjectiveFunctionYearlyTotalOutput: 'Yearly Total Output',
      ObjectiveFunctionDailyAverageOutput: 'Daily Average Output',
      ObjectiveFunctionYearlyAverageOutput: 'Yearly Average Output',
      ObjectiveFunctionDailyProfit: 'Daily Profit',
      ObjectiveFunctionYearlyProfit: 'Yearly Profit',
      GeneticAlgorithmSelectionMethod: 'Genetic Algorithm Selection Method',
      RouletteWheel: 'Roulette Wheel',
      Tournament: 'Tournament',
      SearchMethod: 'Search Method',
      GlobalSearchUniformSelection: 'Global Search Uniform Selection',
      LocalSearchRandomOptimization: 'Local Search Random Optimization',
      PopulationSize: 'Population Size',
      MaximumGenerations: 'Maximum Generations',
      SelectionRate: 'Selection Rate',
      CrossoverRate: 'Crossover Rate',
      MutationRate: 'Mutation Rate',
      Step: 'Step',
      SwarmSize: 'Swarm Size',
      MaximumSteps: 'Maximum Steps',
      MaximumVelocity: 'Maximum Velocity',
      InertiaWeight: 'Inertia Weight',
      CognitiveCoefficient: 'Cognitive Coefficient',
      SocialCoefficient: 'Social Coefficient',
      ConvergenceThreshold: 'Convergence Threshold for Termination',
      LocalSearchRadius: 'Local Search Radius',
      RowsPerRackRange: 'Range for Rows per Rack',
      TiltAngleRange: 'Range for Tilt Angle',
      InterRowSpacingRange: 'Range for Inter-Row Spacing',
      ClickTargetPolygonToActivate: 'Click Target Polygon to Activate',
      ClickTargetFoundationToActivate: 'Click Target Foundation to Activate',
    },

    treeMenu: {
      ShowModel: 'Modeli Göster',
      Type: 'Tür',
      Spread: 'Geniþlik',
    },

    peopleMenu: {
      ChangePerson: 'Kiþi Deðiþtir',
      Observer: 'Observer',
      ViewFromThisPerson: 'View from This Person',
    },

    solarCollectorMenu: {
      RelativeAzimuth: 'Göreceli Azimut',
      PoleHeight: 'Direk Yüksekliði',
      ExtraPoleHeight: 'Extra Pole Height',
      ExtraPoleHeightInAdditionToHalfWidth: 'Extra Pole Height in Addition to Half Width',
      DrawSunBeam: 'Güneþ Iþýný çiz',
      Label: 'Etiket',
      KeepShowingLabel: 'Etiketi Göstermeye Devam Et',
    },

    concentratedSolarPowerCollectorMenu: {
      ReflectorReflectance: 'Reflector Reflectance',
      ReceiverAbsorptance: 'Receiver Absorptance',
      ReflectorOpticalEfficiency: 'Reflector Optical Efficiency',
      ReceiverThermalEfficiency: 'Receiver Thermal Efficiency',
    },

    solarPanelMenu: {
      ChangePvModel: 'PV Modelini Deðiþtir',
      Orientation: 'Oryantasyon',
      Portrait: 'Portre',
      Landscape: 'Peyzaj',
      Panels: 'paneller',
      PanelsWide: 'panel geniþliði',
      PanelsLong: 'panel uzunluðu',
      TiltAngle: 'Eðim Açýsý',
      SouthFacingIsPositive: 'Güney yönü pozitiftir.',
      Tracker: 'Takipçi',
      SolarTrackerFollowsSun: 'Güneþ paneli verimini artýrmak için bir güneþ takip sistemi güneþi izler.',
      PoleSpacing: 'Direk Aralýðý',
      NoTracker: 'Takip Sistemi Yok',
      HorizontalSingleAxisTracker: 'Yatay Tek Eksenli Takip Sistemi',
      VerticalSingleAxisTracker: 'Dikey Tek Eksenli Takip Sistemi',
      AltazimuthDualAxisTracker: 'Altazimut Çift Eksenli Takip Sistemi',
      OnlyThisSolarPanel: 'Sadece Bu Güneþ Paneli',
      AllSolarPanelsOnSurface: 'Tüm Güneþ Panelleri Ayný Yüzeyde',
      AllSolarPanelsAboveFoundation: 'Tüm Güneþ Panelleri Ayný Temel Üzerinde',
      AllSolarPanels: 'Tüm Güneþ Panelleri',
    },

    pvModelPanel: {
      SolarPanelSpecs: 'Güneþ Paneli Özellikleri',
      Model: 'Model',
      PanelSize: 'Panel Boyutu',
      Cells: 'Hücreler',
      CellType: 'Hücre Tipi',
      Monocrystalline: 'Monokristal',
      Polycrystalline: 'Polikristal',
      ThinFilm: 'Ýnce Tabaka',
      Black: 'Siyah',
      Blue: 'Mavi',
      ShadeTolerance: 'Gölge Toleransý',
      SolarCellEfficiency: 'Güneþ Pili Verimliliði',
      NominalOperatingCellTemperature: 'Nominal Çalýþma Hücresi Sýcaklýðý',
      TemperatureCoefficientOfPmax: 'Pmax Sýcaklýk Katsayýsý',
    },

    parabolicTroughMenu: {
      ModuleLength: 'Module Length',
      Modules: 'modules',
      ModulesLong: 'modules long',
      LatusRectum: 'Latus Rectum',
      OnlyThisParabolicTrough: 'Only This Parabolic Trough',
      AllParabolicTroughsAboveFoundation: 'All Parabolic Troughs Above the Same Foundation',
      AllParabolicTroughs: 'All Parabolic Troughs',
    },

    fresnelReflectorMenu: {
      AbsorberPipe: 'Absorber Pipe',
      SelectAbsorberToReflectSunlightTo: 'Select Absorber to Reflect Sunlight to',
      ModuleLength: 'Module Length',
      Modules: 'modules',
      ModulesLong: 'modules long',
      OnlyThisFresnelReflector: 'Only This Fresnel Reflector',
      AllFresnelReflectorsAboveFoundation: 'All Fresnel Reflectors Above the Same Foundation',
      AllFresnelReflectors: 'All Fresnel Reflectors',
    },

    heliostatMenu: {
      Tower: 'Tower',
      SelectTowerToReflectSunlightTo: 'Select Tower to Reflect Sunlight to',
      OnlyThisHeliostat: 'Only This Heliostat',
      AllHeliostatsAboveFoundation: 'All Heliostats Above the Same Foundation',
      AllHeliostats: 'All Heliostats',
    },

    parabolicDishMenu: {
      ReceiverStructure: 'Receiver Structure',
      CentralPole: 'Central Pole',
      CentralPoleWithTripod: 'Central Pole with Tripod',
      Quadrupod: 'Quadrupod',
      RimDiameter: 'Rim Diameter',
      LatusRectum: 'Latus Rectum',
      ExtraPoleHeightInAdditionToRadius: 'Extra Pole Height in Addition to Radius',
      OnlyThisParabolicDish: 'Only This Parabolic Dish',
      AllParabolicDishesAboveFoundation: 'All Parabolic Dishes Above the Same Foundation',
      AllParabolicDishes: 'All Parabolic Dishes',
    },

    wallMenu: {
      TextureDefault: 'Varsayýlan',
      Texture01: 'Tekstür 1',
      Texture02: 'Tekstür 2',
      Texture03: 'Tekstür 3',
      Texture04: 'Tekstür 4',
      Texture05: 'Tekstür 5',
      Texture06: 'Tekstür 6',
      Texture07: 'Tekstür 7',
      Texture08: 'Tekstür 8',
      Texture09: 'Tekstür 9',
      Texture10: 'Tekstür 10',
      SizeOfWall: 'Duvar Boyutu',
      OnlyThisWall: 'Sadece Bu Duvar',
      AllWallsAboveFoundation: ' Ayný Temelin Üzerindeki Tüm Duvarlar',
      AllWalls: 'Tüm Duvarlar',
      Windows: 'Windows',
      RemoveAllUnlockedWindows: 'Remove All Unlocked Windows',
      DoYouReallyWantToRemoveAllWindowsOnThisWall: 'Do you really want to remove all the windows on this wall',
      Doors: 'Doors',
      RemoveAllUnlockedDoors: 'Remove All Unlocked Doors',
      DoYouReallyWantToRemoveAllDoorsOnThisWall: 'Do you really want to remove all the doors on this wall',
      SolarPanels: 'Solar Panels',
      RemoveAllUnlockedSolarPanels: 'Remove All Unlocked Solar Panels',
      DoYouReallyWantToRemoveAllSolarPanelsOnThisWall: 'Do you really want to remove all the solar panels on this wall',
    },

    doorMenu: {
      TextureDefault: 'Varsayýlan',
      Texture01: 'Tekstür 1',
      Texture02: 'Tekstür 2',
      Texture03: 'Tekstür 3',
      Texture04: 'Tekstür 4',
      Texture05: 'Tekstür 5',
      Texture06: 'Tekstür 6',
      Texture07: 'Tekstür 7',
      Texture08: 'Tekstür 8',
      Texture09: 'Tekstür 9',
      Texture10: 'Tekstür 10',
      Texture11: 'Tekstür 11',
      Texture12: 'Tekstür 12',
      OnlyThisDoor: 'Only This Door',
      AllDoorsOnWall: 'All Doors on the Same Wall',
      AllDoorsAboveFoundation: 'All Doors Above the Same Foundation',
      AllDoors: 'All Doors',
    },

    roofMenu: {
      TextureDefault: 'Varsayýlan',
      Texture01: 'Tekstür 1',
      Texture02: 'Tekstür 2',
      Texture03: 'Tekstür 3',
      Texture04: 'Tekstür 4',
      Texture05: 'Tekstür 5',
      Texture06: 'Tekstür 6',
      Texture07: 'Tekstür 7',
      OnlyThisRoof: 'Only This Wall',
      AllRoofsAboveFoundation: 'All Walls Above the Same Foundation',
      AllRoofs: 'All Roofs',
      OverhangLength: 'Overhang Length',
    },

    windowMenu: {
      OnlyThisWindow: 'Only This Window',
      AllWindowsOnWall: 'All Windows on the Same Wall',
      AllWindowsAboveFoundation: 'All Windows Above the Same Foundation',
      AllWindows: 'All Windows',
      MullionWidth: 'Mullion Width',
      MullionSpacing: 'Mullion Spacing',
    },

    siteInfoPanel: {
      High: 'Yüksek',
      Low: 'Düþük',
    },

    designInfoPanel: {
      NumberOfSelectedHeliostats: 'Number of selected heliostats',
      NumberOfSelectedSolarPanels: 'Number of selected solar panels',
      ElectricityGeneratedDailyBySolarPanels: 'Electricity generated daily by these solar panels',
      SceneRadius: 'Faliyet Alaný Yarýçapý',
    },

    heatmapControlPanel: {
      ColorContrast: 'Color Contrast',
      ClickUpOrDownArrowButtonsToChange: 'Click up or down arrow buttons to change',
    },

    instructionPanel: {
      Rotate: 'Döndür',
      DragMouse: 'Fareyi sürükleyin',
      Zoom: 'Büyüt',
      MouseWheelOrKeys: 'Fare tekerleðini döndürün veya Ctrl+[ veya Ctrl+] tuþlarýna basýn',
      Pan: 'Kaydýr',
      HoldCtrlDragMouse: 'Ctrl tuþunu basýlý tutun ve fareyi sürükleyin',
      Toggle2D3D: '2D/3D arasýnda geçiþ yap',
      ResetView: 'Reset At',
      AutoRotate: 'Otomatik Döndür',
      StartOrStop: 'Baþlatmak veya durdurmak için F4 e basýn',
    },

    mapPanel: {
      ImageOnGround: 'Yerdeki Görüntü',
      StationsOnMap: 'Haritadaki Ýstasyonlar',
      Coordinates: 'Koordinatlar',
      Zoom: 'Büyüt',
    },

    visibilityPanel: {
      SolarPanelVisibility: 'Solar Panel Visibility',
      Observer: 'Observer',
      VantagePoint: 'Vantage Point',
      ItemizedVisibilityByFields: 'Itemized by Fields',
      TotalVisibility: 'Total',
    },

    sensorPanel: {
      LightSensor: 'Iþýk sensörü',
      WeatherDataFrom: 'Hava Durumu Verisi',
    },

    solarPanelYieldPanel: {
      SolarPanelDailyYield: 'Güneþ Paneli Günlük Verimi',
      SolarPanelYearlyYield: 'Güneþ Paneli Yýllýk Verimi',
      Yield: 'Verim',
      YieldPerHour: 'Saatlik Verim',
      DailyTotal: 'Günlük Toplam',
      YearlyTotal: 'Yýllýk Toplam',
      HoverForBreakdown: 'Analiz için fareyle üzerine gelin',
      ShowOutputsOfIndividualSolarPanels: 'Herbir güneþ panelinin verimini göster',
      Profit: 'Profit',
    },

    parabolicTroughYieldPanel: {
      ParabolicTroughDailyYield: 'Parabolic Trough Daily Yield',
      ParabolicTroughYearlyYield: 'Parabolic Trough Yearly Yield',
      Yield: 'Yield',
      YieldPerHour: 'Yield per Hour',
      DailyTotal: 'Daily Total',
      YearlyTotal: 'Yearly Total',
      HoverForBreakdown: 'Hover for breakdown',
      ShowOutputsOfIndividualParabolicTroughs: 'Show outputs of individual parabolic troughs',
    },

    parabolicDishYieldPanel: {
      ParabolicDishDailyYield: 'Parabolic Dish Daily Yield',
      ParabolicDishYearlyYield: 'Parabolic Dish Yearly Yield',
      Yield: 'Yield',
      YieldPerHour: 'Yield per Hour',
      DailyTotal: 'Daily Total',
      YearlyTotal: 'Yearly Total',
      HoverForBreakdown: 'Hover for breakdown',
      ShowOutputsOfIndividualParabolicDishes: 'Show outputs of individual parabolic dishes',
    },

    fresnelReflectorYieldPanel: {
      FresnelReflectorDailyYield: 'Fresnel Reflector Daily Yield',
      FresnelReflectorYearlyYield: 'Fresnel Reflector Yearly Yield',
      Yield: 'Yield',
      YieldPerHour: 'Yield per Hour',
      DailyTotal: 'Daily Total',
      YearlyTotal: 'Yearly Total',
      HoverForBreakdown: 'Hover for breakdown',
      ShowOutputsOfIndividualFresnelReflectors: 'Show outputs of individual Fresnel feflectors',
    },

    heliostatYieldPanel: {
      HeliostatDailyYield: 'Heliostat Daily Yield',
      HeliostatYearlyYield: 'Heliostat Yearly Yield',
      Yield: 'Yield',
      YieldPerHour: 'Yield per Hour',
      DailyTotal: 'Daily Total',
      YearlyTotal: 'Yearly Total',
      HoverForBreakdown: 'Hover for breakdown',
      ShowOutputsOfIndividualHeliostats: 'Show outputs of individual heliostats',
    },

    updraftTowerYieldPanel: {
      UpdraftTowerDailyYield: 'Solar Updraft Tower Daily Yield',
      UpdraftTowerYearlyYield: 'Solar Updraft Tower Yearly Yield',
      ChimneyAirTemperature: 'Chimney Air Temperature',
      ChimneyWindSpeed: 'Chimney Wind Speed',
      Yield: 'Yield',
      YieldPerHour: 'Yield per Hour',
      DailyTotal: 'Daily Total',
      YearlyTotal: 'Yearly Total',
      HoverForBreakdown: 'Hover for breakdown',
      ShowOutputsOfIndividualUpdraftTowers: 'Show outputs of individual updraft towers',
    },

    heliodonPanel: {
      SunAndTimeSettings: 'Sun & Time Settings',
      SunAngles: 'Açý',
    },

    cloudFilePanel: {
      MyCloudFiles: 'Bulut Dosyalarým',
      GenerateLink: 'Baðlantý Oluþtur',
      LinkGeneratedInClipBoard: 'Panoda bir baðlantý oluþturuldu',
      DoYouReallyWantToDelete: 'Gerçekten silmek istiyor musun?',
    },

    accountSettingsPanel: {
      MyAccountSettings: 'Hesap Ayarlarým',
      MyID: 'My 🆔',
      ClickToCopyMyID: 'Click to copy my ID',
      IDInClipBoard: 'Your ID was copied and is ready to paste.',
      StoreMyNameInMyFilesWhenSaving: 'Store my name in my files when saving',
      DoYouReallyWantToShowYourNameInYourFiles: 'Do you really want to show your display name in your files?',
      SignFileDisclaimer: 'If yes, your display name may be seen by anyone who can access your files.',
      UserCount: 'User Count',
      SchoolID: 'School ID',
      ClassID: 'Class ID',
    },

    weatherPanel: {
      SunshineHours: 'Guneþ Iþýðý',
    },

    diurnalTemperaturePanel: {
      SelectModel: 'Select Model',
      Sinusoidal: 'Sinusoidal',
    },

    economicsPanel: {
      EconomicsParameters: 'Economics Parameters',
      ElectricitySellingPrice: 'Electricity Selling Price',
      OperationalCostPerUnit: 'Operational Cost per Unit',
    },

    yearlyLightSensorPanel: {
      SkyClearness: 'Netlik',
      ShowDaylightResults: 'Gün ýþýðý sonuçlarýný göster',
      ShowSkyClearnessResults: 'Gökyüzü netliði sonuçlarýný göster',
      ShowAverageDailySolarRadiation: 'Ortalama günlük güneþ radyasyonunu göster',
    },

    analysisManager: {
      NoSensorForCollectingData: 'Veri toplamak için sensör yok.',
      NoSolarPanelForAnalysis: 'Analiz için güneþ paneli yok.',
      NoObserverForVisibilityAnalysis: 'There is no observer for visibility analysis.',
      NoWaterHeaterForAnalysis: 'There is no water heater for analysis.',
      NoParabolicDishForAnalysis: 'There is no parabolic dish for analysis.',
      NoParabolicTroughForAnalysis: 'There is no parabolic trough for analysis.',
      NoFresnelReflectorForAnalysis: 'There is no Fresnel reflector for analysis.',
      NoHeliostatForAnalysis: 'There is no heliostat for analysis.',
      NoSolarUpdraftTowerForAnalysis: 'There is no solar updraft tower for analysis.',
    },

    toolbar: {
      CloudFile: 'Bulut Dosyasý',
      Select: 'Seç',
      AddFoundation: 'Temel Ekle',
      AddWall: 'Duvar Ekle',
      AddWindow: 'Pencere Ekle',
      AddDoor: 'Add door',
      AddPyramidRoof: 'Add pyramid roof',
      AddGableRoof: 'Add gable roof',
      AddHipRoof: 'Add hip roof',
      AddGambrelRoof: 'Add gambrel roof',
      AddMansardRoof: 'Add mansard roof',
      AddCuboid: 'Küboid ekle',
      AddSensor: 'Sensör ekle',
      AddSolarPanel: 'Günel paneli ekle',
      AddWaterHeater: 'Add water heater',
      AddParabolicDish: 'Add parabolic dish',
      AddParabolicTrough: 'Add parabolic trough',
      AddFresnelReflector: 'Add Fresnel reflector',
      AddHeliostat: 'Add heliostat',
      AddTree: 'Aðaç ekle',
      AddPeople: 'Ýnsan ekle',
      ManipulateGroup: 'Manipulate a group',
      ClearScene: 'alaný temizle',
      ShowSunAndTimeSettings: 'Show sun and time settings',
      ShowHeatmap: 'Show heatmap',
      DoYouReallyWantToClearContent: 'Ýçeriði gerçekten temizlemek istiyor musunuz?',
      ClickForMoreButtons: 'Click for more buttons',
      SwitchToAddingFoundation: 'Switch to Adding Foundation',
      SwitchToAddingCuboid: 'Switch to Adding Cuboid',
      SwitchToAddingWall: 'Switch to Adding Wall',
      SwitchToAddingWindow: 'Switch to Adding Window',
      SwitchToAddingDoor: 'Switch to Adding Door',
      SwitchToAddingPyramidRoof: 'Switch to Adding Pyramid Roof',
      SwitchToAddingGableRoof: 'Switch to Adding Gable Roof',
      SwitchToAddingHipRoof: 'Switch to Adding Hip Roof',
      SwitchToAddingGambrelRoof: 'Switch to Adding Gambrel Roof',
      SwitchToAddingMansardRoof: 'Switch to Adding Mansard Roof',
      SwitchToAddingSolarPanel: 'Switch to Adding Solar Panel',
      SwitchToAddingSensor: 'Switch to Adding Sensor',
      SwitchToAddingWaterHeater: 'Switch to Adding Water Heater',
      SwitchToAddingParabolicDish: 'Switch to Adding Parabolic Dish',
      SwitchToAddingParabolicTrough: 'Switch to Adding Parabolic Trough',
      SwitchToAddingFresnelReflector: 'Switch to Adding Fresnel Reflector',
      SwitchToAddingHeliostat: 'Switch to Adding Heliostat',
      SwitchToAddingTree: 'Switch to Adding Tree',
      SwitchToAddingPeople: 'Switch to Adding People',
    },

    tooltip: {
      gotoIFI: 'Institute for Future Intelligence Git',
      visitAladdinHomePage: 'Aladdin Ana Sayfasýný Ziyaret Edin',
      clickToOpenMenu: 'Ana menüyü açmak için týklayýn',
      clickToAccessCloudTools: 'Bulut araçlarýna eriþmek için týklayýn',
    },

    tree: {
      Cottonwood: 'kanada kavaðý',
      Dogwood: 'kýzýlcýk aðacý',
      Elm: 'karaaðaç',
      Linden: 'ýhlamur aðacý',
      Maple: 'akçaaðaç',
      Oak: 'meþe aðacý',
      Pine: 'Çam',
      Spruce: 'Spruce',
    },

    people: {
      Jack: 'Jack',
      Jade: 'Jade',
      Jane: 'Jane',
      Jaye: 'Jaye',
      Jean: 'Jean',
      Jedi: 'Jedi',
      Jeff: 'Jeff',
      Jena: 'Jena',
      Jeni: 'Jeni',
      Jess: 'Jess',
      Jett: 'Jett',
      Jill: 'Jill',
      Joan: 'Joan',
      Joel: 'Joel',
      John: 'John',
      Jose: 'Jose',
      Judd: 'Judd',
      Judy: 'Judy',
      June: 'June',
      Juro: 'Juro',
      Xiaoli: 'Xiaoli',
      Xiaoming: 'Xiaoming',
    },
  },
};
