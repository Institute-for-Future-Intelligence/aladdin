{"version":3,"sources":["stores/common.ts","orbitController.tsx","types.ts","resources/daysky.jpg","resources/nightsky.jpg","resources/desert.jpg","resources/desert-night.jpg","resources/grassland.jpg","resources/grassland-night.jpg","views/sky.tsx","assets/menu.svg","views/axes.tsx","assets/compass.obj","fonts/helvetiker_regular.typeface.fnt","views/compass.tsx","views/ground.tsx","util.ts","views/sunTools.ts","views/heliodon.tsx","assets/house.mtl","assets/house.obj","views/sample.tsx","assets/aladdin-logo.png","assets/ifi-logo.png","mainMenu.tsx","maps.tsx","components/spinner.tsx","groundSettingsPanel.tsx","heliodonSettingsPanel.tsx","helpers.ts","acceptCookie.tsx","views/groundImage.tsx","contextMenu.tsx","App.tsx","constants.ts","reportWebVitals.ts","index.tsx"],"names":["enableMapSet","useStore","create","devtools","persist","set","get","api","immerSet","fn","produce","showGroundSettings","showHeliodonSettings","grid","axes","groundImage","groundColor","theme","heliodon","address","latitude","longitude","mapZoom","mapType","mapTilt","date","Date","toString","clickObjectType","worlds","getWorld","name","createNewWorld","state","elements","push","type","cx","cy","lx","ly","height","id","world","cameraPosition","Vector3","extend","OrbitControls","Theme","ClickObjectType","OrbitController","useThree","camera","domElement","gl","controls","useRef","useEffect","c","current","target","addEventListener","onInteractionEnd","removeEventListener","w","x","position","y","z","ref","args","enableZoom","maxAzimuthAngle","Math","PI","minAzimuthAngle","_defs","_path","_path2","_path3","_path4","_path5","_path6","Sky","night","props","meshRef","texture","useMemo","loader","TextureLoader","load","DesertNightSkyImage","DesertDaySkyImage","GrasslandNightSkyImage","GrasslandDaySkyImage","DefaultNightSkyImage","DefaultDaySkyImage","clickSky","e","intersections","length","object","sky","scale","onContextMenu","onClick","map","side","DoubleSide","opacity","color","Axes","lineWidth","endPoint","Line","points","Compass","model","useLoader","OBJLoader","compassObj","font","FontLoader","helvetikerFont","mesh","textGeometryParams","size","textMaterial","MeshBasicMaterial","compassMaterial","useFrame","v","unproject","rotation","Euler","material","Ground","planeRef","receiveShadow","ground","selected","attach","Util","degrees","radians","sphereCoords","a","cos","sin","TILT_ANGLE","computeDeclinationAngle","days","floor","getTime","getFullYear","TWO_PI","computeSunLocation","radius","hourAngle","declinationAngle","observerLatitude","altitudeAngle","asin","xAzm","yAzm","azimuthAngle","atan2","coords","sphericalToCartesianZ","setX","Heliodon","basePoints","tickPoints","step","counter","angle","theta","min","width","p","ZERO_TOLERANCE","basePositions","Float32Array","baseNormals","baseColors","i","j","sunPathPoints","h","getSunPathPointsByDate","d","pointArraySunPaths","dMin","delta","arr","sunPosition","sunbeltGeometry","declinationStep","hourStep","geometry","BufferGeometry","verticesCount","vertices","indices","h2","d2","v1","v2","v3","v4","setFromPoints","setIndex","BufferAttribute","Uint16Array","attachObject","count","array","itemSize","vertexColors","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","filter","index","Color","transparent","clippingPlanes","Plane","UNIT_VECTOR_POS_Y","SphereGeometry","Sample","MTLLoader","sampleMtl","sampleObj","preload","setMaterials","castShadow","traverse","children","Mesh","_extends","Object","assign","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgMenu","_ref","svgRef","title","titleId","t","className","viewBox","xmlns","xmlnsXlink","ForwardRef","StyledMenuSVG","styled","MenuSVG","MainMenu","menu","Item","checked","onChange","overlay","trigger","containerStyle","border","Maps","setLatitude","setLongitude","setZoom","setTilt","setType","zoom","tilt","useState","setMap","onLoad","useCallback","onUnmount","latLng","lat","lng","mapContainerStyle","mapTypeId","center","onCenterChanged","getCenter","onZoomChanged","getZoom","onTiltChanged","getTilt","onMapTypeIdChanged","typeId","getMapTypeId","memo","Spin","libraries","Container","div","ColumnWrapper","Header","GroundSettingsPanel","setGrid","setGroundImage","setGroundColor","changeLatitude","changeLongitude","changeMapZoom","changeMapTilt","changeMapType","searchBox","useJsApiLoader","googleMapsApiKey","process","isLoaded","loadError","style","cursor","direction","padding","align","onChangeComplete","colorResult","hex","s","onPlacesChanged","places","getPlaces","location","formatted_address","placeholder","boxSizing","borderRadius","boxShadow","fontSize","outline","textOverflow","toFixed","HeliodonSettingsPanel","animateSun","setHeliodon","setSunAnimation","changeDate","changeTime","requestRef","previousFrameTime","requestAnimationFrame","animate","cancelAnimationFrame","currentFrameTime","now","day","getDate","setHours","getHours","getMinutes","setDate","value","moment","toDate","format","marks","0","90","max","tooltipVisible","defaultValue","visitIFI","window","open","AcceptCookie","buttonText","cookieName","background","textAlign","zIndex","buttonStyle","expires","GroundImage","useTexture","SubMenu","Menu","radioStyle","display","paddingLeft","lineHeight","ContextMenu","setCommonStore","showSolarSettings","Group","default","desert","grassland","App","setHourAngle","setDeclinationAngle","sunlightDirection","setSunlightDirection","setAnimateSun","toRadians","applyEuler","nowString","console","log","sunAboveHorizon","backgroundColor","paddingTop","alt","src","aladdinLogo","verticalAlign","bottom","left","ifiLogo","on","setFullYear","setMonth","getMonth","shadows","fov","fallback","intensity","shadow-mapSize-height","shadow-mapSize-width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e7a38e5.chunk.js","sourcesContent":["/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport create from 'zustand';\r\nimport {devtools, persist} from 'zustand/middleware';\r\nimport produce, {enableMapSet} from 'immer';\r\nimport {WorldModel} from \"../models/worldModel\";\r\nimport {Vector3} from \"three\";\r\nimport {ElementModel} from \"../models/elementModel\";\r\n\r\nenableMapSet();\r\n\r\nexport interface CommonStoreState {\r\n    set: (fn: (state: CommonStoreState) => void) => void;\r\n    worlds: { [key: string]: WorldModel };\r\n    createNewWorld: () => void;\r\n    getWorld: (name: string) => WorldModel;\r\n\r\n    showGroundSettings: boolean;\r\n    showHeliodonSettings: boolean;\r\n\r\n    grid: boolean;\r\n    axes: boolean;\r\n    groundImage: boolean;\r\n    groundColor: string;\r\n    theme: string;\r\n    heliodon: boolean;\r\n    address: string;\r\n    latitude: number;\r\n    longitude: number;\r\n    mapZoom: number;\r\n    mapType: string;\r\n    mapTilt: number;\r\n    date: string;\r\n\r\n    clickObjectType: string | null;\r\n\r\n}\r\n\r\nexport const useStore = create<CommonStoreState>(devtools(persist((\r\n    set,\r\n    get,\r\n    api,\r\n) => {\r\n\r\n    const immerSet: CommonStoreState['set'] = fn => set(produce(fn));\r\n\r\n    return {\r\n\r\n        set: immerSet,\r\n\r\n        showGroundSettings: false,\r\n        showHeliodonSettings: false,\r\n\r\n        grid: false,\r\n        axes: true,\r\n        groundImage: false,\r\n        groundColor: 'forestgreen',\r\n        theme: 'Default',\r\n        heliodon: false,\r\n\r\n        address: 'Natick, MA',\r\n        latitude: 42.2844063,\r\n        longitude: -71.3488548,\r\n        mapZoom: 16,\r\n        mapType: 'roadmap',\r\n        mapTilt: 0,\r\n        date: new Date(2021, 5, 22, 12).toString(),\r\n\r\n        clickObjectType: null,\r\n\r\n        worlds: {},\r\n        getWorld(name: string) {\r\n            return get().worlds[name];\r\n        },\r\n        createNewWorld() {\r\n            immerSet((state: CommonStoreState) => {\r\n                const elements: ElementModel[] = [];\r\n                const e1 = {type: 'Foundation', cx: 5, cy: 0, lx: 1, ly: 2, height: 0.1, id: 'f1'};\r\n                const e2 = {type: 'Foundation', cx: 5, cy: 2, lx: 2, ly: 2, height: 0.2, id: 'f2'};\r\n                elements.push(e1);\r\n                elements.push(e2);\r\n                const world = {\r\n                    name: 'default',\r\n                    elements: elements,\r\n                    cameraPosition: new Vector3(0, 0, 5)\r\n                };\r\n                state.worlds[world.name] = world;\r\n            })\r\n        }\r\n    };\r\n}, {name: 'aladdin-storage'})));\r\n\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport React, {useEffect, useRef} from \"react\";\r\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\r\nimport {extend, Object3DNode, useThree} from \"@react-three/fiber\";\r\nimport {useStore} from \"./stores/common\";\r\n\r\n// Extend will make OrbitControls available as a JSX element called orbitControls for us to use.\r\nextend({OrbitControls});\r\n\r\ndeclare global {\r\n    namespace JSX {\r\n        interface IntrinsicElements {\r\n            'orbitControls': Object3DNode<OrbitControls, typeof OrbitControls>;\r\n        }\r\n    }\r\n}\r\n\r\nexport interface OrbitControllerProps {\r\n    [key: string]: any;\r\n}\r\n\r\n// Get a reference to the Three.js Camera, and the canvas html element.\r\n// We need these to setup the OrbitControls class.\r\n// https://threejs.org/docs/#examples/en/controls/OrbitControls\r\nconst OrbitController = () => {\r\n\r\n    const set = useStore(state => state.set);\r\n    const {camera, gl: {domElement}} = useThree();\r\n    // Ref to the controls, so that we can update them on every frame using useFrame\r\n    const controls = useRef<OrbitControls>(null);\r\n\r\n    useEffect(() => {\r\n        const c = controls.current;\r\n        if (c) {\r\n            c.target.set(0, 0, 0);\r\n            c.addEventListener('end', onInteractionEnd);\r\n        }\r\n        return () => {\r\n            c?.removeEventListener('end', onInteractionEnd);\r\n        }\r\n    });\r\n\r\n    const onInteractionEnd = () => {\r\n        set((state) => {\r\n            const w = state.worlds['default'];\r\n            if (w) {\r\n                // FIXME: why can't set function be used?\r\n                w.cameraPosition.x = camera.position.x;\r\n                w.cameraPosition.y = camera.position.y;\r\n                w.cameraPosition.z = camera.position.z;\r\n            }\r\n        });\r\n    };\r\n\r\n    // animation\r\n    // useFrame((state) => {\r\n    //     if (controls.current) {\r\n    //         controls.current.update();\r\n    //     }\r\n    // });\r\n\r\n    return (\r\n        <orbitControls\r\n            ref={controls}\r\n            args={[camera, domElement]}\r\n            enableZoom={true}\r\n            maxAzimuthAngle={Math.PI}\r\n            minAzimuthAngle={-Math.PI}\r\n        />\r\n    );\r\n\r\n};\r\n\r\nexport default OrbitController;\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nexport enum Theme {\r\n    default = 'Default',\r\n    desert = 'Desert',\r\n    grassland = 'Grassland',\r\n}\r\n\r\nexport enum ClickObjectType {\r\n    sky = 'Sky',\r\n    ground = 'Ground',\r\n}\r\n","export default __webpack_public_path__ + \"static/media/daysky.66925efd.jpg\";","export default __webpack_public_path__ + \"static/media/nightsky.2ee37da6.jpg\";","export default __webpack_public_path__ + \"static/media/desert.e1e10657.jpg\";","export default __webpack_public_path__ + \"static/media/desert-night.6f0f274c.jpg\";","export default __webpack_public_path__ + \"static/media/grassland.d74bba81.jpg\";","export default __webpack_public_path__ + \"static/media/grassland-night.fa2ff11e.jpg\";","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport React, {useMemo, useRef} from \"react\";\r\nimport DefaultDaySkyImage from \"../resources/daysky.jpg\";\r\nimport DefaultNightSkyImage from \"../resources/nightsky.jpg\";\r\nimport DesertDaySkyImage from \"../resources/desert.jpg\";\r\nimport DesertNightSkyImage from \"../resources/desert-night.jpg\";\r\nimport GrasslandDaySkyImage from \"../resources/grassland.jpg\";\r\nimport GrasslandNightSkyImage from \"../resources/grassland-night.jpg\";\r\nimport {DoubleSide, Mesh, TextureLoader} from \"three\";\r\nimport {useStore} from \"../stores/common\";\r\nimport {ClickObjectType} from \"../types\";\r\nimport {ThreeEvent} from \"@react-three/fiber\";\r\n\r\nexport interface SkyProps {\r\n    theme?: string,\r\n    night?: boolean,\r\n\r\n    [key: string]: any;\r\n}\r\n\r\nconst Sky = ({\r\n                 theme = 'Default',\r\n                 night = false,\r\n                 ...props\r\n             }: SkyProps) => {\r\n\r\n    const set = useStore(state => state.set);\r\n    const meshRef = useRef<Mesh>(null!);\r\n    const texture = useMemo(() => {\r\n        const loader = new TextureLoader();\r\n        let texture;\r\n        switch (theme) {\r\n            case 'Desert':\r\n                texture = loader.load(night ? DesertNightSkyImage : DesertDaySkyImage);\r\n                break;\r\n            case 'Grassland':\r\n                texture = loader.load(night ? GrasslandNightSkyImage : GrasslandDaySkyImage);\r\n                break;\r\n            default:\r\n                texture = loader.load(night ? DefaultNightSkyImage : DefaultDaySkyImage);\r\n        }\r\n        return texture;\r\n    }, [theme, night]);\r\n\r\n    const clickSky = (e: ThreeEvent<MouseEvent>) => {\r\n        if (e.intersections.length > 0) {\r\n            const skyClicked = e.intersections[0].object === meshRef.current;\r\n            if (skyClicked) {\r\n                set((state) => {\r\n                    state.clickObjectType = ClickObjectType.sky;\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <mesh\r\n            {...props}\r\n            ref={meshRef}\r\n            name={'Sky'}\r\n            scale={1}\r\n            onContextMenu={(e) => {\r\n                clickSky(e);\r\n            }}\r\n            onClick={(e) => {\r\n                clickSky(e);\r\n            }}\r\n        >\r\n            <sphereGeometry args={[1000, 16, 16, 0, 2 * Math.PI, 0, Math.PI / 2 + 0.01]}/>\r\n            <meshBasicMaterial map={texture}\r\n                               side={DoubleSide}\r\n                               opacity={1}\r\n                               color={'skyblue'}/>\r\n        </mesh>\r\n    )\r\n};\r\n\r\nexport default Sky;\r\n","var _defs, _path, _path2, _path3, _path4, _path5, _path6;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMenu(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    t: 1613755944969,\n    className: \"icon\",\n    viewBox: \"0 0 1024 1024\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"p-id\": 5967,\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 200,\n    height: 200,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M194.187431 235.50871m-69.997795 0a69.997795 69.997795 0 1 0 139.99559 0 69.997795 69.997795 0 1 0-139.99559 0Z\",\n    \"p-id\": 5968\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M347.505182 165.510915h552.305182v139.99559H347.505182z\",\n    \"p-id\": 5969\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M194.187431 512.1129m-69.997795 0a69.997795 69.997795 0 1 0 139.99559 0 69.997795 69.997795 0 1 0-139.99559 0Z\",\n    \"p-id\": 5970\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M347.505182 442.115105h552.305182v139.99559H347.505182z\",\n    \"p-id\": 5971\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M194.187431 788.49129m-69.997795 0a69.997795 69.997795 0 1 0 139.99559 0 69.997795 69.997795 0 1 0-139.99559 0Z\",\n    \"p-id\": 5972\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M347.505182 718.719294h552.305182v139.99559H347.505182z\",\n    \"p-id\": 5973\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMenu);\nexport default __webpack_public_path__ + \"static/media/menu.c2982aed.svg\";\nexport { ForwardRef as ReactComponent };","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {Vector3} from \"three\";\r\nimport {Line} from \"@react-three/drei\";\r\n\r\nexport interface AxesProps {\r\n    lineWidth?: number,\r\n    endPoint?: number,\r\n}\r\n\r\nconst Axes = ({lineWidth = 1, endPoint = 1000}: AxesProps) => {\r\n    return (\r\n        <mesh>\r\n            <Line points={[new Vector3(-endPoint, 0, 0), new Vector3(endPoint, 0, 0)]}\r\n                  color={'red'}\r\n                  lineWidth={lineWidth}/>\r\n            <Line points={[new Vector3(0, -endPoint, 0), new Vector3(0, endPoint, 0)]}\r\n                  color={'green'}\r\n                  lineWidth={lineWidth}/>\r\n            <Line points={[new Vector3(0, 0, -endPoint), new Vector3(0, 0, endPoint)]}\r\n                  color={'blue'}\r\n                  lineWidth={lineWidth}/>\r\n        </mesh>\r\n    )\r\n};\r\n\r\nexport default Axes;\r\n","export default __webpack_public_path__ + \"static/media/compass.7ded737e.obj\";","export default __webpack_public_path__ + \"static/media/helvetiker_regular.typeface.9a3651b4.fnt\";","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport React, {useRef} from \"react\";\r\nimport {useFrame, useLoader, useThree} from '@react-three/fiber'\r\nimport {OBJLoader} from \"three/examples/jsm/loaders/OBJLoader\";\r\nimport {Euler, FontLoader, Mesh, MeshBasicMaterial, TextGeometryParameters, Vector3} from \"three\";\r\nimport compassObj from '../assets/compass.obj';\r\nimport helvetikerFont from '../fonts/helvetiker_regular.typeface.fnt';\r\n\r\nexport interface CompassProps {\r\n    scale?: number;\r\n\r\n    [key: string]: any;\r\n}\r\n\r\nconst Compass = ({\r\n                     scale = 0.01,\r\n                     ...props\r\n                 }: CompassProps) => {\r\n    const model = useLoader(OBJLoader, compassObj);\r\n    const font = useLoader(FontLoader, helvetikerFont);\r\n    const mesh = useRef<Mesh>(null!);\r\n    const textGeometryParams = {font: font, height: 0.00, size: 0.005} as TextGeometryParameters;\r\n    const textMaterial = new MeshBasicMaterial({color: 'white'});\r\n    const compassMaterial = new MeshBasicMaterial({color: 'red'});\r\n\r\n    // FIXME: This is not the right way to fix the compass\r\n    const {camera} = useThree();\r\n    useFrame((state) => {\r\n        if (mesh.current) {\r\n            const v = new Vector3(0.88, -0.8, 0.1).unproject(camera);\r\n            mesh.current.position.set(v.x, v.y, v.z);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <mesh\r\n            {...props}\r\n            ref={mesh}\r\n            rotation={new Euler(-Math.PI / 2, 0, 0)}\r\n        >\r\n            <mesh position={[-0.001, 0.02, 0]} material={textMaterial}>\r\n                <textGeometry args={['N', textGeometryParams]}/>\r\n            </mesh>\r\n            <mesh position={[-0.0015, -0.025, 0]} material={textMaterial}>\r\n                <textGeometry args={['S', textGeometryParams]}/>\r\n            </mesh>\r\n            <mesh position={[-0.025, -0.002, 0]} material={textMaterial}>\r\n                <textGeometry args={['W', textGeometryParams]}/>\r\n            </mesh>\r\n            <mesh position={[0.02, -0.002, 0]} material={textMaterial}>\r\n                <textGeometry args={['E', textGeometryParams]}/>\r\n            </mesh>\r\n            <primitive object={model} scale={scale} material={compassMaterial}/>\r\n        </mesh>\r\n    );\r\n};\r\n\r\nexport default Compass;\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport React, {useRef} from \"react\";\r\nimport {Plane} from \"@react-three/drei\";\r\nimport {useStore} from \"../stores/common\";\r\nimport {DoubleSide} from \"three\";\r\nimport {ClickObjectType} from \"../types\";\r\n\r\nconst Ground = () => {\r\n\r\n    const set = useStore(state => state.set);\r\n    const groundColor = useStore(state => state.groundColor);\r\n    const planeRef = useRef();\r\n\r\n    const selectNone = () => {\r\n        set((state) => {\r\n            const w = state.worlds['default'];\r\n            if (w) {\r\n                for (const e of w.elements) {\r\n                    e.selected = false;\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Plane receiveShadow\r\n               ref={planeRef}\r\n               name={'Ground'}\r\n               onContextMenu={(e) => {\r\n                   if (e.intersections.length > 0) {\r\n                       const groundClicked = e.intersections[0].object === planeRef.current;\r\n                       if (groundClicked) {\r\n                           set((state) => {\r\n                               state.clickObjectType = ClickObjectType.ground;\r\n                           });\r\n                       }\r\n                   }\r\n               }}\r\n               onClick={(e) => {\r\n                   if (e.intersections.length > 0) {\r\n                       const groundClicked = e.intersections[0].object === planeRef.current;\r\n                       if (groundClicked) {\r\n                           set((state) => {\r\n                               state.clickObjectType = ClickObjectType.ground;\r\n                           });\r\n                           selectNone();\r\n                       }\r\n                   }\r\n               }}\r\n               rotation={[-Math.PI / 2, 0, 0]}\r\n               position={[0, -0.1, 0]}\r\n               args={[10000, 10000]}>\r\n            <meshStandardMaterial side={DoubleSide} attach=\"material\" color={groundColor}/>\r\n        </Plane>\r\n    )\r\n};\r\n\r\nexport default Ground;\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport {Vector3} from \"three\";\r\n\r\nexport class Util {\r\n\r\n    static get UNIT_VECTOR_POS_X() {\r\n        return new Vector3(1, 0, 0);\r\n    }\r\n\r\n    static get UNIT_VECTOR_NEG_X() {\r\n        return new Vector3(-1, 0, 0);\r\n    }\r\n\r\n    static get UNIT_VECTOR_POS_Y() {\r\n        return new Vector3(0, 1, 0);\r\n    }\r\n\r\n    static get UNIT_VECTOR_NEG_Y() {\r\n        return new Vector3(0, -1, 0);\r\n    }\r\n\r\n    static get UNIT_VECTOR_POS_Z() {\r\n        return new Vector3(0, 0, 1);\r\n    }\r\n\r\n    static get UNIT_VECTOR_NEG_Z() {\r\n        return new Vector3(0, 0, -1);\r\n    }\r\n\r\n    static get ZERO_TOLERANCE() {\r\n        return 0.0001;\r\n    }\r\n\r\n    static get HALF_PI() {\r\n        return Math.PI / 2;\r\n    }\r\n\r\n    static get TWO_PI() {\r\n        return Math.PI * 2;\r\n    }\r\n\r\n    static toRadians(degrees: number) {\r\n        return degrees * (Math.PI / 180);\r\n    }\r\n\r\n    static toDegrees(radians: number) {\r\n        return radians * (180 / Math.PI);\r\n    }\r\n\r\n    static sphericalToCartesianZ(sphereCoords: THREE.Vector3) {\r\n        let a = sphereCoords.x * Math.cos(sphereCoords.z);\r\n        let x = a * Math.cos(sphereCoords.y);\r\n        let y = a * Math.sin(sphereCoords.y);\r\n        let z = sphereCoords.x * Math.sin(sphereCoords.z);\r\n        sphereCoords.set(x, y, z);\r\n        return sphereCoords;\r\n    }\r\n\r\n}\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport {Util} from \"../util\";\r\nimport {Vector3} from \"three\";\r\n\r\nexport const TILT_ANGLE = 23.45 / 180.0 * Math.PI;\r\n\r\nexport const computeDeclinationAngle = (date: Date) => {\r\n    const days = Math.floor((date.getTime()\r\n        - new Date(date.getFullYear(), 0, 0).getTime()) / (1000 * 60 * 60 * 24));\r\n    return TILT_ANGLE * Math.sin(Util.TWO_PI * (284 + days) / 365.25);\r\n};\r\n\r\nexport const computeHourAngle = (date: Date) => {\r\n    const minutes = date.getHours() * 60 + date.getMinutes() - 12 * 60;\r\n    return minutes / (12.0 * 60.0) * Math.PI;\r\n}\r\n\r\nexport const computeSunLocation = (radius: number,\r\n                                   hourAngle: number,\r\n                                   declinationAngle: number,\r\n                                   observerLatitude: number) => {\r\n    const altitudeAngle = Math.asin(\r\n        Math.sin(declinationAngle) * Math.sin(observerLatitude) +\r\n        Math.cos(declinationAngle) * Math.cos(hourAngle) * Math.cos(observerLatitude)\r\n    );\r\n    const xAzm = Math.sin(hourAngle) * Math.cos(declinationAngle);\r\n    const yAzm = Math.cos(observerLatitude) * Math.sin(declinationAngle)\r\n        - Math.cos(hourAngle) * Math.cos(declinationAngle) * Math.sin(observerLatitude);\r\n    const azimuthAngle = Math.atan2(yAzm, xAzm);\r\n    const coords = new Vector3(radius, azimuthAngle, altitudeAngle);\r\n    Util.sphericalToCartesianZ(coords);\r\n    // reverse the x so that sun moves from east to west\r\n    coords.setX(-coords.x);\r\n    return coords;\r\n};\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport {Util} from \"../util\";\r\nimport React, {useEffect, useMemo} from \"react\";\r\nimport {\r\n    BufferAttribute,\r\n    BufferGeometry,\r\n    Color,\r\n    DoubleSide,\r\n    Euler,\r\n    MeshBasicMaterial,\r\n    Plane,\r\n    SphereGeometry,\r\n    Vector3\r\n} from \"three\";\r\nimport {\r\n    computeDeclinationAngle,\r\n    computeSunLocation,\r\n    TILT_ANGLE\r\n} from \"./sunTools\";\r\nimport {Line} from \"@react-three/drei\";\r\n\r\nexport interface HeliodonProps {\r\n    radius: number;\r\n    hourAngle: number;\r\n    declinationAngle: number;\r\n    date: Date;\r\n    latitude: number; // in radian\r\n\r\n    [key: string]: any;\r\n}\r\n\r\nconst HOUR_DIVISIONS = 96;\r\nconst BASE_DIVISIONS = 72;\r\nconst DECLINATION_DIVISIONS = 12;\r\n\r\nconst Heliodon = ({\r\n                      hourAngle,\r\n                      declinationAngle,\r\n                      radius = 10,\r\n                      date = new Date(),\r\n                      latitude = 42 / 180.0 * Math.PI,\r\n                  }: HeliodonProps) => {\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            // remove listeners if any\r\n        }\r\n    }, [date, latitude]);\r\n\r\n    const nRibLines = 5;\r\n\r\n    const [basePositions, baseNormals, baseColors, tickPoints] = useMemo(() => {\r\n        const basePoints: Vector3[] = [];\r\n        const tickPoints: Vector3[] = [];\r\n        const step = Math.PI * 2 / BASE_DIVISIONS;\r\n        let counter = 0;\r\n        for (let angle = 0; angle < Util.TWO_PI + step / 2.0; angle += step) {\r\n            const theta = Math.min(angle, Util.TWO_PI);\r\n            let width = 0.05 * radius;\r\n            // TODO: This is inefficient. We should use indexed buffer to share vertices\r\n            basePoints.push(Util.sphericalToCartesianZ(new Vector3(radius, theta, 0)));\r\n            basePoints.push(Util.sphericalToCartesianZ(new Vector3(radius + width, theta, 0)));\r\n            basePoints.push(Util.sphericalToCartesianZ(new Vector3(radius, theta + step, 0)));\r\n            basePoints.push(Util.sphericalToCartesianZ(new Vector3(radius + width, theta, 0)));\r\n            basePoints.push(Util.sphericalToCartesianZ(new Vector3(radius + width, theta + step, 0)));\r\n            basePoints.push(Util.sphericalToCartesianZ(new Vector3(radius, theta + step, 0)));\r\n            let p;\r\n            if (Util.TWO_PI - theta > Util.ZERO_TOLERANCE) {\r\n                width = 0.05 * radius + (counter % 3 === 0 ? 0.2 : 0);\r\n                p = new Vector3(radius, theta, 0);\r\n                p.z = 0.002;\r\n                tickPoints.push(Util.sphericalToCartesianZ(p));\r\n                p = new Vector3(radius + width, theta, 0);\r\n                p.z = 0.002;\r\n                tickPoints.push(Util.sphericalToCartesianZ(p));\r\n            }\r\n            counter++;\r\n        }\r\n\r\n        // attributes\r\n        const length = basePoints.length * 3;\r\n        const basePositions = new Float32Array(length);\r\n        const baseNormals = new Float32Array(length);\r\n        const baseColors = new Float32Array(length);\r\n\r\n        for (let i = 0; i < basePoints.length; i++) {\r\n            const j = i * 3;\r\n            basePositions[j] = basePoints[i].x;\r\n            basePositions[j + 1] = basePoints[i].y;\r\n            basePositions[j + 2] = basePoints[i].z;\r\n            baseNormals[j] = 0;\r\n            baseNormals[j + 1] = 1;\r\n            baseNormals[j + 2] = 0;\r\n            const c = (Math.floor(i / 18)) % 2 === 0 ? 0.2 : 1.0;\r\n            baseColors[j] = c;\r\n            baseColors[j + 1] = c;\r\n            baseColors[j + 2] = c;\r\n        }\r\n\r\n        return [basePositions, baseNormals, baseColors, tickPoints];\r\n    }, [radius]);\r\n\r\n    const sunPathPoints = useMemo(() => {\r\n        const step = Util.TWO_PI / HOUR_DIVISIONS;\r\n        const points = [];\r\n        for (let h = -Math.PI; h < Math.PI + step / 2.0; h += step) {\r\n            const v = computeSunLocation(radius, h, declinationAngle, latitude);\r\n            if (v.z > -0.1) {\r\n                points.push(v);\r\n            }\r\n        }\r\n        return points;\r\n    }, [latitude, radius, declinationAngle]);\r\n\r\n    const getSunPathPointsByDate = (d: number) => {\r\n        const step = Util.TWO_PI / HOUR_DIVISIONS;\r\n        const points = [];\r\n        for (let h = -Math.PI; h < Math.PI + step / 2.0; h += step) {\r\n            const v = computeSunLocation(radius, h, d, latitude);\r\n            if (v.z > -0.1) {\r\n                points.push(v);\r\n            }\r\n        }\r\n        return points;\r\n    };\r\n\r\n    const pointArraySunPaths = useMemo(() => {\r\n        const dMin = computeDeclinationAngle(new Date(2021, 11, 22));\r\n        const dMax = computeDeclinationAngle(new Date(2021, 5, 22));\r\n        const delta = (dMax - dMin) / nRibLines;\r\n        const arr = [];\r\n        for (let i = 0; i <= nRibLines; i++) {\r\n            arr.push(getSunPathPointsByDate(dMin + i * delta));\r\n        }\r\n        return arr;\r\n    }, [latitude, radius]);\r\n\r\n    const sunPosition = useMemo(() => {\r\n        return computeSunLocation(radius, hourAngle, declinationAngle, latitude);\r\n    }, [latitude, declinationAngle, hourAngle, radius]);\r\n\r\n    const sunbeltGeometry = useMemo(() => {\r\n        const declinationStep = 2.0 * TILT_ANGLE / DECLINATION_DIVISIONS;\r\n        const hourStep = Util.TWO_PI / HOUR_DIVISIONS;\r\n        const geometry = new BufferGeometry();\r\n        let verticesCount = 0;\r\n        const vertices: Vector3[] = [];\r\n        const indices = [];\r\n        for (let d = -TILT_ANGLE; d < TILT_ANGLE - declinationStep / 2.0; d += declinationStep) {\r\n            for (let h = -Math.PI; h < Math.PI - hourStep / 2.0; h += hourStep) {\r\n                let h2 = h + hourStep;\r\n                let d2 = d + declinationStep;\r\n                if (h2 > Math.PI) {\r\n                    h2 = Math.PI;\r\n                }\r\n                if (d2 > TILT_ANGLE) {\r\n                    d2 = TILT_ANGLE;\r\n                }\r\n                const v1 = computeSunLocation(radius, h, d, latitude);\r\n                const v2 = computeSunLocation(radius, h2, d, latitude);\r\n                const v3 = computeSunLocation(radius, h2, d2, latitude);\r\n                const v4 = computeSunLocation(radius, h, d2, latitude);\r\n                if (v1.z >= 0 || v2.z >= 0 || v3.z >= 0 || v4.z >= 0) {\r\n                    vertices.push(v1, v2, v3, v4);\r\n                    indices.push(verticesCount);\r\n                    indices.push(verticesCount + 1);\r\n                    indices.push(verticesCount + 2);\r\n                    indices.push(verticesCount);\r\n                    indices.push(verticesCount + 2);\r\n                    indices.push(verticesCount + 3);\r\n                    verticesCount += 4;\r\n                }\r\n            }\r\n        }\r\n        geometry.setFromPoints(vertices);\r\n        geometry.setIndex(new BufferAttribute(new Uint16Array(indices), 1));\r\n        return geometry;\r\n    }, [latitude, radius]);\r\n\r\n    return (\r\n        <mesh rotation={new Euler(-Math.PI / 2, 0, 0)}>\r\n            {/* draw base */}\r\n            <mesh>\r\n                <bufferGeometry attach='geometry'>\r\n                    <bufferAttribute\r\n                        attachObject={[\"attributes\", \"position\"]}\r\n                        count={basePositions.length / 3}\r\n                        array={basePositions}\r\n                        itemSize={3}\r\n                    />\r\n                    <bufferAttribute\r\n                        attachObject={[\"attributes\", \"normal\"]}\r\n                        count={baseNormals.length / 3}\r\n                        array={baseNormals}\r\n                        itemSize={3}\r\n                    />\r\n                    <bufferAttribute\r\n                        attachObject={[\"attributes\", \"color\"]}\r\n                        count={baseColors.length / 3}\r\n                        array={baseColors}\r\n                        itemSize={3}\r\n                    />\r\n                </bufferGeometry>\r\n                <meshBasicMaterial side={DoubleSide}\r\n                                   vertexColors={true}\r\n                                   polygonOffset={true}\r\n                                   polygonOffsetFactor={-0.7}\r\n                                   polygonOffsetUnits={-2}/>\r\n            </mesh>\r\n            <lineSegments\r\n                args={[new BufferGeometry().setFromPoints(tickPoints),\r\n                    new MeshBasicMaterial({color: 0x000000})]}/>\r\n            {/* draw sun path*/}\r\n            <mesh>\r\n                {sunPathPoints.length > 3 && <Line lineWidth={2} points={sunPathPoints} color={'yellow'}/>}\r\n                {pointArraySunPaths\r\n                    .filter(a => a.length > 3)\r\n                    .map((a, index) => {\r\n                        return <Line key={index}\r\n                                     opacity={index === 0 || index === nRibLines ? 1 : 0.5}\r\n                                     lineWidth={index === 0 || index === nRibLines ? 1 : 0.5}\r\n                                     points={a}\r\n                                     color={'#999'}/>;\r\n                    })\r\n                }\r\n                <mesh\r\n                    args={[sunbeltGeometry,\r\n                        new MeshBasicMaterial({\r\n                            side: DoubleSide,\r\n                            color: new Color(1, 1, 0),\r\n                            transparent: true,\r\n                            opacity: 0.5,\r\n                            clippingPlanes: [new Plane(Util.UNIT_VECTOR_POS_Y, 0)]\r\n                        })\r\n                    ]}\r\n                />\r\n                <mesh\r\n                    position={sunPosition}\r\n                    args={[new SphereGeometry(0.25, 20, 20),\r\n                        new MeshBasicMaterial({color: 0xffffff00})\r\n                    ]}\r\n                />\r\n            </mesh>\r\n        </mesh>\r\n    );\r\n\r\n};\r\n\r\nexport default Heliodon;\r\n","export default __webpack_public_path__ + \"static/media/house.bec5806a.mtl\";","export default __webpack_public_path__ + \"static/media/house.1682689d.obj\";","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport React, {useRef} from \"react\";\r\nimport {useLoader} from '@react-three/fiber'\r\nimport {OBJLoader} from \"three/examples/jsm/loaders/OBJLoader\";\r\nimport {Group, Mesh} from \"three\";\r\nimport {MTLLoader} from \"three/examples/jsm/loaders/MTLLoader\";\r\nimport sampleMtl from '../assets/house.mtl';\r\nimport sampleObj from '../assets/house.obj';\r\n\r\nexport interface SampleProps {\r\n    scale?: number;\r\n\r\n    [key: string]: any;\r\n}\r\n\r\nconst Sample = ({\r\n                    scale = 0.5,\r\n                    ...props\r\n                }: SampleProps) => {\r\n\r\n    const mesh = useRef<Mesh>(null!);\r\n\r\n    const material = useLoader(MTLLoader, sampleMtl) as MTLLoader.MaterialCreator;\r\n    const model = useLoader(OBJLoader, sampleObj, loader => {\r\n        material.preload();\r\n        // @ts-ignore\r\n        loader.setMaterials(material);\r\n    }) as Group;\r\n\r\n    if (model) {\r\n        model.castShadow = true;\r\n        model.receiveShadow = true;\r\n        model.traverse((children) => {\r\n            if (children instanceof Mesh) {\r\n                children.castShadow = true;\r\n                children.receiveShadow = true;\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <mesh\r\n            {...props}\r\n            ref={mesh}\r\n            position={[-3, 0, 3]}\r\n        >\r\n            <primitive object={model} scale={scale}/>\r\n        </mesh>\r\n    );\r\n};\r\n\r\nexport default Sample;\r\n","export default __webpack_public_path__ + \"static/media/aladdin-logo.96b59d24.png\";","export default __webpack_public_path__ + \"static/media/ifi-logo.eb360016.png\";","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport React from 'react';\r\nimport {useStore} from \"./stores/common\";\r\nimport styled from 'styled-components';\r\nimport {Menu, Dropdown, Checkbox} from 'antd';\r\nimport {ReactComponent as MenuSVG} from './assets/menu.svg';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst StyledMenuSVG = styled(MenuSVG)`\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 10px;\r\n  height: 40px;\r\n  width: 40px;\r\n  transition: 0.5s;\r\n  fill: brown;\r\n\r\n  &:hover {\r\n    fill: white;\r\n  }\r\n`;\r\n\r\nconst MainMenu = () => {\r\n\r\n    const set = useStore(state => state.set);\r\n    const showGroundSettings = useStore(state => state.showGroundSettings);\r\n    const showHeliodonSettings = useStore(state => state.showHeliodonSettings);\r\n\r\n    // @ts-ignore\r\n    const onChangeShowGroundSettings = (e) => {\r\n        set((state) => {\r\n            state.showGroundSettings = e.target.checked;\r\n        });\r\n    };\r\n\r\n    // @ts-ignore\r\n    const onChangeShowHeliodonSettings = (e) => {\r\n        set((state) => {\r\n            state.showHeliodonSettings = e.target.checked;\r\n        });\r\n    };\r\n\r\n    const menu = (\r\n        <Menu>\r\n            <Menu.Item key={'ground-settings-switch'}>\r\n                <Checkbox checked={showGroundSettings} onChange={onChangeShowGroundSettings}>\r\n                    Ground Settings\r\n                </Checkbox>\r\n            </Menu.Item>\r\n            <Menu.Item key={'heliodon-settings-switch'}>\r\n                <Checkbox checked={showHeliodonSettings} onChange={onChangeShowHeliodonSettings}>\r\n                    Heliodon Settings\r\n                </Checkbox>\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <Dropdown overlay={menu} trigger={['click']}>\r\n            <StyledMenuSVG/>\r\n        </Dropdown>\r\n    );\r\n};\r\n\r\nexport default MainMenu;\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport React, {memo, useCallback, useState} from \"react\";\r\nimport {GoogleMap} from '@react-google-maps/api';\r\nimport {useStore} from \"./stores/common\";\r\n\r\nexport interface MapsProp {\r\n\r\n    setLatitude?: (value: number) => void;\r\n    setLongitude?: (value: number) => void;\r\n    setZoom?: (value: number) => void;\r\n    setTilt?: (value: number) => void;\r\n    setType?: (value: string) => void;\r\n\r\n}\r\n\r\nconst containerStyle = {\r\n    border: '1px solid',\r\n    width: '400px',\r\n    height: '400px'\r\n};\r\n\r\nconst Maps = ({\r\n                  setLatitude,\r\n                  setLongitude,\r\n                  setZoom,\r\n                  setTilt,\r\n                  setType,\r\n              }: MapsProp) => {\r\n\r\n    const latitude = useStore(state => state.latitude);\r\n    const longitude = useStore(state => state.longitude);\r\n    const zoom = useStore(state => state.mapZoom);\r\n    const type = useStore(state => state.mapType);\r\n    const tilt = useStore(state => state.mapTilt);\r\n    const [map, setMap] = useState<google.maps.Map | null>(null);\r\n\r\n    const onLoad = useCallback((map: google.maps.Map) => {\r\n        setMap(map);\r\n    }, []);\r\n\r\n    const onUnmount = useCallback(function callback(map) {\r\n        setMap(null);\r\n    }, []);\r\n\r\n    const onCenterChanged = () => {\r\n        if (map) {\r\n            const center = map.getCenter();\r\n            const lat = center.lat();\r\n            if (lat !== latitude) {\r\n                setLatitude?.(lat);\r\n            }\r\n            const lng = center.lng();\r\n            if (lng !== longitude) {\r\n                setLongitude?.(lng);\r\n            }\r\n        }\r\n    };\r\n\r\n    const onZoomChanged = () => {\r\n        if (map) {\r\n            const z = map.getZoom();\r\n            if (z !== zoom) {\r\n                setZoom?.(z);\r\n            }\r\n        }\r\n    };\r\n\r\n    const onTiltChanged = () => {\r\n        if (map) {\r\n            const t = map.getTilt();\r\n            if (t !== tilt) {\r\n                setTilt?.(t);\r\n            }\r\n        }\r\n    };\r\n\r\n    const onMapTypeIdChanged = () => {\r\n        if (map) {\r\n            const typeId = map.getMapTypeId();\r\n            if (typeId !== type) {\r\n                setType?.(typeId);\r\n            }\r\n        }\r\n    };\r\n\r\n    const latLng = {lat: latitude, lng: longitude};\r\n\r\n    return (\r\n        <GoogleMap\r\n            mapContainerStyle={containerStyle}\r\n            mapTypeId={type}\r\n            center={latLng}\r\n            zoom={zoom}\r\n            tilt={tilt}\r\n            onLoad={onLoad}\r\n            onUnmount={onUnmount}\r\n            onCenterChanged={onCenterChanged}\r\n            onZoomChanged={onZoomChanged}\r\n            onTiltChanged={onTiltChanged}\r\n            onMapTypeIdChanged={onMapTypeIdChanged}\r\n        >\r\n            { /* Child components, such as markers, info windows, etc. */}\r\n            <></>\r\n        </GoogleMap>\r\n    );\r\n};\r\n\r\nexport default memo(Maps);\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport {Spin} from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nexport default styled(Spin)`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(255, 255, 255, 0.5);\r\n  z-index: 999;\r\n`;\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport React, {useRef} from 'react';\r\nimport {useStore} from \"./stores/common\";\r\nimport styled from 'styled-components';\r\nimport {Space, Switch} from \"antd\";\r\nimport {CompactPicker} from 'react-color';\r\nimport Maps from \"./maps\";\r\nimport {StandaloneSearchBox, useJsApiLoader} from \"@react-google-maps/api\";\r\nimport {Libraries} from \"@react-google-maps/api/dist/utils/make-load-script-url\";\r\nimport Spinner from './components/spinner';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst libraries = ['places'] as Libraries;\r\n\r\nconst Container = styled.div`\r\n  position: fixed;\r\n  top: 10px;\r\n  left: 10px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 16px;\r\n  z-index: 9;\r\n`;\r\n\r\nconst ColumnWrapper = styled.div`\r\n  background-color: #f8f8f8;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  width: 420px;\r\n  padding-bottom: 10px;\r\n  border: 2px solid gainsboro;\r\n  border-radius: 10px 10px 10px 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  border-radius: 10px 10px 0 0;\r\n  width: 100%;\r\n  height: 24px;\r\n  padding: 10px;\r\n  background-color: #e8e8e8;\r\n  color: #888;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  svg.icon {\r\n    height: 16px;\r\n    width: 16px;\r\n    padding: 8px;\r\n    fill: #666;\r\n  }\r\n`;\r\n\r\nexport interface GroundSettingsPanelProps {\r\n    grid: boolean;\r\n    groundImage: boolean;\r\n    groundColor: string;\r\n    setGrid?: (on: boolean) => void;\r\n    setGroundImage?: (on: boolean) => void;\r\n    setGroundColor?: (color: string) => void;\r\n    changeLatitude?: (latitude: number) => void;\r\n    changeLongitude?: (longitude: number) => void;\r\n    changeMapZoom?: (zoom: number) => void;\r\n    changeMapTilt?: (tilt: number) => void;\r\n    changeMapType?: (type: string) => void;\r\n}\r\n\r\nconst GroundSettingsPanel = ({\r\n                                 grid,\r\n                                 groundImage,\r\n                                 groundColor,\r\n                                 setGrid,\r\n                                 setGroundImage,\r\n                                 setGroundColor,\r\n                                 changeLatitude,\r\n                                 changeLongitude,\r\n                                 changeMapZoom,\r\n                                 changeMapTilt,\r\n                                 changeMapType,\r\n                             }: GroundSettingsPanelProps) => {\r\n\r\n    const set = useStore(state => state.set);\r\n    const latitude = useStore(state => state.latitude);\r\n    const longitude = useStore(state => state.longitude);\r\n    const mapZoom = useStore(state => state.mapZoom);\r\n    const address = useStore(state => state.address);\r\n    const searchBox = useRef<google.maps.places.SearchBox>();\r\n\r\n    const {isLoaded, loadError} = useJsApiLoader({\r\n        id: 'google-map-script',\r\n        googleMapsApiKey: process.env.REACT_APP_MAPS_API_KEY as string,\r\n        libraries: libraries\r\n    });\r\n\r\n    const onPlacesChanged = () => {\r\n        const places = searchBox.current?.getPlaces();\r\n        if (places && places.length > 0) {\r\n            set((state) => {\r\n                const geometry = places[0].geometry;\r\n                if (geometry) {\r\n                    state.latitude = geometry.location.lat();\r\n                    state.longitude = geometry.location.lng();\r\n                }\r\n                state.address = places[0].formatted_address as string;\r\n            });\r\n        }\r\n    };\r\n\r\n    const onLoad = (s: google.maps.places.SearchBox) => {\r\n        searchBox.current = s;\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <ColumnWrapper>\r\n                <Header>\r\n                    <span>Ground Settings</span>\r\n                    <span style={{cursor: 'pointer'}} onClick={() => {\r\n                        set((state) => {\r\n                            state.showGroundSettings = false;\r\n                        });\r\n                    }}>Close</span>\r\n                </Header>\r\n                <Space direction={'vertical'}>\r\n                    <Space style={{padding: '20px'}} align={'center'} size={20}>\r\n                        <Space direction={'vertical'}>\r\n                            <Space>\r\n                                <Space style={{width: '40px'}}>Grid:</Space>\r\n                                <Switch title={'Show ground grid'}\r\n                                        checked={grid}\r\n                                        onChange={(checked) => {\r\n                                            setGrid?.(checked);\r\n                                        }}\r\n                                />\r\n                            </Space>\r\n                            <Space>\r\n                                <Space style={{width: '40px'}}>Image:</Space>\r\n                                <Switch title={'Show ground image'}\r\n                                        checked={groundImage}\r\n                                        onChange={(checked) => {\r\n                                            setGroundImage?.(checked);\r\n                                        }}\r\n                                />\r\n                            </Space>\r\n                        </Space>\r\n                        <div>Ground Color<br/>\r\n                            <CompactPicker color={groundColor} onChangeComplete={(colorResult) => {\r\n                                setGroundColor?.(colorResult.hex);\r\n                            }}/>\r\n                        </div>\r\n                    </Space>\r\n                    {isLoaded &&\r\n                    <Space>\r\n                        <div>\r\n                            <StandaloneSearchBox onLoad={onLoad}\r\n                                                 onPlacesChanged={onPlacesChanged}>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder={address}\r\n                                    style={{\r\n                                        boxSizing: `border-box`,\r\n                                        border: `1px solid transparent`,\r\n                                        width: `400px`,\r\n                                        height: `32px`,\r\n                                        padding: `0 12px`,\r\n                                        borderRadius: `3px`,\r\n                                        boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\r\n                                        fontSize: `14px`,\r\n                                        outline: `none`,\r\n                                        textOverflow: `ellipses`,\r\n                                        position: \"relative\"\r\n                                    }}\r\n                                />\r\n                            </StandaloneSearchBox>\r\n                        </div>\r\n                    </Space>\r\n                    }\r\n                    {isLoaded ?\r\n                        <Space>\r\n                            <div>\r\n                                <Maps setLatitude={changeLatitude}\r\n                                      setLongitude={changeLongitude}\r\n                                      setZoom={changeMapZoom}\r\n                                      setTilt={changeMapTilt}\r\n                                      setType={changeMapType}\r\n                                />\r\n                                Coordinates: ({latitude.toFixed(4)}°, {longitude.toFixed(4)}°),\r\n                                Zoom: {mapZoom}\r\n                            </div>\r\n                        </Space>\r\n                        :\r\n                        <Spinner/>\r\n                    }\r\n                    {loadError &&\r\n                    <Space>\r\n                        <div>Map cannot be loaded right now, sorry.</div>\r\n                    </Space>\r\n                    }\r\n                </Space>\r\n            </ColumnWrapper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default GroundSettingsPanel;\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport React, {useEffect, useRef} from 'react';\r\nimport {useStore} from \"./stores/common\";\r\nimport styled from 'styled-components';\r\nimport {Space, Switch, Slider, DatePicker, TimePicker} from \"antd\";\r\nimport moment from 'moment';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst Container = styled.div`\r\n  position: fixed;\r\n  top: 10px;\r\n  left: 10px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 16px;\r\n  z-index: 9;\r\n`;\r\n\r\nconst ColumnWrapper = styled.div`\r\n  background-color: #f8f8f8;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  width: 640px;\r\n  padding: 0;\r\n  border: 2px solid gainsboro;\r\n  border-radius: 10px 10px 10px 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  border-radius: 10px 10px 0 0;\r\n  width: 100%;\r\n  height: 24px;\r\n  padding: 10px;\r\n  background-color: #e8e8e8;\r\n  color: #888;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  svg.icon {\r\n    height: 16px;\r\n    width: 16px;\r\n    padding: 8px;\r\n    fill: #666;\r\n  }\r\n`;\r\n\r\nexport interface HeliodonSettingsPanelProps {\r\n    heliodon: boolean;\r\n    latitude: number;\r\n    date: Date;\r\n    animateSun?: boolean;\r\n    setHeliodon?: (on: boolean) => void;\r\n    setSunAnimation?: (on: boolean) => void;\r\n    changeLatitude?: (latitude: number) => void;\r\n    changeDate?: (date: Date) => void;\r\n    changeTime?: (date: Date) => void;\r\n}\r\n\r\nconst HeliodonSettingsPanel = ({\r\n                                   heliodon,\r\n                                   latitude,\r\n                                   date,\r\n                                   animateSun,\r\n                                   setHeliodon,\r\n                                   setSunAnimation,\r\n                                   changeLatitude,\r\n                                   changeDate,\r\n                                   changeTime,\r\n                               }: HeliodonSettingsPanelProps) => {\r\n\r\n    const set = useStore(state => state.set);\r\n    const requestRef = useRef<number>(0);\r\n    const previousFrameTime = useRef<number>(-1);\r\n\r\n    useEffect(() => {\r\n        requestRef.current = requestAnimationFrame(animate);\r\n        return () => {\r\n            cancelAnimationFrame(requestRef.current);\r\n        }\r\n    }, [animateSun]);\r\n\r\n    const animate = () => {\r\n        if (animateSun) {\r\n            requestRef.current = requestAnimationFrame(animate);\r\n            const currentFrameTime = Date.now();\r\n            if (currentFrameTime - previousFrameTime.current > 100) {\r\n                const day = date.getDate();\r\n                date.setHours(date.getHours(), date.getMinutes() + 15);\r\n                date.setDate(day)\r\n                changeTime?.(date);\r\n                previousFrameTime.current = currentFrameTime;\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <ColumnWrapper>\r\n                <Header>\r\n                    <span>Heliodon Settings</span>\r\n                    <span style={{cursor: 'pointer'}} onClick={() => {\r\n                        set((state) => {\r\n                            state.showHeliodonSettings = false;\r\n                        });\r\n                    }}>Close</span>\r\n                </Header>\r\n                <Space style={{padding: '20px'}} align={'baseline'} size={20}>\r\n                    <div>\r\n                        Show<br/>\r\n                        <Switch checked={heliodon} onChange={(checked) => {\r\n                            setHeliodon?.(checked);\r\n                        }}/>\r\n                    </div>\r\n                    <div>\r\n                        Animate<br/>\r\n                        <Switch checked={animateSun} onChange={(checked) => {\r\n                            setSunAnimation?.(checked);\r\n                        }}/>\r\n                    </div>\r\n                    <div>\r\n                        Date<br/>\r\n                        <DatePicker value={moment(date)}\r\n                                    onChange={(moment) => {\r\n                                        if (moment) changeDate?.(moment.toDate());\r\n                                    }}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        Time<br/>\r\n                        <TimePicker value={moment(date, 'HH:mm')}\r\n                                    format={'HH:mm'}\r\n                                    onChange={(moment) => {\r\n                                        if (moment) changeTime?.(moment.toDate());\r\n                                    }}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        Latitude: {latitude.toFixed(4)}°\r\n                        <Slider\r\n                            style={{width: '150px'}}\r\n                            marks={{'-90': '-90°', 0: '0°', 90: '90°'}}\r\n                            min={-90}\r\n                            max={90}\r\n                            tooltipVisible={false}\r\n                            defaultValue={latitude}\r\n                            onChange={(value: number) => {\r\n                                changeLatitude?.(value);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </Space>\r\n            </ColumnWrapper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default HeliodonSettingsPanel;\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport {message} from \"antd\";\r\n\r\nexport const visitIFI = () => {\r\n    window.open(\"https://intofuture.org\", '_blank');\r\n};\r\n\r\nexport const getMapImage = (size: number, lat: number, lng: number, zoom: number) => {\r\n    return \"https://maps.googleapis.com/maps/api/staticmap?maptype=satellite&center=\" + lat + \",\" + lng\r\n        + \"&zoom=\" + zoom + \"&size=\" + size + \"x\" + size + \"&scale=2&key=\" + process.env.REACT_APP_MAPS_API_KEY;\r\n}\r\n\r\nexport const showSuccess = (msg: string) => {\r\n    message.success({\r\n        content: msg,\r\n        className: 'custom-class',\r\n        style: {\r\n            marginTop: '20vh',\r\n        },\r\n        onClick: () => {\r\n            message.destroy();\r\n        }\r\n    });\r\n};\r\n\r\nexport const showInfo = (msg: string) => {\r\n    message.info({\r\n        content: msg,\r\n        className: 'custom-class',\r\n        style: {\r\n            marginTop: '20vh',\r\n        },\r\n        onClick: () => {\r\n            message.destroy();\r\n        }\r\n    });\r\n};\r\n\r\nexport const showWarning = (msg: string) => {\r\n    message.warning({\r\n        content: msg,\r\n        className: 'custom-class',\r\n        style: {\r\n            marginTop: '20vh',\r\n        },\r\n        onClick: () => {\r\n            message.destroy();\r\n        }\r\n    });\r\n};\r\n\r\nexport const showError = (msg: string) => {\r\n    message.error({\r\n        content: msg,\r\n        className: 'custom-class',\r\n        style: {\r\n            marginTop: '20vh',\r\n        },\r\n        onClick: () => {\r\n            message.destroy();\r\n        }\r\n    });\r\n};\r\n\r\nexport const fahrenheitToCelsius = (temp: number) => {\r\n    return ((temp - 32) * 5) / 9;\r\n};\r\n\r\nexport const celsiusToFahrenheit = (temp: number) => {\r\n    return temp * (9 / 5) + 32;\r\n};\r\n\r\nexport const openInNewTab = (url: string) => {\r\n    const win = window.open(url, '_blank');\r\n    if (win) {\r\n        win.focus();\r\n    }\r\n};\r\n\r\nexport const extractText = (html: string) => {\r\n    return new DOMParser().parseFromString(html, \"text/html\").documentElement.textContent;\r\n};\r\n\r\nexport const containedInDOMRect = (rect: DOMRect, x: number, y: number, margin: number) => {\r\n    return x > rect.x - margin && x < rect.x + rect.width + margin\r\n        && y > rect.y - margin && y < rect.y + rect.height + margin;\r\n};\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport React from 'react';\r\nimport CookieConsent from \"react-cookie-consent\";\r\n\r\nconst AcceptCookie = () => {\r\n    return <CookieConsent\r\n        location=\"bottom\"\r\n        buttonText=\"Accept\"\r\n        cookieName=\"AladdinCookieName\"\r\n        style={{background: \"#2B373B\", textAlign: 'center', zIndex: 99999}}\r\n        buttonStyle={{color: \"#4e503b\", fontSize: \"12px\"}}\r\n        expires={150}\r\n    >\r\n        By clicking Accept, you agree to our use of cookies to improve your experience with Aladdin.\r\n    </CookieConsent>;\r\n};\r\n\r\nexport default AcceptCookie;\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {useTexture} from \"@react-three/drei\";\r\nimport {useStore} from \"../stores/common\";\r\nimport {DoubleSide} from \"three\";\r\nimport {getMapImage} from \"../helpers\";\r\n\r\nconst GroundImage = () => {\r\n\r\n    const latitude = useStore(state => state.latitude);\r\n    const longitude = useStore(state => state.longitude);\r\n    const mapZoom = useStore(state => state.mapZoom);\r\n\r\n    const texture = useTexture(getMapImage(640, latitude, longitude, mapZoom));\r\n\r\n    return (\r\n        <mesh rotation={[-Math.PI / 2, 0, 0]} position={[0, 0, 0]}>\r\n            <planeBufferGeometry args={[100, 100]}/>\r\n            <meshStandardMaterial attach=\"material\" side={DoubleSide} map={texture} opacity={1}/>\r\n        </mesh>\r\n    )\r\n};\r\n\r\nexport default GroundImage;\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport React from 'react';\r\nimport {useStore} from \"./stores/common\";\r\nimport {Menu, Checkbox, Radio} from 'antd';\r\nimport {ClickObjectType, Theme} from \"./types\";\r\nimport 'antd/dist/antd.css';\r\n\r\nconst {SubMenu} = Menu;\r\n\r\nconst radioStyle = {\r\n    display: 'block',\r\n    height: '30px',\r\n    paddingLeft: '10px',\r\n    lineHeight: '30px',\r\n};\r\n\r\nconst ContextMenu = () => {\r\n\r\n    const setCommonStore = useStore(state => state.set);\r\n    const heliodon = useStore(state => state.heliodon);\r\n    const axes = useStore(state => state.axes);\r\n    const grid = useStore(state => state.grid);\r\n    const theme = useStore(state => state.theme);\r\n    const showSolarSettings = useStore(state => state.showHeliodonSettings);\r\n    const showGroundSettings = useStore(state => state.showGroundSettings);\r\n    const clickObjectType = useStore(state => state.clickObjectType);\r\n\r\n    //@ts-ignore\r\n    const selectTheme = (e) => {\r\n        setCommonStore(state => {\r\n            state.theme = e.target.value;\r\n        });\r\n    };\r\n\r\n    //@ts-ignore\r\n    const changeAxes = (e) => {\r\n        setCommonStore(state => {\r\n            state.axes = e.target.checked;\r\n        });\r\n    };\r\n\r\n    //@ts-ignore\r\n    const changeHeliodon = (e) => {\r\n        setCommonStore(state => {\r\n            state.heliodon = e.target.checked;\r\n        });\r\n    };\r\n\r\n    //@ts-ignore\r\n    const changeShowSolarSettings = (e) => {\r\n        setCommonStore(state => {\r\n            state.showHeliodonSettings = e.target.checked;\r\n        });\r\n    };\r\n\r\n    //@ts-ignore\r\n    const changeGrid = (e) => {\r\n        setCommonStore(state => {\r\n            state.grid = e.target.checked;\r\n        });\r\n    };\r\n\r\n    //@ts-ignore\r\n    const changeShowGroundSettings = (e) => {\r\n        setCommonStore(state => {\r\n            state.showGroundSettings = e.target.checked;\r\n        });\r\n    };\r\n\r\n    switch (clickObjectType) {\r\n        case ClickObjectType.sky:\r\n            return (\r\n                <Menu>\r\n                    <Menu.Item key={'axes'}>\r\n                        <Checkbox checked={axes} onChange={changeAxes}>\r\n                            Axes\r\n                        </Checkbox>\r\n                    </Menu.Item>\r\n                    <Menu.Item key={'heliodon'}>\r\n                        <Checkbox checked={heliodon} onChange={changeHeliodon}>\r\n                            Heliodon\r\n                        </Checkbox>\r\n                    </Menu.Item>\r\n                    <Menu.Item key={'heliodon-settings'}>\r\n                        <Checkbox checked={showSolarSettings} onChange={changeShowSolarSettings}>\r\n                            Heliodon Settings\r\n                        </Checkbox>\r\n                    </Menu.Item>\r\n                    {<SubMenu key={'theme'} title={'Theme'}>\r\n                        <Radio.Group onChange={selectTheme} value={theme} style={{height: '105px'}}>\r\n                            <Radio style={radioStyle} value={Theme.default}>Default</Radio>\r\n                            <Radio style={radioStyle} value={Theme.desert}>Desert</Radio>\r\n                            <Radio style={radioStyle} value={Theme.grassland}>Grassland</Radio>\r\n                        </Radio.Group>\r\n                    </SubMenu>}\r\n                </Menu>);\r\n        default:\r\n            return (\r\n                <Menu>\r\n                    <Menu.Item key={'ground-grid'}>\r\n                        <Checkbox checked={grid} onChange={changeGrid}>\r\n                            Grid\r\n                        </Checkbox>\r\n                    </Menu.Item>\r\n                    <Menu.Item key={'ground-settings'}>\r\n                        <Checkbox checked={showGroundSettings} onChange={changeShowGroundSettings}>\r\n                            Ground Settings\r\n                        </Checkbox>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            );\r\n    }\r\n\r\n};\r\n\r\nexport default ContextMenu;\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n *\r\n * @author Charles Xie\r\n */\r\n\r\nimport React, {Suspense, useEffect, useMemo, useState} from 'react';\r\nimport './App.css';\r\nimport {Canvas} from '@react-three/fiber';\r\nimport OrbitController from \"./orbitController\";\r\nimport Sky from \"./views/sky\";\r\nimport Axes from \"./views/axes\";\r\nimport Compass from \"./views/compass\";\r\nimport Scene from \"./scene\";\r\nimport Ground from \"./views/ground\";\r\nimport {useStore} from \"./stores/common\";\r\nimport {Euler, Vector3} from \"three\";\r\nimport Heliodon from \"./views/heliodon\";\r\nimport {Util} from \"./util\";\r\nimport {computeDeclinationAngle, computeHourAngle, computeSunLocation} from \"./views/sunTools\";\r\nimport Sample from \"./views/sample\";\r\nimport aladdinLogo from './assets/aladdin-logo.png';\r\nimport ifiLogo from './assets/ifi-logo.png';\r\nimport MainMenu from \"./mainMenu\";\r\nimport GroundSettingsPanel from \"./groundSettingsPanel\";\r\nimport HeliodonSettingsPanel from \"./heliodonSettingsPanel\";\r\nimport {VERSION} from \"./constants\";\r\nimport {visitIFI} from \"./helpers\";\r\nimport AcceptCookie from \"./acceptCookie\";\r\nimport GroundImage from \"./views/groundImage\";\r\nimport {Dropdown} from \"antd\";\r\nimport ContextMenu from \"./contextMenu\";\r\n\r\n\r\nconst App = () => {\r\n\r\n    const setCommonStore = useStore(state => state.set);\r\n    const worlds = useStore(state => state.worlds);\r\n    const getWorld = useStore(state => state.getWorld);\r\n    const createNewWorld = useStore(state => state.createNewWorld);\r\n\r\n    const showGroundSettings = useStore(state => state.showGroundSettings);\r\n    const showSolarSettings = useStore(state => state.showHeliodonSettings);\r\n\r\n    const axes = useStore(state => state.axes);\r\n    const grid = useStore(state => state.grid);\r\n    const groundImage = useStore(state => state.groundImage);\r\n    const groundColor = useStore(state => state.groundColor);\r\n    const theme = useStore(state => state.theme);\r\n    const heliodon = useStore(state => state.heliodon);\r\n    const latitude = useStore(state => state.latitude);\r\n    const now = new Date(useStore(state => state.date));\r\n\r\n    const [hourAngle, setHourAngle] = useState<number>(0);\r\n    const [declinationAngle, setDeclinationAngle] = useState<number>(0);\r\n    const [sunlightDirection, setSunlightDirection] = useState<Vector3>(new Vector3(0, 2, 2));\r\n    const [animateSun, setAnimateSun] = useState<boolean>(false);\r\n\r\n    const world = worlds['default']; // currently we have only one world, which is default\r\n    const radius = 10;\r\n\r\n    useEffect(() => {\r\n        const defaultWorld = getWorld('default');\r\n        if (!defaultWorld) {\r\n            createNewWorld();\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        setSunlightDirection(computeSunLocation(radius, hourAngle, declinationAngle, Util.toRadians(latitude))\r\n            .applyEuler(new Euler(-Math.PI / 2, 0, 0)));\r\n    }, [latitude, hourAngle, declinationAngle]);\r\n\r\n    const nowString = now.toString();\r\n    useMemo(() => {\r\n        setHourAngle(computeHourAngle(now));\r\n        setDeclinationAngle(computeDeclinationAngle(now));\r\n    }, [nowString]);\r\n\r\n    const cameraPosition = new Vector3(0, 0, 5);\r\n    if (world) {\r\n        cameraPosition.set(world.cameraPosition.x, world.cameraPosition.y, world.cameraPosition.z);\r\n    }\r\n\r\n    console.log('x')\r\n\r\n    const setAxes = (on: boolean) => {\r\n        setCommonStore(state => {\r\n            state.axes = on;\r\n        });\r\n    };\r\n\r\n    const setGrid = (on: boolean) => {\r\n        setCommonStore(state => {\r\n            state.grid = on;\r\n        });\r\n    };\r\n\r\n    const setGroundImage = (on: boolean) => {\r\n        setCommonStore(state => {\r\n            state.groundImage = on;\r\n        });\r\n    };\r\n\r\n    const setGroundColor = (color: string) => {\r\n        setCommonStore(state => {\r\n            state.groundColor = color;\r\n        });\r\n    };\r\n\r\n    const setHeliodon = (on: boolean) => {\r\n        setCommonStore(state => {\r\n            state.heliodon = on;\r\n        });\r\n    };\r\n\r\n    // animation state should not be persisted\r\n    const setSunAnimation = (on: boolean) => {\r\n        setAnimateSun(on);\r\n    };\r\n\r\n    const changeDate = (date: Date) => {\r\n        const d = new Date(now);\r\n        d.setFullYear(date.getFullYear());\r\n        d.setMonth(date.getMonth());\r\n        d.setDate(date.getDate());\r\n        setCommonStore(state => {\r\n            state.date = d.toString();\r\n        });\r\n    };\r\n\r\n    const changeTime = (date: Date) => {\r\n        const d = new Date(now);\r\n        d.setHours(date.getHours(), date.getMinutes());\r\n        setCommonStore(state => {\r\n            state.date = d.toString();\r\n        });\r\n    };\r\n\r\n    const changeLatitude = (latitude: number) => {\r\n        setCommonStore(state => {\r\n            state.latitude = latitude;\r\n        });\r\n    };\r\n\r\n    const changeLatitudeAndRemoveAddress = (latitude: number) => {\r\n        setCommonStore(state => {\r\n            state.latitude = latitude;\r\n            state.address = '';\r\n        });\r\n    };\r\n\r\n    const changeLongitude = (longitude: number) => {\r\n        setCommonStore(state => {\r\n            state.longitude = longitude;\r\n        });\r\n    };\r\n\r\n    const changeMapZoom = (zoom: number) => {\r\n        setCommonStore(state => {\r\n            state.mapZoom = zoom;\r\n        });\r\n    };\r\n\r\n    const changeMapTilt = (tilt: number) => {\r\n        setCommonStore(state => {\r\n            state.mapTilt = tilt;\r\n        });\r\n    };\r\n\r\n    const changeMapType = (type: string) => {\r\n        setCommonStore(state => {\r\n            state.mapType = type;\r\n        });\r\n    };\r\n\r\n    const sunAboveHorizon = sunlightDirection.y > 0;\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div style={{\r\n                backgroundColor: 'lightblue',\r\n                height: '72px',\r\n                paddingTop: '10px',\r\n                fontSize: '30px'\r\n            }}>\r\n                <img alt='Aladdin Logo' src={aladdinLogo} height='50px' style={{verticalAlign: 'middle'}}/>\r\n                <span style={{paddingLeft: '20px', verticalAlign: 'middle'}}>Aladdin</span>\r\n            </div>\r\n            <div style={{\r\n                position: 'absolute',\r\n                bottom: '10px',\r\n                left: '10px',\r\n                zIndex: 999,\r\n                fontSize: '12px',\r\n                color: 'white'\r\n            }}>\r\n                <img alt='IFI Logo'\r\n                     src={ifiLogo}\r\n                     height='40px'\r\n                     style={{verticalAlign: 'bottom', cursor: 'pointer'}}\r\n                     title={'Go to Institute for Future Intelligence'}\r\n                     onClick={visitIFI}/>\r\n                &nbsp;&nbsp; Institute for Future Intelligence, &copy;{new Date().getFullYear()}. Version {VERSION}\r\n            </div>\r\n            <MainMenu/>\r\n            {showGroundSettings &&\r\n            <GroundSettingsPanel grid={grid}\r\n                                 groundImage={groundImage}\r\n                                 groundColor={groundColor}\r\n                                 setGrid={setGrid}\r\n                                 setGroundImage={setGroundImage}\r\n                                 setGroundColor={setGroundColor}\r\n                                 changeLatitude={changeLatitude}\r\n                                 changeLongitude={changeLongitude}\r\n                                 changeMapZoom={changeMapZoom}\r\n                                 changeMapTilt={changeMapTilt}\r\n                                 changeMapType={changeMapType}\r\n            />}\r\n            {showSolarSettings &&\r\n            <HeliodonSettingsPanel latitude={latitude}\r\n                                   date={now}\r\n                                   heliodon={heliodon}\r\n                                   animateSun={animateSun}\r\n                                   changeDate={changeDate}\r\n                                   changeTime={changeTime}\r\n                                   changeLatitude={changeLatitudeAndRemoveAddress}\r\n                                   setHeliodon={setHeliodon}\r\n                                   setSunAnimation={setSunAnimation}\r\n            />}\r\n            <Dropdown key={'canvas-context-menu'} overlay={<ContextMenu/>} trigger={['contextMenu']}>\r\n                <div>\r\n                    <Canvas shadows={true}\r\n                            camera={{\r\n                                position: cameraPosition,\r\n                                fov: 90\r\n                            }}\r\n                            style={{height: 'calc(100vh - 70px)', backgroundColor: 'black'}}>\r\n                        <Suspense fallback={null}>\r\n                            <OrbitController/>\r\n                            <ambientLight intensity={0.25}/>\r\n                            <directionalLight\r\n                                color='white'\r\n                                position={[sunlightDirection.x, sunlightDirection.y, sunlightDirection.z]}\r\n                                intensity={sunAboveHorizon ? 0.5 : 0}\r\n                                castShadow\r\n                                shadow-mapSize-height={512}\r\n                                shadow-mapSize-width={512}\r\n                            />\r\n                            {grid && <gridHelper args={[500, 100, 'gray', 'gray']}/>}\r\n                            <Compass/>\r\n                            <Sample/>\r\n                            {axes && <Axes/>}\r\n                            <Ground/>\r\n                            {groundImage && <GroundImage/>}\r\n                            <Sky theme={theme} night={!sunAboveHorizon}/>\r\n                            {heliodon &&\r\n                            <Heliodon\r\n                                hourAngle={hourAngle}\r\n                                declinationAngle={declinationAngle}\r\n                                radius={radius}\r\n                                date={now}\r\n                                latitude={Util.toRadians(latitude)}\r\n                            />}\r\n                            {/*{world && <Scene world={world}/>}*/}\r\n                        </Suspense>\r\n                    </Canvas>\r\n                </div>\r\n            </Dropdown>\r\n            <AcceptCookie/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nexport const VERSION = '0.0.1';\r\n\r\nexport const isProd = process.env.NODE_ENV === 'production';\r\n\r\nexport const HOME_URL: string = isProd ? 'https://aladdin.intofuture.org' : 'http://aladdin.dev';\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*\n * @Copyright 2021. Institute for Future Intelligence, Inc.\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}