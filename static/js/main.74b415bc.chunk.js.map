{"version":3,"sources":["stores/common.ts","orbitController.tsx","assets/menu.svg","resources/daysky.jpg","resources/nightsky.jpg","views/sky.tsx","views/axes.tsx","assets/compass.obj","fonts/helvetiker_regular.typeface.fnt","views/compass.tsx","views/ground.tsx","util.ts","views/sunTools.ts","views/heliodon.tsx","assets/house.mtl","assets/house.obj","views/sample.tsx","assets/aladdin-logo.png","assets/ifi-logo.png","mainMenu.tsx","maps.tsx","sceneSettingsPanel.tsx","solarSettingsPanel.tsx","helpers.ts","acceptCookie.tsx","App.tsx","constants.ts","reportWebVitals.ts","index.tsx"],"names":["enableMapSet","useStore","create","devtools","persist","set","get","api","immerSet","fn","produce","showSceneSettings","showSolarSettings","grid","axes","groundColor","heliodon","address","latitude","longitude","mapZoom","mapType","mapTilt","date","Date","toString","worlds","getWorld","name","createNewWorld","state","elements","push","type","cx","cy","lx","ly","height","id","world","cameraPosition","Vector3","extend","OrbitControls","_defs","_path","_path2","_path3","_path4","_path5","_path6","OrbitController","useThree","camera","domElement","gl","controls","useRef","useEffect","c","current","target","addEventListener","onInteractionEnd","removeEventListener","w","x","position","y","z","ref","args","enableZoom","maxAzimuthAngle","Math","PI","minAzimuthAngle","Sky","props","meshRef","texture","useMemo","loader","TextureLoader","load","NightSkyImage","DaySkyImage","scale","onClick","e","intersections","length","object","console","log","map","side","DoubleSide","opacity","color","Axes","lineWidth","endPoint","Line","points","Compass","model","useLoader","OBJLoader","compassObj","font","FontLoader","helvetikerFont","mesh","textGeometryParams","size","textMaterial","MeshBasicMaterial","compassMaterial","useFrame","v","unproject","rotation","Euler","material","Ground","planeRef","receiveShadow","selected","attach","Util","degrees","radians","sphereCoords","a","cos","sin","TILT_ANGLE","computeDeclinationAngle","days","floor","getTime","getFullYear","TWO_PI","computeSunLocation","radius","hourAngle","declinationAngle","observerLatitude","altitudeAngle","asin","xAzm","yAzm","azimuthAngle","atan2","coords","sphericalToCartesianZ","setX","Heliodon","basePoints","tickPoints","step","counter","angle","theta","min","width","p","ZERO_TOLERANCE","basePositions","Float32Array","baseNormals","baseColors","i","j","sunPathPoints","h","getSunPathPointsByDate","d","pointArraySunPaths","dMin","delta","arr","sunPosition","sunbeltGeometry","declinationStep","hourStep","geometry","BufferGeometry","verticesCount","vertices","indices","h2","d2","v1","v2","v3","v4","setFromPoints","setIndex","BufferAttribute","Uint16Array","attachObject","count","array","itemSize","vertexColors","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","filter","index","Color","transparent","clippingPlanes","Plane","UNIT_VECTOR_POS_Y","SphereGeometry","Sample","MTLLoader","sampleMtl","sampleObj","preload","setMaterials","castShadow","traverse","children","Mesh","_extends","Object","assign","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgMenu","_ref","svgRef","title","titleId","t","className","viewBox","xmlns","xmlnsXlink","ForwardRef","StyledMenuSVG","styled","MenuSVG","MainMenu","menu","Item","checked","onChange","overlay","trigger","containerStyle","Maps","setLatitude","setLongitude","setZoom","setTilt","setType","zoom","tilt","useState","setMap","isLoaded","useJsApiLoader","googleMapsApiKey","process","onLoad","useCallback","onUnmount","latLng","lat","lng","mapContainerStyle","mapTypeId","center","onCenterChanged","getCenter","onZoomChanged","getZoom","onTiltChanged","getTilt","onMapTypeIdChanged","typeId","getMapTypeId","memo","libraries","Container","div","ColumnWrapper","Header","SceneSettingsPanel","setGrid","setAxes","setGroundColor","changeLatitude","changeLongitude","changeMapZoom","changeMapTilt","changeMapType","searchBox","style","cursor","direction","padding","align","onChangeComplete","colorResult","hex","s","onPlacesChanged","places","getPlaces","location","formatted_address","placeholder","boxSizing","border","borderRadius","boxShadow","fontSize","outline","textOverflow","toFixed","SolarSettingsPanel","animateSun","setHeliodon","setSunAnimation","changeDate","changeTime","requestRef","previousFrameTime","requestAnimationFrame","animate","cancelAnimationFrame","currentFrameTime","now","day","getDate","setHours","getHours","getMinutes","setDate","value","moment","toDate","format","marks","0","90","max","tooltipVisible","defaultValue","visitIFI","window","open","AcceptCookie","buttonText","cookieName","background","textAlign","zIndex","buttonStyle","expires","App","setCommonStore","setHourAngle","setDeclinationAngle","sunlightDirection","setSunlightDirection","setAnimateSun","toRadians","applyEuler","nowString","sunAboveHorizon","backgroundColor","paddingTop","alt","src","aladdinLogo","verticalAlign","paddingLeft","bottom","left","ifiLogo","on","setFullYear","setMonth","getMonth","shadows","fov","fallback","intensity","shadow-mapSize-height","shadow-mapSize-width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74b415bc.chunk.js","sourcesContent":["/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport create from 'zustand';\r\nimport {devtools, persist} from 'zustand/middleware';\r\nimport produce, {enableMapSet} from 'immer';\r\nimport {WorldModel} from \"../models/worldModel\";\r\nimport {Vector3} from \"three\";\r\nimport {ElementModel} from \"../models/elementModel\";\r\n\r\nenableMapSet();\r\n\r\nexport interface CommonStoreState {\r\n    set: (fn: (state: CommonStoreState) => void) => void;\r\n    worlds: { [key: string]: WorldModel };\r\n    createNewWorld: () => void;\r\n    getWorld: (name: string) => WorldModel;\r\n\r\n    showSceneSettings: boolean;\r\n    showSolarSettings: boolean;\r\n\r\n    grid: boolean;\r\n    axes: boolean;\r\n    groundColor: string;\r\n    heliodon: boolean;\r\n    address: string;\r\n    latitude: number;\r\n    longitude: number;\r\n    mapZoom: number;\r\n    mapType: string;\r\n    mapTilt: number;\r\n    date: string;\r\n}\r\n\r\nexport const useStore = create<CommonStoreState>(devtools(persist((\r\n    set,\r\n    get,\r\n    api,\r\n) => {\r\n\r\n    const immerSet: CommonStoreState['set'] = fn => set(produce(fn));\r\n\r\n    return {\r\n\r\n        set: immerSet,\r\n\r\n        showSceneSettings: false,\r\n        showSolarSettings: false,\r\n\r\n        grid: false,\r\n        axes: true,\r\n        groundColor: 'forestgreen',\r\n        heliodon: false,\r\n\r\n        address: 'Natick, MA',\r\n        latitude: 42.2844063,\r\n        longitude: -71.3488548,\r\n        mapZoom: 16,\r\n        mapType: 'roadmap',\r\n        mapTilt: 0,\r\n        date: new Date(2021, 5, 22, 12).toString(),\r\n\r\n        worlds: {},\r\n        getWorld(name: string) {\r\n            return get().worlds[name];\r\n        },\r\n        createNewWorld() {\r\n            immerSet((state: CommonStoreState) => {\r\n                const elements: ElementModel[] = [];\r\n                const e1 = {type: 'Foundation', cx: 5, cy: 0, lx: 1, ly: 2, height: 0.1, id: 'f1'};\r\n                const e2 = {type: 'Foundation', cx: 5, cy: 2, lx: 2, ly: 2, height: 0.2, id: 'f2'};\r\n                elements.push(e1);\r\n                elements.push(e2);\r\n                const world = {\r\n                    name: 'default',\r\n                    elements: elements,\r\n                    cameraPosition: new Vector3(0, 0, 5)\r\n                };\r\n                state.worlds[world.name] = world;\r\n            })\r\n        }\r\n    };\r\n}, {name: 'aladdin-storage'})));\r\n\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport React, {useEffect, useRef} from \"react\";\r\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\r\nimport {extend, Object3DNode, useThree} from \"@react-three/fiber\";\r\nimport {useStore} from \"./stores/common\";\r\n\r\n// Extend will make OrbitControls available as a JSX element called orbitControls for us to use.\r\nextend({OrbitControls});\r\n\r\ndeclare global {\r\n    namespace JSX {\r\n        interface IntrinsicElements {\r\n            'orbitControls': Object3DNode<OrbitControls, typeof OrbitControls>;\r\n        }\r\n    }\r\n}\r\n\r\nexport interface OrbitControllerProps {\r\n    [key: string]: any;\r\n}\r\n\r\n// Get a reference to the Three.js Camera, and the canvas html element.\r\n// We need these to setup the OrbitControls class.\r\n// https://threejs.org/docs/#examples/en/controls/OrbitControls\r\nconst OrbitController = () => {\r\n\r\n    const set = useStore(state => state.set);\r\n    const {camera, gl: {domElement}} = useThree();\r\n    // Ref to the controls, so that we can update them on every frame using useFrame\r\n    const controls = useRef<OrbitControls>(null);\r\n\r\n    useEffect(() => {\r\n        const c = controls.current;\r\n        if (c) {\r\n            c.target.set(0, 0, 0);\r\n            c.addEventListener('end', onInteractionEnd);\r\n        }\r\n        return () => {\r\n            c?.removeEventListener('end', onInteractionEnd);\r\n        }\r\n    });\r\n\r\n    const onInteractionEnd = () => {\r\n        set((state) => {\r\n            const w = state.worlds['default'];\r\n            if (w) {\r\n                // FIXME: why can't set function be used?\r\n                w.cameraPosition.x = camera.position.x;\r\n                w.cameraPosition.y = camera.position.y;\r\n                w.cameraPosition.z = camera.position.z;\r\n            }\r\n        });\r\n    };\r\n\r\n    // animation\r\n    // useFrame((state) => {\r\n    //     if (controls.current) {\r\n    //         controls.current.update();\r\n    //     }\r\n    // });\r\n\r\n    return (\r\n        <orbitControls\r\n            ref={controls}\r\n            args={[camera, domElement]}\r\n            enableZoom={true}\r\n            maxAzimuthAngle={Math.PI}\r\n            minAzimuthAngle={-Math.PI}\r\n        />\r\n    );\r\n\r\n};\r\n\r\nexport default OrbitController;\r\n","var _defs, _path, _path2, _path3, _path4, _path5, _path6;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMenu(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    t: 1613755944969,\n    className: \"icon\",\n    viewBox: \"0 0 1024 1024\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"p-id\": 5967,\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 200,\n    height: 200,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M194.187431 235.50871m-69.997795 0a69.997795 69.997795 0 1 0 139.99559 0 69.997795 69.997795 0 1 0-139.99559 0Z\",\n    \"p-id\": 5968\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M347.505182 165.510915h552.305182v139.99559H347.505182z\",\n    \"p-id\": 5969\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M194.187431 512.1129m-69.997795 0a69.997795 69.997795 0 1 0 139.99559 0 69.997795 69.997795 0 1 0-139.99559 0Z\",\n    \"p-id\": 5970\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M347.505182 442.115105h552.305182v139.99559H347.505182z\",\n    \"p-id\": 5971\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M194.187431 788.49129m-69.997795 0a69.997795 69.997795 0 1 0 139.99559 0 69.997795 69.997795 0 1 0-139.99559 0Z\",\n    \"p-id\": 5972\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M347.505182 718.719294h552.305182v139.99559H347.505182z\",\n    \"p-id\": 5973\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMenu);\nexport default __webpack_public_path__ + \"static/media/menu.c2982aed.svg\";\nexport { ForwardRef as ReactComponent };","export default __webpack_public_path__ + \"static/media/daysky.66925efd.jpg\";","export default __webpack_public_path__ + \"static/media/nightsky.2ee37da6.jpg\";","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport React, {useMemo, useRef} from \"react\";\r\nimport DaySkyImage from \"../resources/daysky.jpg\";\r\nimport NightSkyImage from \"../resources/nightsky.jpg\";\r\nimport {DoubleSide, Mesh, TextureLoader} from \"three\";\r\n\r\nexport interface SkyProps {\r\n    type?: string,\r\n\r\n    [key: string]: any;\r\n}\r\n\r\nconst Sky = ({\r\n                 type = 'day sky',\r\n                 ...props\r\n             }: SkyProps) => {\r\n\r\n    const meshRef = useRef<Mesh>(null!);\r\n    const texture = useMemo(() => {\r\n        const loader = new TextureLoader();\r\n        let texture;\r\n        switch (type) {\r\n            case 'night sky':\r\n                texture = loader.load(NightSkyImage);\r\n                break;\r\n            default:\r\n                texture = loader.load(DaySkyImage);\r\n        }\r\n        return texture;\r\n    }, [type]);\r\n\r\n    return (\r\n        <mesh\r\n            {...props}\r\n            ref={meshRef}\r\n            name={'Sky'}\r\n            scale={1}\r\n            onClick={(e) => {\r\n                if (e.intersections.length > 0) {\r\n                    const skyClicked = e.intersections[0].object === meshRef.current;\r\n                    if (skyClicked) {\r\n                        console.log('Sky clicked');\r\n                    }\r\n                }\r\n            }}\r\n        >\r\n            <sphereGeometry args={[1000, 16, 16, 0, 2 * Math.PI, 0, Math.PI / 2 + 0.01]}/>\r\n            <meshBasicMaterial map={texture}\r\n                               side={DoubleSide}\r\n                               opacity={1}\r\n                               color={'skyblue'}/>\r\n        </mesh>\r\n    )\r\n};\r\n\r\nexport default Sky;\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {Vector3} from \"three\";\r\nimport {Line} from \"@react-three/drei\";\r\n\r\nexport interface AxesProps {\r\n    lineWidth?: number,\r\n    endPoint?: number,\r\n}\r\n\r\nconst Axes = ({lineWidth = 1, endPoint = 1000}: AxesProps) => {\r\n    return (\r\n        <mesh>\r\n            <Line points={[new Vector3(-endPoint, 0, 0), new Vector3(endPoint, 0, 0)]}\r\n                  color={'red'}\r\n                  lineWidth={lineWidth}/>\r\n            <Line points={[new Vector3(0, -endPoint, 0), new Vector3(0, endPoint, 0)]}\r\n                  color={'green'}\r\n                  lineWidth={lineWidth}/>\r\n            <Line points={[new Vector3(0, 0, -endPoint), new Vector3(0, 0, endPoint)]}\r\n                  color={'blue'}\r\n                  lineWidth={lineWidth}/>\r\n        </mesh>\r\n    )\r\n};\r\n\r\nexport default Axes;\r\n","export default __webpack_public_path__ + \"static/media/compass.7ded737e.obj\";","export default __webpack_public_path__ + \"static/media/helvetiker_regular.typeface.9a3651b4.fnt\";","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport React, {useRef} from \"react\";\r\nimport {useFrame, useLoader, useThree} from '@react-three/fiber'\r\nimport {OBJLoader} from \"three/examples/jsm/loaders/OBJLoader\";\r\nimport {Euler, FontLoader, Mesh, MeshBasicMaterial, TextGeometryParameters, Vector3} from \"three\";\r\nimport compassObj from '../assets/compass.obj';\r\nimport helvetikerFont from '../fonts/helvetiker_regular.typeface.fnt';\r\n\r\nexport interface CompassProps {\r\n    scale?: number;\r\n\r\n    [key: string]: any;\r\n}\r\n\r\nconst Compass = ({\r\n                     scale = 0.01,\r\n                     ...props\r\n                 }: CompassProps) => {\r\n    const model = useLoader(OBJLoader, compassObj);\r\n    const font = useLoader(FontLoader, helvetikerFont);\r\n    const mesh = useRef<Mesh>(null!);\r\n    const textGeometryParams = {font: font, height: 0.00, size: 0.005} as TextGeometryParameters;\r\n    const textMaterial = new MeshBasicMaterial({color: 'white'});\r\n    const compassMaterial = new MeshBasicMaterial({color: 'red'});\r\n\r\n    // FIXME: This is not the right way to fix the compass\r\n    const {camera} = useThree();\r\n    useFrame((state) => {\r\n        if (mesh.current) {\r\n            const v = new Vector3(0.88, -0.8, 0.1).unproject(camera);\r\n            mesh.current.position.set(v.x, v.y, v.z);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <mesh\r\n            {...props}\r\n            ref={mesh}\r\n            rotation={new Euler(-Math.PI / 2, 0, 0)}\r\n        >\r\n            <mesh position={[-0.001, 0.02, 0]} material={textMaterial}>\r\n                <textGeometry args={['N', textGeometryParams]}/>\r\n            </mesh>\r\n            <mesh position={[-0.0015, -0.025, 0]} material={textMaterial}>\r\n                <textGeometry args={['S', textGeometryParams]}/>\r\n            </mesh>\r\n            <mesh position={[-0.025, -0.002, 0]} material={textMaterial}>\r\n                <textGeometry args={['W', textGeometryParams]}/>\r\n            </mesh>\r\n            <mesh position={[0.02, -0.002, 0]} material={textMaterial}>\r\n                <textGeometry args={['E', textGeometryParams]}/>\r\n            </mesh>\r\n            <primitive object={model} scale={scale} material={compassMaterial}/>\r\n        </mesh>\r\n    );\r\n};\r\n\r\nexport default Compass;\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport React, {useRef} from \"react\";\r\nimport {Plane} from \"@react-three/drei\";\r\nimport {useStore} from \"../stores/common\";\r\nimport {DoubleSide} from \"three\";\r\n\r\nconst Ground = () => {\r\n\r\n    const set = useStore(state => state.set);\r\n    const groundColor = useStore(state => state.groundColor);\r\n    const planeRef = useRef();\r\n\r\n    const selectNone = () => {\r\n        set((state) => {\r\n            const w = state.worlds['default'];\r\n            if (w) {\r\n                for (const e of w.elements) {\r\n                    e.selected = false;\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Plane receiveShadow\r\n               ref={planeRef}\r\n               name={'Ground'}\r\n               onClick={(e) => {\r\n                   if (e.intersections.length > 0) {\r\n                       const groundClicked = e.intersections[0].object === planeRef.current;\r\n                       if (groundClicked) {\r\n                           selectNone();\r\n                       }\r\n                   }\r\n               }}\r\n               rotation={[-Math.PI / 2, 0, 0]}\r\n               position={[0, 0, 1]}\r\n               args={[10000, 10000]}>\r\n            <meshStandardMaterial side={DoubleSide}\r\n                                  attach=\"material\"\r\n                                  color={groundColor}/>\r\n        </Plane>\r\n    )\r\n};\r\n\r\nexport default Ground;\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport {Vector3} from \"three\";\r\n\r\nexport class Util {\r\n\r\n    static get UNIT_VECTOR_POS_X() {\r\n        return new Vector3(1, 0, 0);\r\n    }\r\n\r\n    static get UNIT_VECTOR_NEG_X() {\r\n        return new Vector3(-1, 0, 0);\r\n    }\r\n\r\n    static get UNIT_VECTOR_POS_Y() {\r\n        return new Vector3(0, 1, 0);\r\n    }\r\n\r\n    static get UNIT_VECTOR_NEG_Y() {\r\n        return new Vector3(0, -1, 0);\r\n    }\r\n\r\n    static get UNIT_VECTOR_POS_Z() {\r\n        return new Vector3(0, 0, 1);\r\n    }\r\n\r\n    static get UNIT_VECTOR_NEG_Z() {\r\n        return new Vector3(0, 0, -1);\r\n    }\r\n\r\n    static get ZERO_TOLERANCE() {\r\n        return 0.0001;\r\n    }\r\n\r\n    static get HALF_PI() {\r\n        return Math.PI / 2;\r\n    }\r\n\r\n    static get TWO_PI() {\r\n        return Math.PI * 2;\r\n    }\r\n\r\n    static toRadians(degrees: number) {\r\n        return degrees * (Math.PI / 180);\r\n    }\r\n\r\n    static toDegrees(radians: number) {\r\n        return radians * (180 / Math.PI);\r\n    }\r\n\r\n    static sphericalToCartesianZ(sphereCoords: THREE.Vector3) {\r\n        let a = sphereCoords.x * Math.cos(sphereCoords.z);\r\n        let x = a * Math.cos(sphereCoords.y);\r\n        let y = a * Math.sin(sphereCoords.y);\r\n        let z = sphereCoords.x * Math.sin(sphereCoords.z);\r\n        sphereCoords.set(x, y, z);\r\n        return sphereCoords;\r\n    }\r\n\r\n}\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport {Util} from \"../util\";\r\nimport {Vector3} from \"three\";\r\n\r\nexport const TILT_ANGLE = 23.45 / 180.0 * Math.PI;\r\n\r\nexport const computeDeclinationAngle = (date: Date) => {\r\n    const days = Math.floor((date.getTime()\r\n        - new Date(date.getFullYear(), 0, 0).getTime()) / (1000 * 60 * 60 * 24));\r\n    return TILT_ANGLE * Math.sin(Util.TWO_PI * (284 + days) / 365.25);\r\n};\r\n\r\nexport const computeHourAngle = (date: Date) => {\r\n    const minutes = date.getHours() * 60 + date.getMinutes() - 12 * 60;\r\n    return minutes / (12.0 * 60.0) * Math.PI;\r\n}\r\n\r\nexport const computeSunLocation = (radius: number,\r\n                                   hourAngle: number,\r\n                                   declinationAngle: number,\r\n                                   observerLatitude: number) => {\r\n    const altitudeAngle = Math.asin(\r\n        Math.sin(declinationAngle) * Math.sin(observerLatitude) +\r\n        Math.cos(declinationAngle) * Math.cos(hourAngle) * Math.cos(observerLatitude)\r\n    );\r\n    const xAzm = Math.sin(hourAngle) * Math.cos(declinationAngle);\r\n    const yAzm = Math.cos(observerLatitude) * Math.sin(declinationAngle)\r\n        - Math.cos(hourAngle) * Math.cos(declinationAngle) * Math.sin(observerLatitude);\r\n    const azimuthAngle = Math.atan2(yAzm, xAzm);\r\n    const coords = new Vector3(radius, azimuthAngle, altitudeAngle);\r\n    Util.sphericalToCartesianZ(coords);\r\n    // reverse the x so that sun moves from east to west\r\n    coords.setX(-coords.x);\r\n    return coords;\r\n};\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport {Util} from \"../util\";\r\nimport React, {useEffect, useMemo} from \"react\";\r\nimport {\r\n    BufferAttribute,\r\n    BufferGeometry,\r\n    Color,\r\n    DoubleSide,\r\n    Euler,\r\n    MeshBasicMaterial,\r\n    Plane,\r\n    SphereGeometry,\r\n    Vector3\r\n} from \"three\";\r\nimport {\r\n    computeDeclinationAngle,\r\n    computeSunLocation,\r\n    TILT_ANGLE\r\n} from \"./sunTools\";\r\nimport {Line} from \"@react-three/drei\";\r\n\r\nexport interface HeliodonProps {\r\n    radius: number;\r\n    hourAngle: number;\r\n    declinationAngle: number;\r\n    date: Date;\r\n    latitude: number; // in radian\r\n\r\n    [key: string]: any;\r\n}\r\n\r\nconst HOUR_DIVISIONS = 96;\r\nconst BASE_DIVISIONS = 72;\r\nconst DECLINATION_DIVISIONS = 12;\r\n\r\nconst Heliodon = ({\r\n                      hourAngle,\r\n                      declinationAngle,\r\n                      radius = 10,\r\n                      date = new Date(),\r\n                      latitude = 42 / 180.0 * Math.PI,\r\n                  }: HeliodonProps) => {\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            // remove listeners if any\r\n        }\r\n    }, [date, latitude]);\r\n\r\n    const nRibLines = 5;\r\n\r\n    const [basePositions, baseNormals, baseColors, tickPoints] = useMemo(() => {\r\n        const basePoints: Vector3[] = [];\r\n        const tickPoints: Vector3[] = [];\r\n        const step = Math.PI * 2 / BASE_DIVISIONS;\r\n        let counter = 0;\r\n        for (let angle = 0; angle < Util.TWO_PI + step / 2.0; angle += step) {\r\n            const theta = Math.min(angle, Util.TWO_PI);\r\n            let width = 0.05 * radius;\r\n            // TODO: This is inefficient. We should use indexed buffer to share vertices\r\n            basePoints.push(Util.sphericalToCartesianZ(new Vector3(radius, theta, 0)));\r\n            basePoints.push(Util.sphericalToCartesianZ(new Vector3(radius + width, theta, 0)));\r\n            basePoints.push(Util.sphericalToCartesianZ(new Vector3(radius, theta + step, 0)));\r\n            basePoints.push(Util.sphericalToCartesianZ(new Vector3(radius + width, theta, 0)));\r\n            basePoints.push(Util.sphericalToCartesianZ(new Vector3(radius + width, theta + step, 0)));\r\n            basePoints.push(Util.sphericalToCartesianZ(new Vector3(radius, theta + step, 0)));\r\n            let p;\r\n            if (Util.TWO_PI - theta > Util.ZERO_TOLERANCE) {\r\n                width = 0.05 * radius + (counter % 3 === 0 ? 0.2 : 0);\r\n                p = new Vector3(radius, theta, 0);\r\n                p.z = 0.002;\r\n                tickPoints.push(Util.sphericalToCartesianZ(p));\r\n                p = new Vector3(radius + width, theta, 0);\r\n                p.z = 0.002;\r\n                tickPoints.push(Util.sphericalToCartesianZ(p));\r\n            }\r\n            counter++;\r\n        }\r\n\r\n        // attributes\r\n        const length = basePoints.length * 3;\r\n        const basePositions = new Float32Array(length);\r\n        const baseNormals = new Float32Array(length);\r\n        const baseColors = new Float32Array(length);\r\n\r\n        for (let i = 0; i < basePoints.length; i++) {\r\n            const j = i * 3;\r\n            basePositions[j] = basePoints[i].x;\r\n            basePositions[j + 1] = basePoints[i].y;\r\n            basePositions[j + 2] = basePoints[i].z;\r\n            baseNormals[j] = 0;\r\n            baseNormals[j + 1] = 1;\r\n            baseNormals[j + 2] = 0;\r\n            const c = (Math.floor(i / 18)) % 2 === 0 ? 0.2 : 1.0;\r\n            baseColors[j] = c;\r\n            baseColors[j + 1] = c;\r\n            baseColors[j + 2] = c;\r\n        }\r\n\r\n        return [basePositions, baseNormals, baseColors, tickPoints];\r\n    }, [radius]);\r\n\r\n    const sunPathPoints = useMemo(() => {\r\n        const step = Util.TWO_PI / HOUR_DIVISIONS;\r\n        const points = [];\r\n        for (let h = -Math.PI; h < Math.PI + step / 2.0; h += step) {\r\n            const v = computeSunLocation(radius, h, declinationAngle, latitude);\r\n            if (v.z > -0.1) {\r\n                points.push(v);\r\n            }\r\n        }\r\n        return points;\r\n    }, [latitude, radius, declinationAngle]);\r\n\r\n    const getSunPathPointsByDate = (d: number) => {\r\n        const step = Util.TWO_PI / HOUR_DIVISIONS;\r\n        const points = [];\r\n        for (let h = -Math.PI; h < Math.PI + step / 2.0; h += step) {\r\n            const v = computeSunLocation(radius, h, d, latitude);\r\n            if (v.z > -0.1) {\r\n                points.push(v);\r\n            }\r\n        }\r\n        return points;\r\n    };\r\n\r\n    const pointArraySunPaths = useMemo(() => {\r\n        const dMin = computeDeclinationAngle(new Date(2021, 11, 22));\r\n        const dMax = computeDeclinationAngle(new Date(2021, 5, 22));\r\n        const delta = (dMax - dMin) / nRibLines;\r\n        const arr = [];\r\n        for (let i = 0; i <= nRibLines; i++) {\r\n            arr.push(getSunPathPointsByDate(dMin + i * delta));\r\n        }\r\n        return arr;\r\n    }, [latitude, radius]);\r\n\r\n    const sunPosition = useMemo(() => {\r\n        return computeSunLocation(radius, hourAngle, declinationAngle, latitude);\r\n    }, [latitude, declinationAngle, hourAngle, radius]);\r\n\r\n    const sunbeltGeometry = useMemo(() => {\r\n        const declinationStep = 2.0 * TILT_ANGLE / DECLINATION_DIVISIONS;\r\n        const hourStep = Util.TWO_PI / HOUR_DIVISIONS;\r\n        const geometry = new BufferGeometry();\r\n        let verticesCount = 0;\r\n        const vertices: Vector3[] = [];\r\n        const indices = [];\r\n        for (let d = -TILT_ANGLE; d < TILT_ANGLE - declinationStep / 2.0; d += declinationStep) {\r\n            for (let h = -Math.PI; h < Math.PI - hourStep / 2.0; h += hourStep) {\r\n                let h2 = h + hourStep;\r\n                let d2 = d + declinationStep;\r\n                if (h2 > Math.PI) {\r\n                    h2 = Math.PI;\r\n                }\r\n                if (d2 > TILT_ANGLE) {\r\n                    d2 = TILT_ANGLE;\r\n                }\r\n                const v1 = computeSunLocation(radius, h, d, latitude);\r\n                const v2 = computeSunLocation(radius, h2, d, latitude);\r\n                const v3 = computeSunLocation(radius, h2, d2, latitude);\r\n                const v4 = computeSunLocation(radius, h, d2, latitude);\r\n                if (v1.z >= 0 || v2.z >= 0 || v3.z >= 0 || v4.z >= 0) {\r\n                    vertices.push(v1, v2, v3, v4);\r\n                    indices.push(verticesCount);\r\n                    indices.push(verticesCount + 1);\r\n                    indices.push(verticesCount + 2);\r\n                    indices.push(verticesCount);\r\n                    indices.push(verticesCount + 2);\r\n                    indices.push(verticesCount + 3);\r\n                    verticesCount += 4;\r\n                }\r\n            }\r\n        }\r\n        geometry.setFromPoints(vertices);\r\n        geometry.setIndex(new BufferAttribute(new Uint16Array(indices), 1));\r\n        return geometry;\r\n    }, [latitude, radius]);\r\n\r\n    return (\r\n        <mesh rotation={new Euler(-Math.PI / 2, 0, 0)}>\r\n            {/* draw base */}\r\n            <mesh>\r\n                <bufferGeometry attach='geometry'>\r\n                    <bufferAttribute\r\n                        attachObject={[\"attributes\", \"position\"]}\r\n                        count={basePositions.length / 3}\r\n                        array={basePositions}\r\n                        itemSize={3}\r\n                    />\r\n                    <bufferAttribute\r\n                        attachObject={[\"attributes\", \"normal\"]}\r\n                        count={baseNormals.length / 3}\r\n                        array={baseNormals}\r\n                        itemSize={3}\r\n                    />\r\n                    <bufferAttribute\r\n                        attachObject={[\"attributes\", \"color\"]}\r\n                        count={baseColors.length / 3}\r\n                        array={baseColors}\r\n                        itemSize={3}\r\n                    />\r\n                </bufferGeometry>\r\n                <meshBasicMaterial side={DoubleSide}\r\n                                   vertexColors={true}\r\n                                   polygonOffset={true}\r\n                                   polygonOffsetFactor={-0.7}\r\n                                   polygonOffsetUnits={-2}/>\r\n            </mesh>\r\n            <lineSegments\r\n                args={[new BufferGeometry().setFromPoints(tickPoints),\r\n                    new MeshBasicMaterial({color: 0x000000})]}/>\r\n            {/* draw sun path*/}\r\n            <mesh>\r\n                {sunPathPoints.length > 3 && <Line lineWidth={2} points={sunPathPoints} color={'yellow'}/>}\r\n                {pointArraySunPaths\r\n                    .filter(a => a.length > 3)\r\n                    .map((a, index) => {\r\n                        return <Line key={index}\r\n                                     opacity={index === 0 || index === nRibLines ? 1 : 0.5}\r\n                                     lineWidth={index === 0 || index === nRibLines ? 1 : 0.5}\r\n                                     points={a}\r\n                                     color={'#999'}/>;\r\n                    })\r\n                }\r\n                <mesh\r\n                    args={[sunbeltGeometry,\r\n                        new MeshBasicMaterial({\r\n                            side: DoubleSide,\r\n                            color: new Color(1, 1, 0),\r\n                            transparent: true,\r\n                            opacity: 0.5,\r\n                            clippingPlanes: [new Plane(Util.UNIT_VECTOR_POS_Y, 0)]\r\n                        })\r\n                    ]}\r\n                />\r\n                <mesh\r\n                    position={sunPosition}\r\n                    args={[new SphereGeometry(0.25, 20, 20),\r\n                        new MeshBasicMaterial({color: 0xffffff00})\r\n                    ]}\r\n                />\r\n            </mesh>\r\n        </mesh>\r\n    );\r\n\r\n};\r\n\r\nexport default Heliodon;\r\n","export default __webpack_public_path__ + \"static/media/house.bec5806a.mtl\";","export default __webpack_public_path__ + \"static/media/house.1682689d.obj\";","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport React, {useRef} from \"react\";\r\nimport {useLoader} from '@react-three/fiber'\r\nimport {OBJLoader} from \"three/examples/jsm/loaders/OBJLoader\";\r\nimport {Group, Mesh} from \"three\";\r\nimport {MTLLoader} from \"three/examples/jsm/loaders/MTLLoader\";\r\nimport sampleMtl from '../assets/house.mtl';\r\nimport sampleObj from '../assets/house.obj';\r\n\r\nexport interface SampleProps {\r\n    scale?: number;\r\n\r\n    [key: string]: any;\r\n}\r\n\r\nconst Sample = ({\r\n                    scale = 0.5,\r\n                    ...props\r\n                }: SampleProps) => {\r\n\r\n    const mesh = useRef<Mesh>(null!);\r\n\r\n    const material = useLoader(MTLLoader, sampleMtl) as MTLLoader.MaterialCreator;\r\n    const model = useLoader(OBJLoader, sampleObj, loader => {\r\n        material.preload();\r\n        // @ts-ignore\r\n        loader.setMaterials(material);\r\n    }) as Group;\r\n\r\n    if (model) {\r\n        model.castShadow = true;\r\n        model.receiveShadow = true;\r\n        model.traverse((children) => {\r\n            if (children instanceof Mesh) {\r\n                children.castShadow = true;\r\n                children.receiveShadow = true;\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <mesh\r\n            {...props}\r\n            ref={mesh}\r\n            position={[-3, 0, 3]}\r\n        >\r\n            <primitive object={model} scale={scale}/>\r\n        </mesh>\r\n    );\r\n};\r\n\r\nexport default Sample;\r\n","export default __webpack_public_path__ + \"static/media/aladdin-logo.96b59d24.png\";","export default __webpack_public_path__ + \"static/media/ifi-logo.eb360016.png\";","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport React from 'react';\r\nimport {useStore} from \"./stores/common\";\r\nimport styled from 'styled-components';\r\nimport {Menu, Dropdown, Space, Checkbox} from 'antd';\r\nimport {ReactComponent as MenuSVG} from './assets/menu.svg';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst StyledMenuSVG = styled(MenuSVG)`\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 10px;\r\n  height: 40px;\r\n  width: 40px;\r\n  transition: 0.5s;\r\n  fill: brown;\r\n\r\n  &:hover {\r\n    fill: white;\r\n  }\r\n`;\r\n\r\nconst MainMenu = () => {\r\n\r\n    const set = useStore(state => state.set);\r\n    const showSceneSettings = useStore(state => state.showSceneSettings);\r\n    const showSolarSettings = useStore(state => state.showSolarSettings);\r\n\r\n    // @ts-ignore\r\n    const onChangeShowSceneSettings = (e) => {\r\n        set((state) => {\r\n            state.showSceneSettings = e.target.checked;\r\n        });\r\n    };\r\n\r\n    // @ts-ignore\r\n    const onChangeShowSolarSettings = (e) => {\r\n        set((state) => {\r\n            state.showSolarSettings = e.target.checked;\r\n        });\r\n    };\r\n\r\n    const menu = (\r\n        <Menu>\r\n            <Menu.Item key={'scene-settings-switch'}>\r\n                <Space>\r\n                    <Checkbox checked={showSceneSettings} onChange={onChangeShowSceneSettings}>\r\n                        Scene Settings\r\n                    </Checkbox>\r\n                </Space>\r\n            </Menu.Item>\r\n            <Menu.Item key={'solar-settings-switch'}>\r\n                <Space>\r\n                    <Checkbox checked={showSolarSettings} onChange={onChangeShowSolarSettings}>\r\n                        Solar Settings\r\n                    </Checkbox>\r\n                </Space>\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <Dropdown overlay={menu} trigger={['click']}>\r\n            <StyledMenuSVG/>\r\n        </Dropdown>\r\n    );\r\n};\r\n\r\nexport default MainMenu;\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport React, {memo, useCallback, useState} from \"react\";\r\nimport {GoogleMap, useJsApiLoader} from '@react-google-maps/api';\r\nimport {useStore} from \"./stores/common\";\r\n\r\nexport interface MapsProp {\r\n\r\n    setLatitude?: (value: number) => void;\r\n    setLongitude?: (value: number) => void;\r\n    setZoom?: (value: number) => void;\r\n    setTilt?: (value: number) => void;\r\n    setType?: (value: string) => void;\r\n\r\n}\r\n\r\nconst containerStyle = {\r\n    width: '400px',\r\n    height: '400px'\r\n};\r\n\r\nconst Maps = ({\r\n                  setLatitude,\r\n                  setLongitude,\r\n                  setZoom,\r\n                  setTilt,\r\n                  setType,\r\n              }: MapsProp) => {\r\n\r\n    const latitude = useStore(state => state.latitude);\r\n    const longitude = useStore(state => state.longitude);\r\n    const zoom = useStore(state => state.mapZoom);\r\n    const type = useStore(state => state.mapType);\r\n    const tilt = useStore(state => state.mapTilt);\r\n    const [map, setMap] = useState<google.maps.Map | null>(null);\r\n\r\n    const {isLoaded} = useJsApiLoader({\r\n        id: 'google-map-script',\r\n        googleMapsApiKey: process.env.REACT_APP_MAPS_API_KEY as string\r\n    });\r\n\r\n    const onLoad = useCallback((map: google.maps.Map) => {\r\n        setMap(map);\r\n    }, []);\r\n\r\n    const onUnmount = useCallback(function callback(map) {\r\n        setMap(null);\r\n    }, []);\r\n\r\n    const onCenterChanged = () => {\r\n        if (map) {\r\n            const center = map.getCenter();\r\n            const lat = center.lat();\r\n            if (lat !== latitude) {\r\n                setLatitude?.(lat);\r\n            }\r\n            const lng = center.lng();\r\n            if (lng !== longitude) {\r\n                setLongitude?.(lng);\r\n            }\r\n        }\r\n    };\r\n\r\n    const onZoomChanged = () => {\r\n        if (map) {\r\n            const z = map.getZoom();\r\n            if (z !== zoom) {\r\n                setZoom?.(z);\r\n            }\r\n        }\r\n    };\r\n\r\n    const onTiltChanged = () => {\r\n        if (map) {\r\n            const t = map.getTilt();\r\n            if (t !== tilt) {\r\n                setTilt?.(t);\r\n            }\r\n        }\r\n    };\r\n\r\n    const onMapTypeIdChanged = () => {\r\n        if (map) {\r\n            const typeId = map.getMapTypeId();\r\n            if (typeId !== type) {\r\n                setType?.(typeId);\r\n            }\r\n        }\r\n    };\r\n\r\n    const latLng = {lat: latitude, lng: longitude};\r\n\r\n    return isLoaded ? (\r\n        <GoogleMap\r\n            mapContainerStyle={containerStyle}\r\n            mapTypeId={type}\r\n            center={latLng}\r\n            zoom={zoom}\r\n            tilt={tilt}\r\n            onLoad={onLoad}\r\n            onUnmount={onUnmount}\r\n            onCenterChanged={onCenterChanged}\r\n            onZoomChanged={onZoomChanged}\r\n            onTiltChanged={onTiltChanged}\r\n            onMapTypeIdChanged={onMapTypeIdChanged}\r\n        >\r\n            { /* Child components, such as markers, info windows, etc. */}\r\n            <></>\r\n        </GoogleMap>\r\n    ) : <></>\r\n};\r\n\r\nexport default memo(Maps);\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport React, {useRef} from 'react';\r\nimport {useStore} from \"./stores/common\";\r\nimport styled from 'styled-components';\r\nimport {Space, Switch} from \"antd\";\r\nimport {CompactPicker} from 'react-color';\r\nimport Maps from \"./maps\";\r\nimport {LoadScript, StandaloneSearchBox} from \"@react-google-maps/api\";\r\nimport {Libraries} from \"@react-google-maps/api/dist/utils/make-load-script-url\";\r\nimport 'antd/dist/antd.css';\r\n\r\nconst libraries = ['places'] as Libraries;\r\n\r\nconst Container = styled.div`\r\n  position: fixed;\r\n  top: 10px;\r\n  left: 10px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 16px;\r\n  z-index: 9;\r\n`;\r\n\r\nconst ColumnWrapper = styled.div`\r\n  background-color: #f8f8f8;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  width: 420px;\r\n  padding-bottom: 10px;\r\n  border: 2px solid gainsboro;\r\n  border-radius: 10px 10px 10px 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  border-radius: 10px 10px 0 0;\r\n  width: 100%;\r\n  height: 24px;\r\n  padding: 10px;\r\n  background-color: #e8e8e8;\r\n  color: #888;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  svg.icon {\r\n    height: 16px;\r\n    width: 16px;\r\n    padding: 8px;\r\n    fill: #666;\r\n  }\r\n`;\r\n\r\nexport interface SceneSettingsPanelProps {\r\n    axes: boolean;\r\n    grid: boolean;\r\n    groundColor: string;\r\n    setAxes?: (on: boolean) => void;\r\n    setGrid?: (on: boolean) => void;\r\n    setGroundColor?: (color: string) => void;\r\n    changeLatitude?: (latitude: number) => void;\r\n    changeLongitude?: (longitude: number) => void;\r\n    changeMapZoom?: (zoom: number) => void;\r\n    changeMapTilt?: (tilt: number) => void;\r\n    changeMapType?: (type: string) => void;\r\n}\r\n\r\nconst SceneSettingsPanel = ({\r\n                                grid,\r\n                                axes,\r\n                                groundColor,\r\n                                setGrid,\r\n                                setAxes,\r\n                                setGroundColor,\r\n                                changeLatitude,\r\n                                changeLongitude,\r\n                                changeMapZoom,\r\n                                changeMapTilt,\r\n                                changeMapType,\r\n                            }: SceneSettingsPanelProps) => {\r\n\r\n    const set = useStore(state => state.set);\r\n    const latitude = useStore(state => state.latitude);\r\n    const longitude = useStore(state => state.longitude);\r\n    const mapZoom = useStore(state => state.mapZoom);\r\n    const address = useStore(state => state.address);\r\n    const searchBox = useRef<google.maps.places.SearchBox>();\r\n\r\n    const onPlacesChanged = () => {\r\n        const places = searchBox.current?.getPlaces();\r\n        if (places && places.length > 0) {\r\n            set((state) => {\r\n                const geometry = places[0].geometry;\r\n                if (geometry) {\r\n                    state.latitude = geometry.location.lat();\r\n                    state.longitude = geometry.location.lng();\r\n                }\r\n                state.address = places[0].formatted_address as string;\r\n            });\r\n        }\r\n    };\r\n\r\n    const onLoad = (s: google.maps.places.SearchBox) => {\r\n        searchBox.current = s;\r\n    };\r\n\r\n    return (\r\n        <LoadScript id=\"script-loader\" googleMapsApiKey={process.env.REACT_APP_MAPS_API_KEY as string}\r\n                    libraries={libraries}>\r\n            <Container>\r\n                <ColumnWrapper>\r\n                    <Header>\r\n                        <span>Scene Settings</span>\r\n                        <span style={{cursor: 'pointer'}} onClick={() => {\r\n                            set((state) => {\r\n                                state.showSceneSettings = false;\r\n                            });\r\n                        }}>Close</span>\r\n                    </Header>\r\n                    <Space direction={'vertical'}>\r\n                        <Space style={{padding: '20px'}} align={'baseline'} size={20}>\r\n                            <Space direction={'vertical'}>\r\n                                <div>\r\n                                    Axes<br/>\r\n                                    <Switch checked={axes} onChange={(checked) => {\r\n                                        setAxes?.(checked);\r\n                                    }}/>\r\n                                </div>\r\n                                <div>\r\n                                    Grid<br/>\r\n                                    <Switch checked={grid} onChange={(checked) => {\r\n                                        setGrid?.(checked);\r\n                                    }}/>\r\n                                </div>\r\n                            </Space>\r\n                            <div>\r\n                                Ground Color<br/>\r\n                                <CompactPicker color={groundColor} onChangeComplete={(colorResult) => {\r\n                                    setGroundColor?.(colorResult.hex);\r\n                                }}/>\r\n                            </div>\r\n                        </Space>\r\n                        <Space>\r\n                            <div>\r\n                                <StandaloneSearchBox onLoad={onLoad}\r\n                                                     onPlacesChanged={onPlacesChanged}>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder={address}\r\n                                        style={{\r\n                                            boxSizing: `border-box`,\r\n                                            border: `1px solid transparent`,\r\n                                            width: `400px`,\r\n                                            height: `32px`,\r\n                                            padding: `0 12px`,\r\n                                            borderRadius: `3px`,\r\n                                            boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\r\n                                            fontSize: `14px`,\r\n                                            outline: `none`,\r\n                                            textOverflow: `ellipses`,\r\n                                            position: \"relative\"\r\n                                        }}\r\n                                    />\r\n                                </StandaloneSearchBox>\r\n                            </div>\r\n                        </Space>\r\n                        <Space>\r\n                            <div>\r\n                                <Maps setLatitude={changeLatitude}\r\n                                      setLongitude={changeLongitude}\r\n                                      setZoom={changeMapZoom}\r\n                                      setTilt={changeMapTilt}\r\n                                      setType={changeMapType}\r\n                                />\r\n                                Coordinates: ({latitude.toFixed(2)}°, {longitude.toFixed(2)}°),\r\n                                Zoom: {mapZoom}\r\n                            </div>\r\n                        </Space>\r\n                    </Space>\r\n                </ColumnWrapper>\r\n            </Container>\r\n        </LoadScript>\r\n    );\r\n};\r\n\r\nexport default SceneSettingsPanel;\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport React, {useEffect, useRef} from 'react';\r\nimport {useStore} from \"./stores/common\";\r\nimport styled from 'styled-components';\r\nimport {Space, Switch, Slider, DatePicker, TimePicker} from \"antd\";\r\nimport moment from 'moment';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst Container = styled.div`\r\n  position: fixed;\r\n  top: 10px;\r\n  left: 10px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 16px;\r\n  z-index: 9;\r\n`;\r\n\r\nconst ColumnWrapper = styled.div`\r\n  background-color: #f8f8f8;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  width: 640px;\r\n  padding: 0;\r\n  border: 2px solid gainsboro;\r\n  border-radius: 10px 10px 10px 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  border-radius: 10px 10px 0 0;\r\n  width: 100%;\r\n  height: 24px;\r\n  padding: 10px;\r\n  background-color: #e8e8e8;\r\n  color: #888;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  svg.icon {\r\n    height: 16px;\r\n    width: 16px;\r\n    padding: 8px;\r\n    fill: #666;\r\n  }\r\n`;\r\n\r\nexport interface SolarSettingsPanelProps {\r\n    heliodon: boolean;\r\n    latitude: number;\r\n    date: Date;\r\n    animateSun?: boolean;\r\n    setHeliodon?: (on: boolean) => void;\r\n    setSunAnimation?: (on: boolean) => void;\r\n    changeLatitude?: (latitude: number) => void;\r\n    changeDate?: (date: Date) => void;\r\n    changeTime?: (date: Date) => void;\r\n}\r\n\r\nconst SolarSettingsPanel = ({\r\n                                heliodon,\r\n                                latitude,\r\n                                date,\r\n                                animateSun,\r\n                                setHeliodon,\r\n                                setSunAnimation,\r\n                                changeLatitude,\r\n                                changeDate,\r\n                                changeTime,\r\n                            }: SolarSettingsPanelProps) => {\r\n\r\n    const set = useStore(state => state.set);\r\n    const requestRef = useRef<number>(0);\r\n    const previousFrameTime = useRef<number>(-1);\r\n\r\n    useEffect(() => {\r\n        requestRef.current = requestAnimationFrame(animate);\r\n        return () => {\r\n            cancelAnimationFrame(requestRef.current);\r\n        }\r\n    }, [animateSun]);\r\n\r\n    const animate = () => {\r\n        if (animateSun) {\r\n            requestRef.current = requestAnimationFrame(animate);\r\n            const currentFrameTime = Date.now();\r\n            if (currentFrameTime - previousFrameTime.current > 100) {\r\n                const day = date.getDate();\r\n                date.setHours(date.getHours(), date.getMinutes() + 15);\r\n                date.setDate(day)\r\n                changeTime?.(date);\r\n                previousFrameTime.current = currentFrameTime;\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <ColumnWrapper>\r\n                <Header>\r\n                    <span>Solar Settings</span>\r\n                    <span style={{cursor: 'pointer'}} onClick={() => {\r\n                        set((state) => {\r\n                            state.showSolarSettings = false;\r\n                        });\r\n                    }}>Close</span>\r\n                </Header>\r\n                <Space style={{padding: '20px'}} align={'baseline'} size={20}>\r\n                    <div>\r\n                        Heliodon<br/>\r\n                        <Switch checked={heliodon} onChange={(checked) => {\r\n                            setHeliodon?.(checked);\r\n                        }}/>\r\n                    </div>\r\n                    <div>\r\n                        Animate<br/>\r\n                        <Switch checked={animateSun} onChange={(checked) => {\r\n                            setSunAnimation?.(checked);\r\n                        }}/>\r\n                    </div>\r\n                    <div>\r\n                        Date<br/>\r\n                        <DatePicker value={moment(date)}\r\n                                    onChange={(moment) => {\r\n                                        if (moment) changeDate?.(moment.toDate());\r\n                                    }}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        Time<br/>\r\n                        <TimePicker value={moment(date, 'HH:mm')}\r\n                                    format={'HH:mm'}\r\n                                    onChange={(moment) => {\r\n                                        if (moment) changeTime?.(moment.toDate());\r\n                                    }}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        Latitude: {latitude.toFixed(4)}°\r\n                        <Slider\r\n                            style={{width: '150px'}}\r\n                            marks={{'-90': '-90°', 0: '0°', 90: '90°'}}\r\n                            min={-90}\r\n                            max={90}\r\n                            tooltipVisible={false}\r\n                            defaultValue={latitude}\r\n                            onChange={(value: number) => {\r\n                                changeLatitude?.(value);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </Space>\r\n            </ColumnWrapper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default SolarSettingsPanel;\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport {message} from \"antd\";\r\n\r\nexport const visitIFI = () => {\r\n    window.open(\"https://intofuture.org\", '_blank');\r\n};\r\n\r\nexport const showSuccess = (msg: string) => {\r\n    message.success({\r\n        content: msg,\r\n        className: 'custom-class',\r\n        style: {\r\n            marginTop: '20vh',\r\n        },\r\n        onClick: () => {\r\n            message.destroy();\r\n        }\r\n    });\r\n};\r\n\r\nexport const showInfo = (msg: string) => {\r\n    message.info({\r\n        content: msg,\r\n        className: 'custom-class',\r\n        style: {\r\n            marginTop: '20vh',\r\n        },\r\n        onClick: () => {\r\n            message.destroy();\r\n        }\r\n    });\r\n};\r\n\r\nexport const showWarning = (msg: string) => {\r\n    message.warning({\r\n        content: msg,\r\n        className: 'custom-class',\r\n        style: {\r\n            marginTop: '20vh',\r\n        },\r\n        onClick: () => {\r\n            message.destroy();\r\n        }\r\n    });\r\n};\r\n\r\nexport const showError = (msg: string) => {\r\n    message.error({\r\n        content: msg,\r\n        className: 'custom-class',\r\n        style: {\r\n            marginTop: '20vh',\r\n        },\r\n        onClick: () => {\r\n            message.destroy();\r\n        }\r\n    });\r\n};\r\n\r\nexport const fahrenheitToCelsius = (temp: number) => {\r\n    return ((temp - 32) * 5) / 9;\r\n};\r\n\r\nexport const celsiusToFahrenheit = (temp: number) => {\r\n    return temp * (9 / 5) + 32;\r\n};\r\n\r\nexport const openInNewTab = (url: string) => {\r\n    const win = window.open(url, '_blank');\r\n    if (win) {\r\n        win.focus();\r\n    }\r\n};\r\n\r\nexport const extractText = (html: string) => {\r\n    return new DOMParser().parseFromString(html, \"text/html\").documentElement.textContent;\r\n};\r\n\r\nexport const containedInDOMRect = (rect: DOMRect, x: number, y: number, margin: number) => {\r\n    return x > rect.x - margin && x < rect.x + rect.width + margin\r\n        && y > rect.y - margin && y < rect.y + rect.height + margin;\r\n};\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport React from 'react';\r\nimport CookieConsent from \"react-cookie-consent\";\r\n\r\nconst AcceptCookie = () => {\r\n    return <CookieConsent\r\n        location=\"bottom\"\r\n        buttonText=\"Accept\"\r\n        cookieName=\"AladdinCookieName\"\r\n        style={{background: \"#2B373B\", textAlign: 'center', zIndex: 99999}}\r\n        buttonStyle={{color: \"#4e503b\", fontSize: \"12px\"}}\r\n        expires={150}\r\n    >\r\n        By clicking Accept, you agree to our use of cookies to improve your experience with Aladdin.\r\n    </CookieConsent>;\r\n};\r\n\r\nexport default AcceptCookie;\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n *\r\n * @author Charles Xie\r\n */\r\n\r\nimport React, {Suspense, useEffect, useMemo, useState} from 'react';\r\nimport './App.css';\r\nimport {Canvas} from '@react-three/fiber';\r\nimport OrbitController from \"./orbitController\";\r\nimport Sky from \"./views/sky\";\r\nimport Axes from \"./views/axes\";\r\nimport Compass from \"./views/compass\";\r\nimport Scene from \"./scene\";\r\nimport Ground from \"./views/ground\";\r\nimport {useStore} from \"./stores/common\";\r\nimport {Euler, Vector3} from \"three\";\r\nimport Heliodon from \"./views/heliodon\";\r\nimport {Util} from \"./util\";\r\nimport {computeDeclinationAngle, computeHourAngle, computeSunLocation} from \"./views/sunTools\";\r\nimport Sample from \"./views/sample\";\r\nimport aladdinLogo from './assets/aladdin-logo.png';\r\nimport ifiLogo from './assets/ifi-logo.png';\r\nimport MainMenu from \"./mainMenu\";\r\nimport SceneSettingsPanel from \"./sceneSettingsPanel\";\r\nimport SolarSettingsPanel from \"./solarSettingsPanel\";\r\nimport {VERSION} from \"./constants\";\r\nimport {visitIFI} from \"./helpers\";\r\nimport AcceptCookie from \"./acceptCookie\";\r\n\r\nconst App = () => {\r\n\r\n    const setCommonStore = useStore(state => state.set);\r\n    const worlds = useStore(state => state.worlds);\r\n    const getWorld = useStore(state => state.getWorld);\r\n    const createNewWorld = useStore(state => state.createNewWorld);\r\n\r\n    const showSceneSettings = useStore(state => state.showSceneSettings);\r\n    const showSolarSettings = useStore(state => state.showSolarSettings);\r\n\r\n    const axes = useStore(state => state.axes);\r\n    const grid = useStore(state => state.grid);\r\n    const groundColor = useStore(state => state.groundColor);\r\n    const heliodon = useStore(state => state.heliodon);\r\n    const latitude = useStore(state => state.latitude);\r\n    const now = new Date(useStore(state => state.date));\r\n\r\n    const [hourAngle, setHourAngle] = useState<number>(0);\r\n    const [declinationAngle, setDeclinationAngle] = useState<number>(0);\r\n    const [sunlightDirection, setSunlightDirection] = useState<Vector3>(new Vector3(0, 2, 2));\r\n    const [animateSun, setAnimateSun] = useState<boolean>(false);\r\n\r\n    const world = worlds['default']; // currently we have only one world, which is default\r\n    const radius = 10;\r\n\r\n    useEffect(() => {\r\n        const defaultWorld = getWorld('default');\r\n        if (!defaultWorld) {\r\n            createNewWorld();\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        setSunlightDirection(computeSunLocation(radius, hourAngle, declinationAngle, Util.toRadians(latitude))\r\n            .applyEuler(new Euler(-Math.PI / 2, 0, 0)));\r\n    }, [latitude, hourAngle, declinationAngle]);\r\n\r\n    const nowString = now.toString();\r\n    useMemo(() => {\r\n        setHourAngle(computeHourAngle(now));\r\n        setDeclinationAngle(computeDeclinationAngle(now));\r\n    }, [nowString]);\r\n\r\n    const cameraPosition = new Vector3(0, 0, 5);\r\n    if (world) {\r\n        cameraPosition.set(world.cameraPosition.x, world.cameraPosition.y, world.cameraPosition.z);\r\n    }\r\n\r\n    console.log('x')\r\n\r\n    const setAxes = (on: boolean) => {\r\n        setCommonStore(state => {\r\n            state.axes = on;\r\n        });\r\n    };\r\n\r\n    const setGrid = (on: boolean) => {\r\n        setCommonStore(state => {\r\n            state.grid = on;\r\n        });\r\n    };\r\n\r\n    const setGroundColor = (color: string) => {\r\n        setCommonStore(state => {\r\n            state.groundColor = color;\r\n        });\r\n    };\r\n\r\n    const setHeliodon = (on: boolean) => {\r\n        setCommonStore(state => {\r\n            state.heliodon = on;\r\n        });\r\n    };\r\n\r\n    // animation state should not be persisted\r\n    const setSunAnimation = (on: boolean) => {\r\n        setAnimateSun(on);\r\n    };\r\n\r\n    const changeDate = (date: Date) => {\r\n        const d = new Date(now);\r\n        d.setFullYear(date.getFullYear());\r\n        d.setMonth(date.getMonth());\r\n        d.setDate(date.getDate());\r\n        setCommonStore(state => {\r\n            state.date = d.toString();\r\n        });\r\n    };\r\n\r\n    const changeTime = (date: Date) => {\r\n        const d = new Date(now);\r\n        d.setHours(date.getHours(), date.getMinutes());\r\n        setCommonStore(state => {\r\n            state.date = d.toString();\r\n        });\r\n    };\r\n\r\n    const changeLatitude = (latitude: number) => {\r\n        setCommonStore(state => {\r\n            state.latitude = latitude;\r\n        });\r\n    };\r\n\r\n    const changeLongitude = (longitude: number) => {\r\n        setCommonStore(state => {\r\n            state.longitude = longitude;\r\n        });\r\n    };\r\n\r\n    const changeMapZoom = (zoom: number) => {\r\n        setCommonStore(state => {\r\n            state.mapZoom = zoom;\r\n        });\r\n    };\r\n\r\n    const changeMapTilt = (tilt: number) => {\r\n        setCommonStore(state => {\r\n            state.mapTilt = tilt;\r\n        });\r\n    };\r\n\r\n    const changeMapType = (type: string) => {\r\n        setCommonStore(state => {\r\n            state.mapType = type;\r\n        });\r\n    };\r\n\r\n    const sunAboveHorizon = sunlightDirection.y > 0;\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div style={{\r\n                backgroundColor: 'lightblue',\r\n                height: '72px',\r\n                paddingTop: '10px',\r\n                fontSize: '30px'\r\n            }}>\r\n                <img alt='Aladdin Logo' src={aladdinLogo} height='50px' style={{verticalAlign: 'middle'}}/>\r\n                <span style={{paddingLeft: '20px', verticalAlign: 'middle'}}>Aladdin</span>\r\n            </div>\r\n            <div style={{\r\n                position: 'absolute',\r\n                bottom: '10px',\r\n                left: '10px',\r\n                zIndex: 999,\r\n                fontSize: '12px',\r\n                color: 'white'\r\n            }}>\r\n                <img alt='IFI Logo'\r\n                     src={ifiLogo}\r\n                     height='40px'\r\n                     style={{verticalAlign: 'bottom', cursor: 'pointer'}}\r\n                     title={'Go to Institute for Future Intelligence'}\r\n                     onClick={visitIFI}/>\r\n                &nbsp;&nbsp; Institute for Future Intelligence, &copy;{new Date().getFullYear()}. Version {VERSION}\r\n            </div>\r\n            <MainMenu/>\r\n            {showSceneSettings &&\r\n            <SceneSettingsPanel axes={axes}\r\n                                grid={grid}\r\n                                groundColor={groundColor}\r\n                                setAxes={setAxes}\r\n                                setGrid={setGrid}\r\n                                setGroundColor={setGroundColor}\r\n                                changeLatitude={changeLatitude}\r\n                                changeLongitude={changeLongitude}\r\n                                changeMapZoom={changeMapZoom}\r\n                                changeMapTilt={changeMapTilt}\r\n                                changeMapType={changeMapType}\r\n            />}\r\n            {showSolarSettings &&\r\n            <SolarSettingsPanel latitude={latitude}\r\n                                date={now}\r\n                                heliodon={heliodon}\r\n                                animateSun={animateSun}\r\n                                changeDate={changeDate}\r\n                                changeTime={changeTime}\r\n                                changeLatitude={changeLatitude}\r\n                                setHeliodon={setHeliodon}\r\n                                setSunAnimation={setSunAnimation}\r\n            />}\r\n            <Canvas shadows={true}\r\n                    camera={{\r\n                        position: cameraPosition,\r\n                        fov: 90\r\n                    }}\r\n                    style={{height: 'calc(100vh - 70px)', backgroundColor: 'black'}}>\r\n                <Suspense fallback={null}>\r\n                    <OrbitController/>\r\n                    <ambientLight intensity={0.25}/>\r\n                    <directionalLight\r\n                        color='white'\r\n                        position={[sunlightDirection.x, sunlightDirection.y, sunlightDirection.z]}\r\n                        intensity={sunAboveHorizon ? 0.5 : 0}\r\n                        castShadow\r\n                        shadow-mapSize-height={512}\r\n                        shadow-mapSize-width={512}\r\n                    />\r\n                    {grid && <gridHelper args={[500, 100, 'gray', 'gray']}/>}\r\n                    <Compass/>\r\n                    <Sample/>\r\n                    {axes && <Axes/>}\r\n                    <Ground/>\r\n                    <Sky type={sunAboveHorizon ? 'day sky' : 'night sky'}/>\r\n                    {heliodon &&\r\n                    <Heliodon\r\n                        hourAngle={hourAngle}\r\n                        declinationAngle={declinationAngle}\r\n                        radius={radius}\r\n                        date={now}\r\n                        latitude={Util.toRadians(latitude)}\r\n                    />}\r\n                    {/*{world && <Scene world={world}/>}*/}\r\n                </Suspense>\r\n            </Canvas>\r\n            <AcceptCookie/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nexport const VERSION = '0.0.1';\r\n\r\nexport const isProd = process.env.NODE_ENV === 'production';\r\n\r\nexport const HOME_URL: string = isProd ? 'https://aladdin.intofuture.org' : 'http://aladdin.dev';\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*\n * @Copyright 2021. Institute for Future Intelligence, Inc.\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}