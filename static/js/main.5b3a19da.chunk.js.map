{"version":3,"sources":["stores/common.ts","orbitController.tsx","resources/daysky.jpg","resources/nightsky.jpg","views/sky.tsx","views/axes.tsx","views/compass.tsx","views/foundation.tsx","scene.tsx","views/ground.tsx","util.ts","views/sunTools.ts","views/heliodon.tsx","assets/menu.svg","mainPanel.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["enableMapSet","useStore","create","devtools","persist","set","get","api","immerSet","fn","produce","heliodon","latitude","date","Date","toString","worlds","getWorld","name","createNewWorld","state","elements","push","type","cx","cy","lx","ly","height","id","world","cameraPosition","Vector3","extend","OrbitControls","OrbitController","useThree","camera","domElement","gl","controls","useRef","useEffect","c","current","target","addEventListener","onInteractionEnd","removeEventListener","w","x","position","y","z","ref","args","enableZoom","maxAzimuthAngle","Math","PI","minAzimuthAngle","Sky","props","meshRef","texture","useMemo","loader","TextureLoader","load","NightSkyImage","DaySkyImage","scale","onClick","e","intersections","length","object","console","log","map","side","DoubleSide","opacity","color","Axes","endPoint","mesh","pointsXAxis","geometryXAxis","BufferGeometry","setFromPoints","materialXAxis","LineBasicMaterial","linewidth","pointsYAxis","geometryYAxis","materialYAxis","pointsZAxis","geometryZAxis","materialZAxis","Compass","model","useLoader","OBJLoader","font","FontLoader","textGeometryParams","size","textMaterial","MeshBasicMaterial","compassMaterial","useFrame","v","unproject","rotation","Euler","material","Foundation","lineColor","hovered","selected","baseRef","handleLLRef","handleULRef","handleLRRef","handleURRef","positionLL","positionUL","positionLR","positionUR","yOffset","hoverMe","on","castShadow","receiveShadow","onPointerOver","onPointerOut","attach","Line","points","Scene","filter","Ground","planeRef","Util","degrees","radians","sphereCoords","a","cos","sin","TILT_ANGLE","computeSunLocation","radius","hourAngle","declinationAngle","observerLatitude","altitudeAngle","asin","xAzm","yAzm","azimuthAngle","atan2","coords","sphericalToCartesianZ","setX","Heliodon","basePoints","tickPoints","step","counter","angle","TWO_PI","theta","min","width","p","ZERO_TOLERANCE","basePositions","Float32Array","baseNormals","baseColors","i","j","floor","sunPathPoints","h","sunPosition","sunbeltGeometry","declinationStep","hourStep","geometry","verticesCount","vertices","indices","d","h2","d2","v1","v2","v3","v4","setIndex","BufferAttribute","Uint16Array","attachObject","count","array","itemSize","vertexColors","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","Color","transparent","clippingPlanes","Plane","UNIT_VECTOR_POS_Y","SphereGeometry","_extends","Object","assign","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","SvgMenu","_ref","svgRef","title","titleId","t","className","viewBox","xmlns","xmlnsXlink","ForwardRef","Container","styled","div","ColumnWrapper","Header","MainPanel","animateSun","toggleHeliodon","toggleSunAnimation","changeLatitude","changeDate","changeTime","useState","shown","setShown","requestRef","previousFrameTime","requestAnimationFrame","animate","cancelAnimationFrame","currentFrameTime","now","day","getDate","setHours","getHours","setDate","stopPropagation","style","cursor","padding","align","checked","onChange","value","moment","toDate","format","marks","0","90","max","tooltipVisible","defaultValue","App","setCommonStore","setHourAngle","setDeclinationAngle","sunlightDirection","setSunlightDirection","setAnimateSun","toRadians","applyEuler","getMinutes","days","getTime","getFullYear","computeDeclinationAngle","sunAboveHorizon","backgroundColor","paddingTop","fontSize","alt","src","verticalAlign","paddingLeft","setFullYear","setMonth","getMonth","shadows","fov","fallback","intensity","shadow-mapSize-height","shadow-mapSize-width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b3a19da.chunk.js","sourcesContent":["/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport create from 'zustand';\r\nimport {devtools, persist} from 'zustand/middleware';\r\nimport produce, {enableMapSet} from 'immer';\r\nimport {WorldModel} from \"../models/worldModel\";\r\nimport {Vector3} from \"three\";\r\nimport {ElementModel} from \"../models/elementModel\";\r\n\r\nenableMapSet();\r\n\r\nexport interface CommonStoreState {\r\n    set: (fn: (state: CommonStoreState) => void) => void;\r\n    worlds: { [key: string]: WorldModel };\r\n    createNewWorld: () => void;\r\n    getWorld: (name: string) => WorldModel;\r\n\r\n    heliodon: boolean;\r\n    latitude: number;\r\n    date: string;\r\n}\r\n\r\nexport const useStore = create<CommonStoreState>(devtools(persist((\r\n    set,\r\n    get,\r\n    api,\r\n) => {\r\n    const immerSet: CommonStoreState['set'] = fn => set(produce(fn));\r\n    return {\r\n\r\n        set: immerSet,\r\n\r\n        heliodon: false,\r\n        latitude: 42,\r\n        date: new Date(2021, 5, 22, 12).toString(),\r\n\r\n        worlds: {},\r\n        getWorld(name: string) {\r\n            return get().worlds[name];\r\n        },\r\n        createNewWorld() {\r\n            immerSet((state: CommonStoreState) => {\r\n                const elements: ElementModel[] = [];\r\n                const e1 = {type: 'Foundation', cx: 0, cy: 0, lx: 2, ly: 4, height: 0.1, id: 'f1'};\r\n                const e2 = {type: 'Foundation', cx: 1, cy: 2, lx: 2, ly: 2, height: 0.2, id: 'f2'};\r\n                elements.push(e1);\r\n                elements.push(e2);\r\n                const world = {\r\n                    name: 'default',\r\n                    elements: elements,\r\n                    cameraPosition: new Vector3(0, 0, 5)\r\n                };\r\n                state.worlds[world.name] = world;\r\n            })\r\n        }\r\n    };\r\n}, {name: 'aladdin-storage'})));\r\n\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport React, {useEffect, useRef} from \"react\";\r\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\r\nimport {extend, Object3DNode, useThree} from \"@react-three/fiber\";\r\nimport {useStore} from \"./stores/common\";\r\n\r\n// Extend will make OrbitControls available as a JSX element called orbitControls for us to use.\r\nextend({OrbitControls});\r\n\r\ndeclare global {\r\n    namespace JSX {\r\n        interface IntrinsicElements {\r\n            'orbitControls': Object3DNode<OrbitControls, typeof OrbitControls>;\r\n        }\r\n    }\r\n}\r\n\r\nexport interface OrbitControllerProps {\r\n    [key: string]: any;\r\n}\r\n\r\n// Get a reference to the Three.js Camera, and the canvas html element.\r\n// We need these to setup the OrbitControls class.\r\n// https://threejs.org/docs/#examples/en/controls/OrbitControls\r\nconst OrbitController = () => {\r\n\r\n    const set = useStore(state => state.set);\r\n    const {camera, gl: {domElement}} = useThree();\r\n    // Ref to the controls, so that we can update them on every frame using useFrame\r\n    const controls = useRef<OrbitControls>(null);\r\n\r\n    useEffect(() => {\r\n        const c = controls.current;\r\n        if (c) {\r\n            c.target.set(0, 0, 0);\r\n            c.addEventListener('end', onInteractionEnd);\r\n        }\r\n        return () => {\r\n            c?.removeEventListener('end', onInteractionEnd);\r\n        }\r\n    });\r\n\r\n    const onInteractionEnd = () => {\r\n        set((state) => {\r\n            const w = state.worlds['default'];\r\n            if (w) {\r\n                // FIXME: why can't set function be used?\r\n                w.cameraPosition.x = camera.position.x;\r\n                w.cameraPosition.y = camera.position.y;\r\n                w.cameraPosition.z = camera.position.z;\r\n            }\r\n        });\r\n    };\r\n\r\n    // animation\r\n    // useFrame((state) => {\r\n    //     if (controls.current) {\r\n    //         controls.current.update();\r\n    //     }\r\n    // });\r\n\r\n    return (\r\n        <orbitControls\r\n            ref={controls}\r\n            args={[camera, domElement]}\r\n            enableZoom={true}\r\n            maxAzimuthAngle={Math.PI}\r\n            minAzimuthAngle={-Math.PI}\r\n        />\r\n    );\r\n\r\n};\r\n\r\nexport default OrbitController;\r\n","export default __webpack_public_path__ + \"static/media/daysky.66925efd.jpg\";","export default __webpack_public_path__ + \"static/media/nightsky.2ee37da6.jpg\";","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport React, {useMemo, useRef} from \"react\";\r\nimport DaySkyImage from \"../resources/daysky.jpg\";\r\nimport NightSkyImage from \"../resources/nightsky.jpg\";\r\nimport {DoubleSide, Mesh, TextureLoader} from \"three\";\r\n\r\nexport interface SkyProps {\r\n    type?: string,\r\n\r\n    [key: string]: any;\r\n}\r\n\r\nconst Sky = ({\r\n                 type = 'day sky',\r\n                 ...props\r\n             }: SkyProps) => {\r\n\r\n    const meshRef = useRef<Mesh>(null!);\r\n    const texture = useMemo(() => {\r\n        const loader = new TextureLoader();\r\n        let texture;\r\n        switch (type) {\r\n            case 'night sky':\r\n                texture = loader.load(NightSkyImage);\r\n                break;\r\n            default:\r\n                texture = loader.load(DaySkyImage);\r\n        }\r\n        return texture;\r\n    }, [type]);\r\n\r\n    return (\r\n        <mesh\r\n            {...props}\r\n            ref={meshRef}\r\n            name={'Sky'}\r\n            scale={1}\r\n            onClick={(e) => {\r\n                if (e.intersections.length > 0) {\r\n                    const skyClicked = e.intersections[0].object === meshRef.current;\r\n                    if (skyClicked) {\r\n                        console.log('Sky clicked');\r\n                    }\r\n                }\r\n            }}\r\n        >\r\n            <sphereGeometry args={[1000, 16, 16, 0, 2 * Math.PI, 0, Math.PI / 2 + 0.01]}/>\r\n            <meshBasicMaterial map={texture}\r\n                               side={DoubleSide}\r\n                               opacity={1}\r\n                               color={'skyblue'}/>\r\n        </mesh>\r\n    )\r\n};\r\n\r\nexport default Sky;\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport React, {useRef} from \"react\";\r\nimport {BufferGeometry, LineBasicMaterial, Mesh, Vector3} from \"three\";\r\n\r\nexport interface AxesProps {\r\n    endPoint?: number,\r\n\r\n    [key: string]: any;\r\n}\r\n\r\nconst Axes = ({\r\n                  endPoint = 1000,\r\n                  ...props\r\n              }: AxesProps) => {\r\n    const mesh = useRef<Mesh>(null!);\r\n\r\n    const pointsXAxis = [];\r\n    pointsXAxis.push(new Vector3(-endPoint, 0, 0));\r\n    pointsXAxis.push(new Vector3(endPoint, 0, 0));\r\n    const geometryXAxis = new BufferGeometry().setFromPoints(pointsXAxis);\r\n    const materialXAxis = new LineBasicMaterial({color: 'red', linewidth: 10});\r\n\r\n    const pointsYAxis = [];\r\n    pointsYAxis.push(new Vector3(0, -endPoint, 0));\r\n    pointsYAxis.push(new Vector3(0, endPoint, 0));\r\n    const geometryYAxis = new BufferGeometry().setFromPoints(pointsYAxis);\r\n    const materialYAxis = new LineBasicMaterial({color: 'green', linewidth: 10});\r\n\r\n    const pointsZAxis = [];\r\n    pointsZAxis.push(new Vector3(0, 0, -endPoint));\r\n    pointsZAxis.push(new Vector3(0, 0, endPoint));\r\n    const geometryZAxis = new BufferGeometry().setFromPoints(pointsZAxis);\r\n    const materialZAxis = new LineBasicMaterial({color: 'blue', linewidth: 10});\r\n\r\n    return (\r\n        <mesh\r\n            {...props}\r\n            ref={mesh}\r\n        >\r\n            <lineSegments args={[geometryXAxis, materialXAxis]}/>\r\n            <lineSegments args={[geometryYAxis, materialYAxis]}/>\r\n            <lineSegments args={[geometryZAxis, materialZAxis]}/>\r\n        </mesh>\r\n    )\r\n};\r\n\r\nexport default Axes;\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport React, {useRef} from \"react\";\r\nimport {useFrame, useLoader, useThree} from '@react-three/fiber'\r\nimport {OBJLoader} from \"three/examples/jsm/loaders/OBJLoader\";\r\nimport {Euler, FontLoader, Mesh, MeshBasicMaterial, TextGeometryParameters, Vector3} from \"three\";\r\n\r\nexport interface CompassProps {\r\n    scale?: number;\r\n\r\n    [key: string]: any;\r\n}\r\n\r\nconst Compass = ({\r\n                     scale = 0.01,\r\n                     ...props\r\n                 }: CompassProps) => {\r\n    const model = useLoader(OBJLoader, 'static/assets/compass.obj');\r\n    const font = useLoader(FontLoader, 'static/fonts/helvetiker_regular.typeface.json');\r\n    const mesh = useRef<Mesh>(null!);\r\n    const textGeometryParams = {font: font, height: 0.00, size: 0.005} as TextGeometryParameters;\r\n    const textMaterial = new MeshBasicMaterial({color: 'white'});\r\n    const compassMaterial = new MeshBasicMaterial({color: 'red'});\r\n\r\n    // FIXME: This is not the right way to fix the compass\r\n    const {camera} = useThree();\r\n    useFrame((state) => {\r\n        if (mesh.current) {\r\n            const v = new Vector3(0.88, -0.8, 0.1).unproject(camera);\r\n            mesh.current.position.set(v.x, v.y, v.z);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <mesh\r\n            {...props}\r\n            ref={mesh}\r\n            rotation={new Euler(-Math.PI / 2, 0, 0)}\r\n        >\r\n            <mesh position={[-0.001, 0.02, 0]} material={textMaterial}>\r\n                <textGeometry args={['N', textGeometryParams]}/>\r\n            </mesh>\r\n            <mesh position={[-0.0015, -0.025, 0]} material={textMaterial}>\r\n                <textGeometry args={['S', textGeometryParams]}/>\r\n            </mesh>\r\n            <mesh position={[-0.025, -0.002, 0]} material={textMaterial}>\r\n                <textGeometry args={['W', textGeometryParams]}/>\r\n            </mesh>\r\n            <mesh position={[0.02, -0.002, 0]} material={textMaterial}>\r\n                <textGeometry args={['E', textGeometryParams]}/>\r\n            </mesh>\r\n            <primitive object={model} scale={scale} material={compassMaterial}/>\r\n        </mesh>\r\n    );\r\n};\r\n\r\nexport default Compass;\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport React, {useRef} from \"react\";\r\nimport {Box, Line, Sphere} from \"@react-three/drei\";\r\nimport {Vector3} from \"three\";\r\nimport {useStore} from \"../stores/common\";\r\nimport {FoundationModel} from \"../models/foundationModel\";\r\n\r\nconst Foundation = ({\r\n                        id,\r\n                        cx,\r\n                        cy,\r\n                        lx = 1,\r\n                        ly = 1,\r\n                        height = 0.1,\r\n                        color = 'gray',\r\n                        lineColor = 'black',\r\n                        hovered = false,\r\n                        selected = false,\r\n                    }: FoundationModel) => {\r\n\r\n    const set = useStore(state => state.set);\r\n\r\n    const baseRef = useRef();\r\n    const handleLLRef = useRef();\r\n    const handleULRef = useRef();\r\n    const handleLRRef = useRef();\r\n    const handleURRef = useRef();\r\n\r\n    const positionLL = new Vector3(cx - lx / 2, height / 2, cy - ly / 2);\r\n    const positionUL = new Vector3(cx - lx / 2, height / 2, cy + ly / 2);\r\n    const positionLR = new Vector3(cx + lx / 2, height / 2, cy - ly / 2);\r\n    const positionUR = new Vector3(cx + lx / 2, height / 2, cy + ly / 2);\r\n\r\n    const yOffset = 0.002;\r\n\r\n    const selectMe = () => {\r\n        set((state) => {\r\n            const w = state.worlds['default'];\r\n            if (w) {\r\n                for (const e of w.elements) {\r\n                    e.selected = e.id === id;\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    const hoverMe = (on: boolean) => {\r\n        set((state) => {\r\n            const w = state.worlds['default'];\r\n            if (w) {\r\n                for (const e of w.elements) {\r\n                    if (e.id === id) {\r\n                        e.hovered = on;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n\r\n        <group>\r\n\r\n            {/* draw rectangle */}\r\n            <Box castShadow receiveShadow\r\n                 ref={baseRef}\r\n                 name={'Foundation'}\r\n                 onClick={(e) => {\r\n                     if (e.intersections.length > 0) {\r\n                         const intersected = e.intersections[0].object === baseRef.current;\r\n                         if (intersected) {\r\n                             selectMe();\r\n                         }\r\n                     }\r\n                 }}\r\n                 onPointerOver={(e) => {\r\n                     if (e.intersections.length > 0) {\r\n                         const intersected = e.intersections[0].object === baseRef.current;\r\n                         if (intersected) {\r\n                             hoverMe(true);\r\n                         }\r\n                     }\r\n                 }}\r\n                 onPointerOut={(e) => {\r\n                     hoverMe(false);\r\n                 }}\r\n                 args={[lx, height, ly]}\r\n                 position={[cx, height / 2, cy]}>\r\n                <meshStandardMaterial attach=\"material\" color={hovered ? 'lightGray' : color}/>\r\n            </Box>\r\n\r\n            <>\r\n                {/* draw wireframe lines upper face */}\r\n                <Line points={[[positionLL.x, height, positionLL.z], [positionLR.x, height, positionLR.z]]}\r\n                      color={lineColor}/>\r\n                <Line points={[[positionLR.x, height, positionLR.z], [positionUR.x, height, positionUR.z]]}\r\n                      color={lineColor}/>\r\n                <Line points={[[positionUR.x, height, positionUR.z], [positionUL.x, height, positionUL.z]]}\r\n                      color={lineColor}/>\r\n                <Line points={[[positionUL.x, height, positionUL.z], [positionLL.x, height, positionLL.z]]}\r\n                      color={lineColor}/>\r\n\r\n                {/* draw wireframe lines lower face */}\r\n                <Line points={[[positionLL.x, yOffset, positionLL.z], [positionLR.x, yOffset, positionLR.z]]}\r\n                      color={lineColor}/>\r\n                <Line points={[[positionLR.x, yOffset, positionLR.z], [positionUR.x, yOffset, positionUR.z]]}\r\n                      color={lineColor}/>\r\n                <Line points={[[positionUR.x, yOffset, positionUR.z], [positionUL.x, yOffset, positionUL.z]]}\r\n                      color={lineColor}/>\r\n                <Line points={[[positionUL.x, yOffset, positionUL.z], [positionLL.x, yOffset, positionLL.z]]}\r\n                      color={lineColor}/>\r\n\r\n                {/* draw wireframe vertical lines */}\r\n                <Line points={[[positionLL.x, yOffset, positionLL.z], [positionLL.x, height, positionLL.z]]}\r\n                      color={lineColor}/>\r\n                <Line points={[[positionLR.x, yOffset, positionLR.z], [positionLR.x, height, positionLR.z]]}\r\n                      color={lineColor}/>\r\n                <Line points={[[positionUL.x, yOffset, positionUL.z], [positionUL.x, height, positionUL.z]]}\r\n                      color={lineColor}/>\r\n                <Line points={[[positionUR.x, yOffset, positionUR.z], [positionUR.x, height, positionUR.z]]}\r\n                      color={lineColor}/>\r\n            </>\r\n\r\n            {/* draw handles */}\r\n            {selected &&\r\n            <>\r\n                <Sphere ref={handleLLRef}\r\n                        args={[0.1, 6, 6]}\r\n                        position={positionLL}>\r\n                    <meshStandardMaterial attach=\"material\" color={'white'}/>\r\n                </Sphere>\r\n                <Sphere ref={handleULRef}\r\n                        args={[0.1, 6, 6]}\r\n                        position={positionUL}>\r\n                    <meshStandardMaterial attach=\"material\" color={'white'}/>\r\n                </Sphere>\r\n                <Sphere ref={handleLRRef}\r\n                        args={[0.1, 6, 6]}\r\n                        position={positionLR}>\r\n                    <meshStandardMaterial attach=\"material\" color={'white'}/>\r\n                </Sphere>\r\n                <Sphere ref={handleURRef}\r\n                        args={[0.1, 6, 6]}\r\n                        position={positionUR}>\r\n                    <meshStandardMaterial attach=\"material\" color={'white'}/>\r\n                </Sphere>\r\n            </>\r\n            }\r\n\r\n        </group>\r\n    )\r\n};\r\n\r\nexport default Foundation;\r\n","/*\n * @Copyright 2021. Institute for Future Intelligence, Inc.\n */\n\nimport React from 'react';\nimport Foundation from \"./views/foundation\";\nimport {Box} from \"@react-three/drei\";\nimport {WorldModel} from \"./models/worldModel\";\nimport {FoundationModel} from \"./models/foundationModel\";\n\nconst Scene: React.FC<{ world: WorldModel }> = ({world}) => {\n    return (\n        <group>\n            <Box castShadow receiveShadow\n                 args={[1, 2, 1]}\n                 position={[0, 1, 0]}>\n                <meshStandardMaterial attach=\"material\" color={'white'}/>\n            </Box>\n            {world.elements\n                .filter(e => e.type === 'Foundation')\n                .map(e => <Foundation key={e.id} {...e as FoundationModel}/>)}\n        </group>\n    );\n};\n\nexport default Scene;\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport React, {useRef} from \"react\";\r\nimport {Plane} from \"@react-three/drei\";\r\nimport {useStore} from \"../stores/common\";\r\nimport {DoubleSide} from \"three\";\r\n\r\nexport interface GroundProps {\r\n    color?: string;\r\n\r\n    [key: string]: any;\r\n}\r\n\r\nconst Ground = ({\r\n                    color = 'forestgreen',\r\n                    ...props\r\n                }: GroundProps) => {\r\n\r\n    const set = useStore(state => state.set);\r\n    const planeRef = useRef();\r\n\r\n    const selectNone = () => {\r\n        set((state) => {\r\n            const w = state.worlds['default'];\r\n            if (w) {\r\n                for (const e of w.elements) {\r\n                    e.selected = false;\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Plane receiveShadow\r\n               ref={planeRef}\r\n               name={'Ground'}\r\n               onClick={(e) => {\r\n                   if (e.intersections.length > 0) {\r\n                       const groundClicked = e.intersections[0].object === planeRef.current;\r\n                       if (groundClicked) {\r\n                           selectNone();\r\n                       }\r\n                   }\r\n               }}\r\n               rotation={[-Math.PI / 2, 0, 0]}\r\n               position={[0, 0, 1]}\r\n               args={[10000, 10000]}>\r\n            <meshStandardMaterial side={DoubleSide}\r\n                                  attach=\"material\"\r\n                                  color={color}/>\r\n        </Plane>\r\n    )\r\n};\r\n\r\nexport default Ground;\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport {Vector3} from \"three\";\r\n\r\nexport class Util {\r\n\r\n    static get UNIT_VECTOR_POS_X() {\r\n        return new Vector3(1, 0, 0);\r\n    }\r\n\r\n    static get UNIT_VECTOR_NEG_X() {\r\n        return new Vector3(-1, 0, 0);\r\n    }\r\n\r\n    static get UNIT_VECTOR_POS_Y() {\r\n        return new Vector3(0, 1, 0);\r\n    }\r\n\r\n    static get UNIT_VECTOR_NEG_Y() {\r\n        return new Vector3(0, -1, 0);\r\n    }\r\n\r\n    static get UNIT_VECTOR_POS_Z() {\r\n        return new Vector3(0, 0, 1);\r\n    }\r\n\r\n    static get UNIT_VECTOR_NEG_Z() {\r\n        return new Vector3(0, 0, -1);\r\n    }\r\n\r\n    static get ZERO_TOLERANCE() {\r\n        return 0.0001;\r\n    }\r\n\r\n    static get HALF_PI() {\r\n        return Math.PI / 2;\r\n    }\r\n\r\n    static get TWO_PI() {\r\n        return Math.PI * 2;\r\n    }\r\n\r\n    static toRadians(degrees: number) {\r\n        return degrees * (Math.PI / 180);\r\n    }\r\n\r\n    static toDegrees(radians: number) {\r\n        return radians * (180 / Math.PI);\r\n    }\r\n\r\n    static sphericalToCartesianZ(sphereCoords: THREE.Vector3) {\r\n        let a = sphereCoords.x * Math.cos(sphereCoords.z);\r\n        let x = a * Math.cos(sphereCoords.y);\r\n        let y = a * Math.sin(sphereCoords.y);\r\n        let z = sphereCoords.x * Math.sin(sphereCoords.z);\r\n        sphereCoords.set(x, y, z);\r\n        return sphereCoords;\r\n    }\r\n\r\n}\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport {Util} from \"../util\";\r\nimport {Vector3} from \"three\";\r\n\r\nexport const TILT_ANGLE = 23.45 / 180.0 * Math.PI;\r\n\r\nexport const computeDeclinationAngle = (date: Date) => {\r\n    const days = Math.floor((date.getTime()\r\n        - new Date(date.getFullYear(), 0, 0).getTime()) / (1000 * 60 * 60 * 24));\r\n    return TILT_ANGLE * Math.sin(Util.TWO_PI * (284 + days) / 365.25);\r\n};\r\n\r\nexport const computeHourAngle = (date: Date) => {\r\n    const minutes = date.getHours() * 60 + date.getMinutes() - 12 * 60;\r\n    return minutes / (12.0 * 60.0) * Math.PI;\r\n}\r\n\r\nexport const computeSunLocation = (radius: number,\r\n                                   hourAngle: number,\r\n                                   declinationAngle: number,\r\n                                   observerLatitude: number) => {\r\n    const altitudeAngle = Math.asin(\r\n        Math.sin(declinationAngle) * Math.sin(observerLatitude) +\r\n        Math.cos(declinationAngle) * Math.cos(hourAngle) * Math.cos(observerLatitude)\r\n    );\r\n    const xAzm = Math.sin(hourAngle) * Math.cos(declinationAngle);\r\n    const yAzm = Math.cos(observerLatitude) * Math.sin(declinationAngle)\r\n        - Math.cos(hourAngle) * Math.cos(declinationAngle) * Math.sin(observerLatitude);\r\n    const azimuthAngle = Math.atan2(yAzm, xAzm);\r\n    const coords = new Vector3(radius, azimuthAngle, altitudeAngle);\r\n    Util.sphericalToCartesianZ(coords);\r\n    // reverse the x so that sun moves from east to west\r\n    coords.setX(-coords.x);\r\n    return coords;\r\n};\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport {Util} from \"../util\";\r\nimport React, {useEffect, useMemo} from \"react\";\r\nimport {\r\n    BufferAttribute,\r\n    BufferGeometry,\r\n    Color,\r\n    DoubleSide,\r\n    Euler,\r\n    MeshBasicMaterial,\r\n    Plane,\r\n    SphereGeometry,\r\n    Vector3\r\n} from \"three\";\r\nimport {\r\n    computeSunLocation,\r\n    TILT_ANGLE\r\n} from \"./sunTools\";\r\nimport {Line} from \"@react-three/drei\";\r\n\r\nexport interface HeliodonProps {\r\n    radius: number;\r\n    hourAngle: number;\r\n    declinationAngle: number;\r\n    date: Date;\r\n    latitude: number; // in radian\r\n\r\n    [key: string]: any;\r\n}\r\n\r\nconst HOUR_DIVISIONS = 96;\r\nconst BASE_DIVISIONS = 72;\r\nconst DECLINATION_DIVISIONS = 12;\r\n\r\nconst Heliodon = ({\r\n                      hourAngle,\r\n                      declinationAngle,\r\n                      radius = 5,\r\n                      date = new Date(),\r\n                      latitude = 42 / 180.0 * Math.PI,\r\n                  }: HeliodonProps) => {\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            // remove listeners if any\r\n        }\r\n    }, [date, latitude]);\r\n\r\n    const [basePositions, baseNormals, baseColors, tickPoints] = useMemo(() => {\r\n        const basePoints: Vector3[] = [];\r\n        const tickPoints: Vector3[] = [];\r\n        const step = Math.PI * 2 / BASE_DIVISIONS;\r\n        let counter = 0;\r\n        for (let angle = 0; angle < Util.TWO_PI + step / 2.0; angle += step) {\r\n            const theta = Math.min(angle, Util.TWO_PI);\r\n            let width = 0.3;\r\n            // TODO: This is inefficient. We should use indexed buffer to share vertices\r\n            basePoints.push(Util.sphericalToCartesianZ(new Vector3(radius, theta, 0)));\r\n            basePoints.push(Util.sphericalToCartesianZ(new Vector3(radius + width, theta, 0)));\r\n            basePoints.push(Util.sphericalToCartesianZ(new Vector3(radius, theta + step, 0)));\r\n            basePoints.push(Util.sphericalToCartesianZ(new Vector3(radius + width, theta, 0)));\r\n            basePoints.push(Util.sphericalToCartesianZ(new Vector3(radius + width, theta + step, 0)));\r\n            basePoints.push(Util.sphericalToCartesianZ(new Vector3(radius, theta + step, 0)));\r\n            let p;\r\n            if (Util.TWO_PI - theta > Util.ZERO_TOLERANCE) {\r\n                width = counter % 3 === 0 ? 0.5 : 0.3;\r\n                p = new Vector3(radius, theta, 0);\r\n                p.z = 0.002;\r\n                tickPoints.push(Util.sphericalToCartesianZ(p));\r\n                p = new Vector3(radius + width, theta, 0);\r\n                p.z = 0.002;\r\n                tickPoints.push(Util.sphericalToCartesianZ(p));\r\n            }\r\n            counter++;\r\n        }\r\n\r\n        // attributes\r\n        const length = basePoints.length * 3;\r\n        const basePositions = new Float32Array(length);\r\n        const baseNormals = new Float32Array(length);\r\n        const baseColors = new Float32Array(length);\r\n\r\n        for (let i = 0; i < basePoints.length; i++) {\r\n            const j = i * 3;\r\n            basePositions[j] = basePoints[i].x;\r\n            basePositions[j + 1] = basePoints[i].y;\r\n            basePositions[j + 2] = basePoints[i].z;\r\n            baseNormals[j] = 0;\r\n            baseNormals[j + 1] = 1;\r\n            baseNormals[j + 2] = 0;\r\n            const c = (Math.floor(i / 18)) % 2 === 0 ? 0.2 : 1.0;\r\n            baseColors[j] = c;\r\n            baseColors[j + 1] = c;\r\n            baseColors[j + 2] = c;\r\n        }\r\n\r\n        return [basePositions, baseNormals, baseColors, tickPoints];\r\n    }, [radius]);\r\n\r\n    const sunPathPoints = useMemo(() => {\r\n        const step = Util.TWO_PI / HOUR_DIVISIONS;\r\n        const points = [];\r\n        for (let h = -Math.PI; h < Math.PI + step / 2.0; h += step) {\r\n            const v = computeSunLocation(radius, h, declinationAngle, latitude);\r\n            if (v.z > -0.3) {\r\n                points.push(v);\r\n            }\r\n        }\r\n        return points;\r\n    }, [latitude, radius, declinationAngle]);\r\n\r\n    const sunPosition = useMemo(() => {\r\n        return computeSunLocation(radius, hourAngle, declinationAngle, latitude);\r\n    }, [latitude, declinationAngle, hourAngle, radius]);\r\n\r\n    const sunbeltGeometry = useMemo(() => {\r\n        const declinationStep = 2.0 * TILT_ANGLE / DECLINATION_DIVISIONS;\r\n        const hourStep = Util.TWO_PI / HOUR_DIVISIONS;\r\n        const geometry = new BufferGeometry();\r\n        let verticesCount = 0;\r\n        const vertices: Vector3[] = [];\r\n        const indices = [];\r\n        for (let d = -TILT_ANGLE; d < TILT_ANGLE - declinationStep / 2.0; d += declinationStep) {\r\n            for (let h = -Math.PI; h < Math.PI - hourStep / 2.0; h += hourStep) {\r\n                let h2 = h + hourStep;\r\n                let d2 = d + declinationStep;\r\n                if (h2 > Math.PI) {\r\n                    h2 = Math.PI;\r\n                }\r\n                if (d2 > TILT_ANGLE) {\r\n                    d2 = TILT_ANGLE;\r\n                }\r\n                const v1 = computeSunLocation(radius, h, d, latitude);\r\n                const v2 = computeSunLocation(radius, h2, d, latitude);\r\n                const v3 = computeSunLocation(radius, h2, d2, latitude);\r\n                const v4 = computeSunLocation(radius, h, d2, latitude);\r\n                if (v1.z >= 0 || v2.z >= 0 || v3.z >= 0 || v4.z >= 0) {\r\n                    vertices.push(v1, v2, v3, v4);\r\n                    indices.push(verticesCount);\r\n                    indices.push(verticesCount + 1);\r\n                    indices.push(verticesCount + 2);\r\n                    indices.push(verticesCount);\r\n                    indices.push(verticesCount + 2);\r\n                    indices.push(verticesCount + 3);\r\n                    verticesCount += 4;\r\n                }\r\n            }\r\n        }\r\n        geometry.setFromPoints(vertices);\r\n        geometry.setIndex(new BufferAttribute(new Uint16Array(indices), 1));\r\n        return geometry;\r\n    }, [latitude, radius]);\r\n\r\n    return (\r\n        <mesh rotation={new Euler(-Math.PI / 2, 0, 0)}>\r\n            {/* draw base */}\r\n            <mesh>\r\n                <bufferGeometry attach='geometry'>\r\n                    <bufferAttribute\r\n                        attachObject={[\"attributes\", \"position\"]}\r\n                        count={basePositions.length / 3}\r\n                        array={basePositions}\r\n                        itemSize={3}\r\n                    />\r\n                    <bufferAttribute\r\n                        attachObject={[\"attributes\", \"normal\"]}\r\n                        count={baseNormals.length / 3}\r\n                        array={baseNormals}\r\n                        itemSize={3}\r\n                    />\r\n                    <bufferAttribute\r\n                        attachObject={[\"attributes\", \"color\"]}\r\n                        count={baseColors.length / 3}\r\n                        array={baseColors}\r\n                        itemSize={3}\r\n                    />\r\n                </bufferGeometry>\r\n                <meshBasicMaterial side={DoubleSide}\r\n                                   vertexColors={true}\r\n                                   polygonOffset={true}\r\n                                   polygonOffsetFactor={-0.7}\r\n                                   polygonOffsetUnits={-2}/>\r\n            </mesh>\r\n            <lineSegments\r\n                args={[new BufferGeometry().setFromPoints(tickPoints),\r\n                    new MeshBasicMaterial({color: 0x000000})]}/>\r\n            {/* draw sun path*/}\r\n            <mesh>\r\n                {sunPathPoints.length > 3 && <Line points={sunPathPoints} color={'yellow'}/>}\r\n                <mesh\r\n                    args={[sunbeltGeometry,\r\n                        new MeshBasicMaterial({\r\n                            side: DoubleSide,\r\n                            color: new Color(1, 1, 0),\r\n                            transparent: true,\r\n                            opacity: 0.5,\r\n                            clippingPlanes: [new Plane(Util.UNIT_VECTOR_POS_Y, 0)]\r\n                        })\r\n                    ]}/>\r\n                <mesh\r\n                    position={sunPosition}\r\n                    args={[new SphereGeometry(0.25, 20, 20),\r\n                        new MeshBasicMaterial({color: 0xffffff00})\r\n                    ]}/>\r\n            </mesh>\r\n        </mesh>\r\n    );\r\n\r\n};\r\n\r\nexport default Heliodon;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", {\n  type: \"text/css\"\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M194.187431 235.50871m-69.997795 0a69.997795 69.997795 0 1 0 139.99559 0 69.997795 69.997795 0 1 0-139.99559 0Z\",\n  \"p-id\": 5968\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M347.505182 165.510915h552.305182v139.99559H347.505182z\",\n  \"p-id\": 5969\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M194.187431 512.1129m-69.997795 0a69.997795 69.997795 0 1 0 139.99559 0 69.997795 69.997795 0 1 0-139.99559 0Z\",\n  \"p-id\": 5970\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M347.505182 442.115105h552.305182v139.99559H347.505182z\",\n  \"p-id\": 5971\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M194.187431 788.49129m-69.997795 0a69.997795 69.997795 0 1 0 139.99559 0 69.997795 69.997795 0 1 0-139.99559 0Z\",\n  \"p-id\": 5972\n});\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M347.505182 718.719294h552.305182v139.99559H347.505182z\",\n  \"p-id\": 5973\n});\n\nfunction SvgMenu(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    t: 1613755944969,\n    className: \"icon\",\n    viewBox: \"0 0 1024 1024\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"p-id\": 5967,\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 200,\n    height: 200,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMenu);\nexport default __webpack_public_path__ + \"static/media/menu.c2982aed.svg\";\nexport { ForwardRef as ReactComponent };","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport React, {useEffect, useRef, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport {ReactComponent as MenuIcon} from './assets/menu.svg';\r\nimport {Space, Switch, Slider, DatePicker, TimePicker} from \"antd\";\r\nimport moment from 'moment';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst Container = styled.div`\r\n  position: fixed;\r\n  top: 10px;\r\n  left: 10px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 16px;\r\n  z-index: 9;\r\n\r\n  svg.icon {\r\n    height: 36px;\r\n    width: 36px;\r\n    fill: #fff;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ColumnWrapper = styled.div`\r\n  background-color: #f8f8f8;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  width: 640px;\r\n  padding: 0px;\r\n  border: 2px solid gainsboro;\r\n  border-radius: 10px 10px 10px 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  border-radius: 10px 10px 0 0;\r\n  width: 100%;\r\n  height: 24px;\r\n  padding: 10px;\r\n  background-color: #e8e8e8;\r\n  color: #888;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  svg.icon {\r\n    height: 16px;\r\n    width: 16px;\r\n    padding: 8px;\r\n    fill: #666;\r\n  }\r\n`;\r\n\r\nexport interface MainPanelProps {\r\n    heliodon: boolean;\r\n    latitude: number;\r\n    date: Date;\r\n    animateSun?: boolean;\r\n    toggleHeliodon?: (on: boolean) => void;\r\n    toggleSunAnimation?: (on: boolean) => void;\r\n    changeLatitude?: (latitude: number) => void;\r\n    changeDate?: (date: Date) => void;\r\n    changeTime?: (date: Date) => void;\r\n}\r\n\r\nconst MainPanel = ({\r\n                       heliodon,\r\n                       latitude,\r\n                       date,\r\n                       animateSun,\r\n                       toggleHeliodon,\r\n                       toggleSunAnimation,\r\n                       changeLatitude,\r\n                       changeDate,\r\n                       changeTime,\r\n                   }: MainPanelProps) => {\r\n\r\n    const [shown, setShown] = useState<boolean>(false);\r\n    const requestRef = useRef<number>(0);\r\n    const previousFrameTime = useRef<number>(-1);\r\n\r\n    useEffect(() => {\r\n        requestRef.current = requestAnimationFrame(animate);\r\n        return () => {\r\n            cancelAnimationFrame(requestRef.current);\r\n        }\r\n    }, [animateSun]);\r\n\r\n    const animate = () => {\r\n        if (animateSun) {\r\n            requestRef.current = requestAnimationFrame(animate);\r\n            const currentFrameTime = Date.now();\r\n            if (currentFrameTime - previousFrameTime.current > 100) {\r\n                const day = date.getDate();\r\n                date.setHours(date.getHours() + 1);\r\n                date.setDate(day)\r\n                changeTime?.(date);\r\n                previousFrameTime.current = currentFrameTime;\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container\r\n            onClick={e => {\r\n                e.stopPropagation();\r\n                if (!shown) setShown(true);\r\n            }}\r\n        >\r\n            <MenuIcon/>\r\n            {shown && (\r\n                <ColumnWrapper>\r\n                    <Header>\r\n                        <span>Solar Settings</span>\r\n                        <span style={{cursor: 'pointer'}} onClick={() => {\r\n                            setShown(false);\r\n                        }}>Close</span>\r\n                    </Header>\r\n                    <Space style={{padding: '20px'}} align={'baseline'} size={20}>\r\n                        <div>\r\n                            Heliodon<br/>\r\n                            <Switch checked={heliodon} onChange={(selected) => {\r\n                                toggleHeliodon?.(selected);\r\n                            }}/>\r\n                        </div>\r\n                        <div>\r\n                            Animate<br/>\r\n                            <Switch checked={animateSun} onChange={(selected) => {\r\n                                toggleSunAnimation?.(selected);\r\n                            }}/>\r\n                        </div>\r\n                        <div>\r\n                            Date<br/>\r\n                            <DatePicker value={moment(date)}\r\n                                        onChange={(moment) => {\r\n                                            if (moment) changeDate?.(moment.toDate());\r\n                                        }}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            Time<br/>\r\n                            <TimePicker value={moment(date, 'HH:mm')}\r\n                                        format={'HH:mm'}\r\n                                        onChange={(moment) => {\r\n                                            if (moment) changeTime?.(moment.toDate());\r\n                                        }}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            Latitude\r\n                            <Slider\r\n                                style={{width: '150px'}}\r\n                                marks={{'-90': '-90°', 0: '0°', 90: '90°'}}\r\n                                min={-90}\r\n                                max={90}\r\n                                tooltipVisible={false}\r\n                                defaultValue={latitude}\r\n                                onChange={(value: number) => {\r\n                                    changeLatitude?.(value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </Space>\r\n                </ColumnWrapper>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default MainPanel;\r\n","/*\r\n * @Copyright 2021. Institute for Future Intelligence, Inc.\r\n */\r\n\r\nimport React, {Suspense, useEffect, useMemo, useState} from 'react';\r\nimport './App.css';\r\nimport {Canvas} from '@react-three/fiber';\r\nimport OrbitController from \"./orbitController\";\r\nimport Sky from \"./views/sky\";\r\nimport Axes from \"./views/axes\";\r\nimport Compass from \"./views/compass\";\r\nimport Scene from \"./scene\";\r\nimport Ground from \"./views/ground\";\r\nimport {useStore} from \"./stores/common\";\r\nimport {Euler, Vector3} from \"three\";\r\nimport Heliodon from \"./views/heliodon\";\r\nimport {Util} from \"./util\";\r\nimport {computeDeclinationAngle, computeHourAngle, computeSunLocation} from \"./views/sunTools\";\r\nimport MainPanel from \"./mainPanel\";\r\n\r\nconst App = () => {\r\n\r\n    const setCommonStore = useStore(state => state.set);\r\n    const worlds = useStore(state => state.worlds);\r\n    const getWorld = useStore(state => state.getWorld);\r\n    const createNewWorld = useStore(state => state.createNewWorld);\r\n    const heliodon = useStore(state => state.heliodon);\r\n    const latitude = useStore(state => state.latitude);\r\n    const now = new Date(useStore(state => state.date));\r\n\r\n    const [hourAngle, setHourAngle] = useState<number>(0);\r\n    const [declinationAngle, setDeclinationAngle] = useState<number>(0);\r\n    const [sunlightDirection, setSunlightDirection] = useState<Vector3>(new Vector3(0, 2, 2));\r\n    const [animateSun, setAnimateSun] = useState<boolean>(false);\r\n\r\n    const world = worlds['default']; // currently we have only one world, which is default\r\n    const radius = 5;\r\n\r\n    useEffect(() => {\r\n        const defaultWorld = getWorld('default');\r\n        if (!defaultWorld) {\r\n            createNewWorld();\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        setSunlightDirection(computeSunLocation(radius, hourAngle, declinationAngle, Util.toRadians(latitude))\r\n            .applyEuler(new Euler(-Math.PI / 2, 0, 0)));\r\n    }, [latitude, hourAngle, declinationAngle]);\r\n\r\n    useMemo(() => {\r\n        setHourAngle(computeHourAngle(now));\r\n        setDeclinationAngle(computeDeclinationAngle(now));\r\n    }, [now.toString()]);\r\n\r\n    const cameraPosition = new Vector3(0, 0, 5);\r\n    if (world) {\r\n        cameraPosition.set(world.cameraPosition.x, world.cameraPosition.y, world.cameraPosition.z);\r\n    }\r\n\r\n    console.log('x')\r\n\r\n    const toggleHeliodon = (on: boolean) => {\r\n        setCommonStore(state => {\r\n            state.heliodon = on;\r\n        });\r\n    };\r\n\r\n    const toggleSunAnimation = (on: boolean) => {\r\n        setAnimateSun(on);\r\n    };\r\n\r\n    const changeDate = (date: Date) => {\r\n        const d = new Date(now);\r\n        d.setFullYear(date.getFullYear());\r\n        d.setMonth(date.getMonth());\r\n        d.setDate(date.getDate());\r\n        setCommonStore(state => {\r\n            state.date = d.toString();\r\n        });\r\n    };\r\n\r\n    const changeTime = (date: Date) => {\r\n        const d = new Date(now);\r\n        d.setHours(date.getHours(), date.getMinutes());\r\n        setCommonStore(state => {\r\n            state.date = d.toString();\r\n        });\r\n    };\r\n\r\n    const changeLatitude = (latitude: number) => {\r\n        setCommonStore(state => {\r\n            state.latitude = latitude;\r\n        });\r\n    };\r\n\r\n    const sunAboveHorizon = sunlightDirection.y > 0;\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div style={{\r\n                backgroundColor: 'lightblue',\r\n                height: '72px',\r\n                paddingTop: '10px',\r\n                fontSize: '30px'\r\n            }}>\r\n                <img alt='Logo' src={'static/assets/aladdin-logo.png'} height='50px' style={{verticalAlign: 'middle'}}/>\r\n                <span style={{paddingLeft: '20px', verticalAlign: 'middle'}}>Aladdin</span>\r\n            </div>\r\n            <MainPanel latitude={latitude}\r\n                       date={now}\r\n                       heliodon={heliodon}\r\n                       animateSun={animateSun}\r\n                       changeDate={changeDate}\r\n                       changeTime={changeTime}\r\n                       changeLatitude={changeLatitude}\r\n                       toggleHeliodon={toggleHeliodon}\r\n                       toggleSunAnimation={toggleSunAnimation}\r\n            />\r\n            <Canvas shadows={true}\r\n                    camera={{\r\n                        position: cameraPosition,\r\n                        fov: 90\r\n                    }}\r\n                    style={{height: 'calc(100vh - 70px)', backgroundColor: 'black'}}>\r\n                <Suspense fallback={null}>\r\n                    <OrbitController/>\r\n                    <ambientLight intensity={0.25}/>\r\n                    <directionalLight\r\n                        color='white'\r\n                        position={[sunlightDirection.x, sunlightDirection.y, sunlightDirection.z]}\r\n                        intensity={sunAboveHorizon ? 0.5 : 0}\r\n                        castShadow\r\n                        shadow-mapSize-height={512}\r\n                        shadow-mapSize-width={512}\r\n                    />\r\n                    <gridHelper args={[500, 100, 'gray', 'gray']}/>\r\n                    <Compass/>\r\n                    <Axes/>\r\n                    <Ground/>\r\n                    <Sky type={sunAboveHorizon ? 'day sky' : 'night sky'}/>\r\n                    {heliodon &&\r\n                    <Heliodon\r\n                        hourAngle={hourAngle}\r\n                        declinationAngle={declinationAngle}\r\n                        radius={radius}\r\n                        date={now}\r\n                        latitude={Util.toRadians(latitude)}\r\n                    />}\r\n                    {world && <Scene world={world}/>}\r\n                </Suspense>\r\n            </Canvas>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*\n * @Copyright 2021. Institute for Future Intelligence, Inc.\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}